{
	"id": "e3577265698d2dd43ba2544a65f73086",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"AutomatorCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ninterface IPancakeRouter {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint, uint, uint);\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n\ninterface IPancakeFactory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\ncontract ATC is ERC20, Ownable, ReentrancyGuard {\n    IPancakeRouter public router;\n    address public pair;\n\n    // Tax structure (25% total)\n    uint256 public constant BUY_TAX = 2500; // 25%\n    uint256 public constant SELL_TAX = 2500; // 25%\n    uint256 private constant TAX_DENOMINATOR = 10000;\n\n    // Tax distribution\n    uint256 public lpTax = 500;     // 5% of 25%\n    uint256 public devTax = 1000;   // 10% of 25%\n    uint256 public artistTax = 500; // 5% of 25%\n    uint256 public marketingTax = 500; // 5% of 25%\n\n    // Wallets\n    address public devWallet;\n    address public artistWallet;\n    address public marketingWallet;\n\n    // Swap settings\n    uint256 public swapThreshold = 50_000 * 10**18;\n    bool private swapping;\n\n    // Trading control\n    bool public tradingEnabled;\n    mapping(address => bool) public isExcludedFromFee;\n\n    event SwapAndLiquify(uint256 tokensSwapped, uint256 bnbReceived, uint256 tokensIntoLiquidity);\n\n    constructor() ERC20(\"Automator Coin\", \"ATC\") Ownable(msg.sender) {\n        _mint(msg.sender, 1_000_000_000 * 10**18);\n\n        // Initialize PancakeSwap\n        router = IPancakeRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n        pair = IPancakeFactory(router.factory()).createPair(address(this), router.WETH());\n\n        // Set wallets\n        devWallet = 0x73aDd9B0Fae851F9f203Ba5346D240C32d5af259;\n        artistWallet = 0xfbd336B10D3Aa003bB0491277bd1b100a7600b7A;\n        marketingWallet = 0xc5e979514ebE80172EdBa7c7cfE38B599E4e4823;\n\n        // Exclude owner and this contract and wallets from fee\n        isExcludedFromFee[msg.sender] = true;\n        isExcludedFromFee[address(this)] = true;\n        isExcludedFromFee[devWallet] = true;\n        isExcludedFromFee[artistWallet] = true;\n        isExcludedFromFee[marketingWallet] = true;\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _customTransfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(sender, spender, amount);\n        _customTransfer(sender, recipient, amount);\n        return true;\n    }\n\n    function _customTransfer(address sender, address recipient, uint256 amount) internal nonReentrant {\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n        require(tradingEnabled || isExcludedFromFee[sender] || isExcludedFromFee[recipient], \"Trading not enabled\");\n\n        uint256 taxAmount = 0;\n\n        if(!isExcludedFromFee[sender] && !isExcludedFromFee[recipient]) {\n            if(recipient == pair) { // Sell\n                taxAmount = (amount * SELL_TAX) / TAX_DENOMINATOR;\n            } else if(sender == pair) { // Buy\n                taxAmount = (amount * BUY_TAX) / TAX_DENOMINATOR;\n            }\n            \n            if(taxAmount > 0) {\n                uint256 lpTokens = (taxAmount * lpTax) / SELL_TAX;\n                uint256 devTokens = (taxAmount * devTax) / SELL_TAX;\n                uint256 artistTokens = (taxAmount * artistTax) / SELL_TAX;\n                uint256 marketingTokens = taxAmount - lpTokens - devTokens - artistTokens;\n\n                super._transfer(sender, address(this), lpTokens);\n                super._transfer(sender, devWallet, devTokens);\n                super._transfer(sender, artistWallet, artistTokens);\n                super._transfer(sender, marketingWallet, marketingTokens);\n\n                amount -= taxAmount;\n\n                if(recipient == pair && balanceOf(address(this)) >= swapThreshold && !swapping) {\n                    swapAndLiquify();\n                }\n            }\n        }\n\n        super._transfer(sender, recipient, amount);\n    }\n\n    function swapAndLiquify() private {\n        swapping = true;\n        uint256 contractBalance = balanceOf(address(this));\n        uint256 half = contractBalance / 2;\n        uint256 otherHalf = contractBalance - half;\n\n        // Corrected path array declaration\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = router.WETH(); // Fixed from METM to WETH\n\n        uint256 initialBNB = address(this).balance;\n\n        _approve(address(this), address(router), half);\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            half, 0, path, address(this), block.timestamp\n        );\n\n        uint256 newBNB = address(this).balance - initialBNB;\n\n        _approve(address(this), address(router), otherHalf);\n        router.addLiquidityETH{value: newBNB}(\n            address(this),\n            otherHalf,\n            0,\n            0,\n            0x000000000000000000000000000000000000dEaD,\n            block.timestamp\n        );\n\n        emit SwapAndLiquify(half, newBNB, otherHalf);\n        swapping = false;\n    }\n\n    function enableTrading() external onlyOwner {\n        tradingEnabled = true;\n    }\n\n    function updateWallets(address _dev, address _artist, address _marketing) external onlyOwner {\n        devWallet = _dev;\n        artistWallet = _artist;\n        marketingWallet = _marketing;\n        isExcludedFromFee[devWallet] = true;\n        isExcludedFromFee[artistWallet] = true;\n        isExcludedFromFee[marketingWallet] = true;\n    }\n\n    function setExcludedFromFee(address account, bool excluded) external onlyOwner {\n        isExcludedFromFee[account] = excluded;\n    }\n\n    function setSwapThreshold(uint256 amount) external onlyOwner {\n        swapThreshold = amount;\n    }\n\n    function withdrawStuckTokens(address token) external onlyOwner {\n        require(token != address(this), \"Cannot withdraw ATC\");\n        IERC20(token).transfer(msg.sender, IERC20(token).balanceOf(address(this)));\n    }\n\n    receive() external payable {}\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AutomatorCoin.sol": {
				"ATC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensSwapped",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "bnbReceived",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensIntoLiquidity",
									"type": "uint256"
								}
							],
							"name": "SwapAndLiquify",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BUY_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SELL_TAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "artistTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "artistWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "contract IPancakeRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "excluded",
									"type": "bool"
								}
							],
							"name": "setExcludedFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setSwapThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dev",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_artist",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketing",
									"type": "address"
								}
							],
							"name": "updateWallets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawStuckTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AutomatorCoin.sol\":931:6766  contract ATC is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"AutomatorCoin.sol\":1283:1286  500 */\n  0x01f4\n    /* \"AutomatorCoin.sol\":1260:1286  uint256 public lpTax = 500 */\n  0x09\n  sstore\n    /* \"AutomatorCoin.sol\":1333:1337  1000 */\n  0x03e8\n    /* \"AutomatorCoin.sol\":1309:1337  uint256 public devTax = 1000 */\n  0x0a\n  sstore\n    /* \"AutomatorCoin.sol\":1386:1389  500 */\n  0x01f4\n    /* \"AutomatorCoin.sol\":1359:1389  uint256 public artistTax = 500 */\n  0x0b\n  sstore\n    /* \"AutomatorCoin.sol\":1438:1441  500 */\n  0x01f4\n    /* \"AutomatorCoin.sol\":1408:1441  uint256 public marketingTax = 500 */\n  0x0c\n  sstore\n    /* \"AutomatorCoin.sol\":1628:1643  50_000 * 10**18 */\n  0x0a968163f0a57b400000\n    /* \"AutomatorCoin.sol\":1597:1643  uint256 public swapThreshold = 50_000 * 10**18 */\n  0x10\n  sstore\n    /* \"AutomatorCoin.sol\":1888:2743  constructor() ERC20(\"Automator Coin\", \"ATC\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"AutomatorCoin.sol\":1941:1951  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x4175746f6d61746f7220436f696e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4154430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":1963:2004  _mint(msg.sender, 1_000_000_000 * 10**18) */\n  tag_18\n    /* \"AutomatorCoin.sol\":1969:1979  msg.sender */\n  caller\n    /* \"AutomatorCoin.sol\":1981:2003  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"AutomatorCoin.sol\":1963:1968  _mint */\n  shl(0x20, tag_19)\n    /* \"AutomatorCoin.sol\":1963:2004  _mint(msg.sender, 1_000_000_000 * 10**18) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"AutomatorCoin.sol\":2073:2115  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"AutomatorCoin.sol\":2049:2055  router */\n  0x07\n  0x00\n    /* \"AutomatorCoin.sol\":2049:2116  router = IPancakeRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2149:2155  router */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"AutomatorCoin.sol\":2149:2163  router.factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc45a0155\n    /* \"AutomatorCoin.sol\":2149:2165  router.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_21:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"AutomatorCoin.sol\":2133:2177  IPancakeFactory(router.factory()).createPair */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc9c65396\n    /* \"AutomatorCoin.sol\":2186:2190  this */\n  address\n    /* \"AutomatorCoin.sol\":2193:2199  router */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"AutomatorCoin.sol\":2193:2204  router.WETH */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xad5c4648\n    /* \"AutomatorCoin.sol\":2193:2206  router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_25\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_25:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_26\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_26:\n    /* \"AutomatorCoin.sol\":2133:2207  IPancakeFactory(router.factory()).createPair(address(this), router.WETH()) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap3\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_30\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_31\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"AutomatorCoin.sol\":2126:2130  pair */\n  0x08\n  0x00\n    /* \"AutomatorCoin.sol\":2126:2207  pair = IPancakeFactory(router.factory()).createPair(address(this), router.WETH()) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2253:2295  0x73aDd9B0Fae851F9f203Ba5346D240C32d5af259 */\n  0x73add9b0fae851f9f203ba5346d240c32d5af259\n    /* \"AutomatorCoin.sol\":2241:2250  devWallet */\n  0x0d\n  0x00\n    /* \"AutomatorCoin.sol\":2241:2295  devWallet = 0x73aDd9B0Fae851F9f203Ba5346D240C32d5af259 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2320:2362  0xfbd336B10D3Aa003bB0491277bd1b100a7600b7A */\n  0xfbd336b10d3aa003bb0491277bd1b100a7600b7a\n    /* \"AutomatorCoin.sol\":2305:2317  artistWallet */\n  0x0e\n  0x00\n    /* \"AutomatorCoin.sol\":2305:2362  artistWallet = 0xfbd336B10D3Aa003bB0491277bd1b100a7600b7A */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2390:2432  0xc5e979514ebE80172EdBa7c7cfE38B599E4e4823 */\n  0xc5e979514ebe80172edba7c7cfe38b599e4e4823\n    /* \"AutomatorCoin.sol\":2372:2387  marketingWallet */\n  0x0f\n  0x00\n    /* \"AutomatorCoin.sol\":2372:2432  marketingWallet = 0xc5e979514ebE80172EdBa7c7cfE38B599E4e4823 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2539:2543  true */\n  0x01\n    /* \"AutomatorCoin.sol\":2507:2524  isExcludedFromFee */\n  0x12\n    /* \"AutomatorCoin.sol\":2507:2536  isExcludedFromFee[msg.sender] */\n  0x00\n    /* \"AutomatorCoin.sol\":2525:2535  msg.sender */\n  caller\n    /* \"AutomatorCoin.sol\":2507:2536  isExcludedFromFee[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"AutomatorCoin.sol\":2507:2543  isExcludedFromFee[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2588:2592  true */\n  0x01\n    /* \"AutomatorCoin.sol\":2553:2570  isExcludedFromFee */\n  0x12\n    /* \"AutomatorCoin.sol\":2553:2585  isExcludedFromFee[address(this)] */\n  0x00\n    /* \"AutomatorCoin.sol\":2579:2583  this */\n  address\n    /* \"AutomatorCoin.sol\":2553:2585  isExcludedFromFee[address(this)] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"AutomatorCoin.sol\":2553:2592  isExcludedFromFee[address(this)] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2633:2637  true */\n  0x01\n    /* \"AutomatorCoin.sol\":2602:2619  isExcludedFromFee */\n  0x12\n    /* \"AutomatorCoin.sol\":2602:2630  isExcludedFromFee[devWallet] */\n  0x00\n    /* \"AutomatorCoin.sol\":2620:2629  devWallet */\n  0x0d\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"AutomatorCoin.sol\":2602:2630  isExcludedFromFee[devWallet] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"AutomatorCoin.sol\":2602:2637  isExcludedFromFee[devWallet] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2681:2685  true */\n  0x01\n    /* \"AutomatorCoin.sol\":2647:2664  isExcludedFromFee */\n  0x12\n    /* \"AutomatorCoin.sol\":2647:2678  isExcludedFromFee[artistWallet] */\n  0x00\n    /* \"AutomatorCoin.sol\":2665:2677  artistWallet */\n  0x0e\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"AutomatorCoin.sol\":2647:2678  isExcludedFromFee[artistWallet] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"AutomatorCoin.sol\":2647:2685  isExcludedFromFee[artistWallet] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":2732:2736  true */\n  0x01\n    /* \"AutomatorCoin.sol\":2695:2712  isExcludedFromFee */\n  0x12\n    /* \"AutomatorCoin.sol\":2695:2729  isExcludedFromFee[marketingWallet] */\n  0x00\n    /* \"AutomatorCoin.sol\":2713:2728  marketingWallet */\n  0x0f\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"AutomatorCoin.sol\":2695:2729  isExcludedFromFee[marketingWallet] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"AutomatorCoin.sol\":2695:2736  isExcludedFromFee[marketingWallet] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AutomatorCoin.sol\":931:6766  contract ATC is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_43)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_48)\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_51:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_52:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_53:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_54:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_86:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_88\n  tag_53\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":714:798   */\ntag_87:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_55:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_56:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_57:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_58:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_93\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_57\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1429:1468   */\n  tag_94\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_57\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_59:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_60:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_61:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_98\n    /* \"#utility.yul\":1818:1852   */\n  tag_99\n    /* \"#utility.yul\":1827:1851   */\n  tag_100\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_59\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1818:1852   */\n  tag_60\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1800:1853   */\n  tag_59\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_62:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_63:\n    /* \"#utility.yul\":2056:2095   */\n  tag_103\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_61\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2117:2208   */\n  tag_104\n    /* \"#utility.yul\":2166:2207   */\n  tag_105\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_62\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_58\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_64:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_65:\n    /* \"#utility.yul\":2377:2409   */\n  tag_108\n  tag_64\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2418:2483   */\n  tag_109\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_63\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_66:\n    /* \"#utility.yul\":2555:2675   */\ntag_111:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_114\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_67:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_117\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_55\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2906:2935   */\n  tag_118\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_56\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_119:\n    /* \"#utility.yul\":3133:3213   */\n  tag_120\n    /* \"#utility.yul\":3189:3211   */\n  tag_121\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_56\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_66\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_116:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_68:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_69:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_124\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_68\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_70:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_126\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_69\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_128\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_51\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_130\n  tag_52\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4038:4094   */\ntag_129:\n    /* \"#utility.yul\":4118:4156   */\n  tag_131\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_54\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4203:4270   */\n  tag_132\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_135:\n    /* \"#utility.yul\":5144:5211   */\n  tag_136\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_70\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_133)\n    /* \"#utility.yul\":4365:4983   */\ntag_134:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_137\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_55\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_138:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_142\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_69\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_141:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_133:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_71:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_72:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_145\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_71\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_73:\n    /* \"#utility.yul\":5555:5579   */\n  tag_147\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_72\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_149\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_73\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5901:6018   */\ntag_75:\n    /* \"#utility.yul\":6010:6011   */\n  0x00\n    /* \"#utility.yul\":6007:6008   */\n  dup1\n    /* \"#utility.yul\":6000:6012   */\n  revert\n    /* \"#utility.yul\":6147:6269   */\ntag_77:\n    /* \"#utility.yul\":6220:6244   */\n  tag_154\n    /* \"#utility.yul\":6238:6243   */\n  dup2\n    /* \"#utility.yul\":6220:6244   */\n  tag_72\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6213:6218   */\n  dup2\n    /* \"#utility.yul\":6210:6245   */\n  eq\n    /* \"#utility.yul\":6200:6263   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6259:6260   */\n  0x00\n    /* \"#utility.yul\":6256:6257   */\n  dup1\n    /* \"#utility.yul\":6249:6261   */\n  revert\n    /* \"#utility.yul\":6200:6263   */\ntag_155:\n    /* \"#utility.yul\":6147:6269   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6275:6418   */\ntag_78:\n    /* \"#utility.yul\":6332:6337   */\n  0x00\n    /* \"#utility.yul\":6363:6369   */\n  dup2\n    /* \"#utility.yul\":6357:6370   */\n  mload\n    /* \"#utility.yul\":6348:6370   */\n  swap1\n  pop\n    /* \"#utility.yul\":6379:6412   */\n  tag_157\n    /* \"#utility.yul\":6406:6411   */\n  dup2\n    /* \"#utility.yul\":6379:6412   */\n  tag_77\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6275:6418   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6424:6775   */\ntag_23:\n    /* \"#utility.yul\":6494:6500   */\n  0x00\n    /* \"#utility.yul\":6543:6545   */\n  0x20\n    /* \"#utility.yul\":6531:6540   */\n  dup3\n    /* \"#utility.yul\":6522:6529   */\n  dup5\n    /* \"#utility.yul\":6518:6541   */\n  sub\n    /* \"#utility.yul\":6514:6546   */\n  slt\n    /* \"#utility.yul\":6511:6630   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":6549:6628   */\n  tag_160\n  tag_75\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6511:6630   */\ntag_159:\n    /* \"#utility.yul\":6669:6670   */\n  0x00\n    /* \"#utility.yul\":6694:6758   */\n  tag_161\n    /* \"#utility.yul\":6750:6757   */\n  dup5\n    /* \"#utility.yul\":6741:6747   */\n  dup3\n    /* \"#utility.yul\":6730:6739   */\n  dup6\n    /* \"#utility.yul\":6726:6748   */\n  add\n    /* \"#utility.yul\":6694:6758   */\n  tag_78\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6684:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6640:6768   */\n  pop\n    /* \"#utility.yul\":6424:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:7113   */\ntag_28:\n    /* \"#utility.yul\":6902:6906   */\n  0x00\n    /* \"#utility.yul\":6940:6942   */\n  0x40\n    /* \"#utility.yul\":6929:6938   */\n  dup3\n    /* \"#utility.yul\":6925:6943   */\n  add\n    /* \"#utility.yul\":6917:6943   */\n  swap1\n  pop\n    /* \"#utility.yul\":6953:7024   */\n  tag_163\n    /* \"#utility.yul\":7021:7022   */\n  0x00\n    /* \"#utility.yul\":7010:7019   */\n  dup4\n    /* \"#utility.yul\":7006:7023   */\n  add\n    /* \"#utility.yul\":6997:7003   */\n  dup6\n    /* \"#utility.yul\":6953:7024   */\n  tag_73\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7034:7106   */\n  tag_164\n    /* \"#utility.yul\":7102:7104   */\n  0x20\n    /* \"#utility.yul\":7091:7100   */\n  dup4\n    /* \"#utility.yul\":7087:7105   */\n  add\n    /* \"#utility.yul\":7078:7084   */\n  dup5\n    /* \"#utility.yul\":7034:7106   */\n  tag_73\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6781:7113   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7119:7299   */\ntag_79:\n    /* \"#utility.yul\":7167:7244   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7164:7165   */\n  0x00\n    /* \"#utility.yul\":7157:7245   */\n  mstore\n    /* \"#utility.yul\":7264:7268   */\n  0x11\n    /* \"#utility.yul\":7261:7262   */\n  0x04\n    /* \"#utility.yul\":7254:7269   */\n  mstore\n    /* \"#utility.yul\":7288:7292   */\n  0x24\n    /* \"#utility.yul\":7285:7286   */\n  0x00\n    /* \"#utility.yul\":7278:7293   */\n  revert\n    /* \"#utility.yul\":7305:7496   */\ntag_42:\n    /* \"#utility.yul\":7345:7348   */\n  0x00\n    /* \"#utility.yul\":7364:7384   */\n  tag_167\n    /* \"#utility.yul\":7382:7383   */\n  dup3\n    /* \"#utility.yul\":7364:7384   */\n  tag_59\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7359:7384   */\n  swap2\n  pop\n    /* \"#utility.yul\":7398:7418   */\n  tag_168\n    /* \"#utility.yul\":7416:7417   */\n  dup4\n    /* \"#utility.yul\":7398:7418   */\n  tag_59\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7393:7418   */\n  swap3\n  pop\n    /* \"#utility.yul\":7441:7442   */\n  dup3\n    /* \"#utility.yul\":7438:7439   */\n  dup3\n    /* \"#utility.yul\":7434:7443   */\n  add\n    /* \"#utility.yul\":7427:7443   */\n  swap1\n  pop\n    /* \"#utility.yul\":7462:7465   */\n  dup1\n    /* \"#utility.yul\":7459:7460   */\n  dup3\n    /* \"#utility.yul\":7456:7466   */\n  gt\n    /* \"#utility.yul\":7453:7489   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7469:7487   */\n  tag_170\n  tag_79\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7453:7489   */\ntag_169:\n    /* \"#utility.yul\":7305:7496   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7502:7620   */\ntag_80:\n    /* \"#utility.yul\":7589:7613   */\n  tag_172\n    /* \"#utility.yul\":7607:7612   */\n  dup2\n    /* \"#utility.yul\":7589:7613   */\n  tag_59\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7584:7587   */\n  dup3\n    /* \"#utility.yul\":7577:7614   */\n  mstore\n    /* \"#utility.yul\":7502:7620   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7626:8068   */\ntag_46:\n    /* \"#utility.yul\":7775:7779   */\n  0x00\n    /* \"#utility.yul\":7813:7815   */\n  0x60\n    /* \"#utility.yul\":7802:7811   */\n  dup3\n    /* \"#utility.yul\":7798:7816   */\n  add\n    /* \"#utility.yul\":7790:7816   */\n  swap1\n  pop\n    /* \"#utility.yul\":7826:7897   */\n  tag_174\n    /* \"#utility.yul\":7894:7895   */\n  0x00\n    /* \"#utility.yul\":7883:7892   */\n  dup4\n    /* \"#utility.yul\":7879:7896   */\n  add\n    /* \"#utility.yul\":7870:7876   */\n  dup7\n    /* \"#utility.yul\":7826:7897   */\n  tag_73\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7907:7979   */\n  tag_175\n    /* \"#utility.yul\":7975:7977   */\n  0x20\n    /* \"#utility.yul\":7964:7973   */\n  dup4\n    /* \"#utility.yul\":7960:7978   */\n  add\n    /* \"#utility.yul\":7951:7957   */\n  dup6\n    /* \"#utility.yul\":7907:7979   */\n  tag_80\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7989:8061   */\n  tag_176\n    /* \"#utility.yul\":8057:8059   */\n  0x40\n    /* \"#utility.yul\":8046:8055   */\n  dup4\n    /* \"#utility.yul\":8042:8060   */\n  add\n    /* \"#utility.yul\":8033:8039   */\n  dup5\n    /* \"#utility.yul\":7989:8061   */\n  tag_80\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7626:8068   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8074:8296   */\ntag_50:\n    /* \"#utility.yul\":8167:8171   */\n  0x00\n    /* \"#utility.yul\":8205:8207   */\n  0x20\n    /* \"#utility.yul\":8194:8203   */\n  dup3\n    /* \"#utility.yul\":8190:8208   */\n  add\n    /* \"#utility.yul\":8182:8208   */\n  swap1\n  pop\n    /* \"#utility.yul\":8218:8289   */\n  tag_178\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8275:8284   */\n  dup4\n    /* \"#utility.yul\":8271:8288   */\n  add\n    /* \"#utility.yul\":8262:8268   */\n  dup5\n    /* \"#utility.yul\":8218:8289   */\n  tag_80\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8074:8296   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"AutomatorCoin.sol\":931:6766  contract ATC is ERC20, Ownable, ReentrancyGuard {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AutomatorCoin.sol\":931:6766  contract ATC is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa3342fba\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd862686b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xd862686b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa3342fba\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa8aa1b31\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcb963728\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8ea5220f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9d0014b1\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8a8c523c\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x1de3b450\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x5342acb4\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x54ad8aee\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6612e66f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x665c6de9\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x1de3b450\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x095ea7b3\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x147c9f6d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1d2cb02d\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x02af37bb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0445b667\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"AutomatorCoin.sol\":1078:1116  uint256 public constant BUY_TAX = 2500 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1597:1643  uint256 public swapThreshold = 50_000 * 10**18 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":5920:6260  function updateWallets(address _dev, address _artist, address _marketing) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1408:1441  uint256 public marketingTax = 500 */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1260:1286  uint256 public lpTax = 500 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":2925:3199  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1700:1726  bool public tradingEnabled */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1732:1781  mapping(address => bool) public isExcludedFromFee */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1129:1168  uint256 public constant SELL_TAX = 2500 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":6266:6399  function setExcludedFromFee(address account, bool excluded) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      stop\n        /* \"AutomatorCoin.sol\":1309:1337  uint256 public devTax = 1000 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      stop\n        /* \"AutomatorCoin.sol\":1539:1569  address public marketingWallet */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":5832:5914  function enableTrading() external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1476:1500  address public devWallet */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":6405:6505  function setSwapThreshold(uint256 amount) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n    tag_144:\n      stop\n        /* \"AutomatorCoin.sol\":1506:1533  address public artistWallet */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1019:1038  address public pair */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":2749:2919  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":6511:6729  function withdrawStuckTokens(address token) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_162\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n    tag_162:\n      stop\n        /* \"AutomatorCoin.sol\":1359:1389  uint256 public artistTax = 500 */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      tag_173\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_176\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n    tag_176:\n      stop\n        /* \"AutomatorCoin.sol\":985:1013  IPancakeRouter public router */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AutomatorCoin.sol\":1078:1116  uint256 public constant BUY_TAX = 2500 */\n    tag_45:\n        /* \"AutomatorCoin.sol\":1112:1116  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":1078:1116  uint256 public constant BUY_TAX = 2500 */\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1597:1643  uint256 public swapThreshold = 50_000 * 10**18 */\n    tag_50:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_186\n      jump\t// in\n    tag_187:\n      dup1\n      iszero\n      tag_188\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_189\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_188)\n    tag_189:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_190:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_190\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":5920:6260  function updateWallets(address _dev, address _artist, address _marketing) external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"AutomatorCoin.sol\":6035:6039  _dev */\n      dup3\n        /* \"AutomatorCoin.sol\":6023:6032  devWallet */\n      0x0d\n      0x00\n        /* \"AutomatorCoin.sol\":6023:6039  devWallet = _dev */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6064:6071  _artist */\n      dup2\n        /* \"AutomatorCoin.sol\":6049:6061  artistWallet */\n      0x0e\n      0x00\n        /* \"AutomatorCoin.sol\":6049:6071  artistWallet = _artist */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6099:6109  _marketing */\n      dup1\n        /* \"AutomatorCoin.sol\":6081:6096  marketingWallet */\n      0x0f\n      0x00\n        /* \"AutomatorCoin.sol\":6081:6109  marketingWallet = _marketing */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6150:6154  true */\n      0x01\n        /* \"AutomatorCoin.sol\":6119:6136  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":6119:6147  isExcludedFromFee[devWallet] */\n      0x00\n        /* \"AutomatorCoin.sol\":6137:6146  devWallet */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":6119:6147  isExcludedFromFee[devWallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"AutomatorCoin.sol\":6119:6154  isExcludedFromFee[devWallet] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6198:6202  true */\n      0x01\n        /* \"AutomatorCoin.sol\":6164:6181  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":6164:6195  isExcludedFromFee[artistWallet] */\n      0x00\n        /* \"AutomatorCoin.sol\":6182:6194  artistWallet */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":6164:6195  isExcludedFromFee[artistWallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"AutomatorCoin.sol\":6164:6202  isExcludedFromFee[artistWallet] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6249:6253  true */\n      0x01\n        /* \"AutomatorCoin.sol\":6212:6229  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":6212:6246  isExcludedFromFee[marketingWallet] */\n      0x00\n        /* \"AutomatorCoin.sol\":6230:6245  marketingWallet */\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":6212:6246  isExcludedFromFee[marketingWallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"AutomatorCoin.sol\":6212:6253  isExcludedFromFee[marketingWallet] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":5920:6260  function updateWallets(address _dev, address _artist, address _marketing) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1408:1441  uint256 public marketingTax = 500 */\n    tag_75:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1260:1286  uint256 public lpTax = 500 */\n    tag_79:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":2925:3199  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_85:\n        /* \"AutomatorCoin.sol\":3023:3027  bool */\n      0x00\n        /* \"AutomatorCoin.sol\":3039:3054  address spender */\n      dup1\n        /* \"AutomatorCoin.sol\":3057:3069  _msgSender() */\n      tag_202\n        /* \"AutomatorCoin.sol\":3057:3067  _msgSender */\n      tag_193\n        /* \"AutomatorCoin.sol\":3057:3069  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"AutomatorCoin.sol\":3039:3069  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":3079:3119  _spendAllowance(sender, spender, amount) */\n      tag_203\n        /* \"AutomatorCoin.sol\":3095:3101  sender */\n      dup6\n        /* \"AutomatorCoin.sol\":3103:3110  spender */\n      dup3\n        /* \"AutomatorCoin.sol\":3112:3118  amount */\n      dup6\n        /* \"AutomatorCoin.sol\":3079:3094  _spendAllowance */\n      tag_204\n        /* \"AutomatorCoin.sol\":3079:3119  _spendAllowance(sender, spender, amount) */\n      jump\t// in\n    tag_203:\n        /* \"AutomatorCoin.sol\":3129:3171  _customTransfer(sender, recipient, amount) */\n      tag_205\n        /* \"AutomatorCoin.sol\":3145:3151  sender */\n      dup6\n        /* \"AutomatorCoin.sol\":3153:3162  recipient */\n      dup6\n        /* \"AutomatorCoin.sol\":3164:3170  amount */\n      dup6\n        /* \"AutomatorCoin.sol\":3129:3144  _customTransfer */\n      tag_206\n        /* \"AutomatorCoin.sol\":3129:3171  _customTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_205:\n        /* \"AutomatorCoin.sol\":3188:3192  true */\n      0x01\n        /* \"AutomatorCoin.sol\":3181:3192  return true */\n      swap2\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":2925:3199  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1700:1726  bool public tradingEnabled */\n    tag_94:\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1732:1781  mapping(address => bool) public isExcludedFromFee */\n    tag_100:\n      mstore(0x20, 0x12)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1129:1168  uint256 public constant SELL_TAX = 2500 */\n    tag_104:\n        /* \"AutomatorCoin.sol\":1164:1168  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":1129:1168  uint256 public constant SELL_TAX = 2500 */\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":6266:6399  function setExcludedFromFee(address account, bool excluded) external onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"AutomatorCoin.sol\":6384:6392  excluded */\n      dup1\n        /* \"AutomatorCoin.sol\":6355:6372  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":6355:6381  isExcludedFromFee[account] */\n      0x00\n        /* \"AutomatorCoin.sol\":6373:6380  account */\n      dup5\n        /* \"AutomatorCoin.sol\":6355:6381  isExcludedFromFee[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"AutomatorCoin.sol\":6355:6392  isExcludedFromFee[account] = excluded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6266:6399  function setExcludedFromFee(address account, bool excluded) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1309:1337  uint256 public devTax = 1000 */\n    tag_113:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1539:1569  address public marketingWallet */\n    tag_125:\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":5832:5914  function enableTrading() external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"AutomatorCoin.sol\":5903:5907  true */\n      0x01\n        /* \"AutomatorCoin.sol\":5886:5900  tradingEnabled */\n      0x11\n      0x01\n        /* \"AutomatorCoin.sol\":5886:5907  tradingEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":5832:5914  function enableTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1476:1500  address public devWallet */\n    tag_137:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_186\n      jump\t// in\n    tag_222:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_186\n      jump\t// in\n    tag_223:\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_225\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_224)\n    tag_225:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_226:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_226\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"AutomatorCoin.sol\":6405:6505  function setSwapThreshold(uint256 amount) external onlyOwner {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"AutomatorCoin.sol\":6492:6498  amount */\n      dup1\n        /* \"AutomatorCoin.sol\":6476:6489  swapThreshold */\n      0x10\n        /* \"AutomatorCoin.sol\":6476:6498  swapThreshold = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":6405:6505  function setSwapThreshold(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1506:1533  address public artistWallet */\n    tag_150:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1019:1038  address public pair */\n    tag_154:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AutomatorCoin.sol\":2749:2919  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_159:\n        /* \"AutomatorCoin.sol\":2827:2831  bool */\n      0x00\n        /* \"AutomatorCoin.sol\":2843:2891  _customTransfer(_msgSender(), recipient, amount) */\n      tag_231\n        /* \"AutomatorCoin.sol\":2859:2871  _msgSender() */\n      tag_232\n        /* \"AutomatorCoin.sol\":2859:2869  _msgSender */\n      tag_193\n        /* \"AutomatorCoin.sol\":2859:2871  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"AutomatorCoin.sol\":2873:2882  recipient */\n      dup5\n        /* \"AutomatorCoin.sol\":2884:2890  amount */\n      dup5\n        /* \"AutomatorCoin.sol\":2843:2858  _customTransfer */\n      tag_206\n        /* \"AutomatorCoin.sol\":2843:2891  _customTransfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_231:\n        /* \"AutomatorCoin.sol\":2908:2912  true */\n      0x01\n        /* \"AutomatorCoin.sol\":2901:2912  return true */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":2749:2919  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":6511:6729  function withdrawStuckTokens(address token) external onlyOwner {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"AutomatorCoin.sol\":6609:6613  this */\n      address\n        /* \"AutomatorCoin.sol\":6592:6614  token != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":6592:6597  token */\n      dup2\n        /* \"AutomatorCoin.sol\":6592:6614  token != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"AutomatorCoin.sol\":6584:6638  require(token != address(this), \"Cannot withdraw ATC\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"AutomatorCoin.sol\":6655:6660  token */\n      dup1\n        /* \"AutomatorCoin.sol\":6648:6670  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"AutomatorCoin.sol\":6671:6681  msg.sender */\n      caller\n        /* \"AutomatorCoin.sol\":6690:6695  token */\n      dup4\n        /* \"AutomatorCoin.sol\":6683:6706  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AutomatorCoin.sol\":6715:6719  this */\n      address\n        /* \"AutomatorCoin.sol\":6683:6721  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_239:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"AutomatorCoin.sol\":6648:6722  IERC20(token).transfer(msg.sender, IERC20(token).balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      pop\n        /* \"AutomatorCoin.sol\":6511:6729  function withdrawStuckTokens(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":1359:1389  uint256 public artistTax = 500 */\n    tag_167:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":985:1013  IPancakeRouter public router */\n    tag_181:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_193\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":3205:4737  function _customTransfer(address sender, address recipient, uint256 amount) internal nonReentrant {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_275\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_276\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_275:\n        /* \"AutomatorCoin.sol\":3330:3331  0 */\n      0x00\n        /* \"AutomatorCoin.sol\":3321:3327  amount */\n      dup2\n        /* \"AutomatorCoin.sol\":3321:3331  amount > 0 */\n      gt\n        /* \"AutomatorCoin.sol\":3313:3377  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"AutomatorCoin.sol\":3395:3409  tradingEnabled */\n      0x11\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AutomatorCoin.sol\":3395:3438  tradingEnabled || isExcludedFromFee[sender] */\n      dup1\n      tag_281\n      jumpi\n      pop\n        /* \"AutomatorCoin.sol\":3413:3430  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":3413:3438  isExcludedFromFee[sender] */\n      0x00\n        /* \"AutomatorCoin.sol\":3431:3437  sender */\n      dup5\n        /* \"AutomatorCoin.sol\":3413:3438  isExcludedFromFee[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AutomatorCoin.sol\":3395:3438  tradingEnabled || isExcludedFromFee[sender] */\n    tag_281:\n        /* \"AutomatorCoin.sol\":3395:3470  tradingEnabled || isExcludedFromFee[sender] || isExcludedFromFee[recipient] */\n      dup1\n      tag_282\n      jumpi\n      pop\n        /* \"AutomatorCoin.sol\":3442:3459  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":3442:3470  isExcludedFromFee[recipient] */\n      0x00\n        /* \"AutomatorCoin.sol\":3460:3469  recipient */\n      dup4\n        /* \"AutomatorCoin.sol\":3442:3470  isExcludedFromFee[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AutomatorCoin.sol\":3395:3470  tradingEnabled || isExcludedFromFee[sender] || isExcludedFromFee[recipient] */\n    tag_282:\n        /* \"AutomatorCoin.sol\":3387:3494  require(tradingEnabled || isExcludedFromFee[sender] || isExcludedFromFee[recipient], \"Trading not enabled\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"AutomatorCoin.sol\":3505:3522  uint256 taxAmount */\n      0x00\n        /* \"AutomatorCoin.sol\":3541:3558  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":3541:3566  isExcludedFromFee[sender] */\n      0x00\n        /* \"AutomatorCoin.sol\":3559:3565  sender */\n      dup6\n        /* \"AutomatorCoin.sol\":3541:3566  isExcludedFromFee[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AutomatorCoin.sol\":3540:3566  !isExcludedFromFee[sender] */\n      iszero\n        /* \"AutomatorCoin.sol\":3540:3599  !isExcludedFromFee[sender] && !isExcludedFromFee[recipient] */\n      dup1\n      iszero\n      tag_286\n      jumpi\n      pop\n        /* \"AutomatorCoin.sol\":3571:3588  isExcludedFromFee */\n      0x12\n        /* \"AutomatorCoin.sol\":3571:3599  isExcludedFromFee[recipient] */\n      0x00\n        /* \"AutomatorCoin.sol\":3589:3598  recipient */\n      dup5\n        /* \"AutomatorCoin.sol\":3571:3599  isExcludedFromFee[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AutomatorCoin.sol\":3570:3599  !isExcludedFromFee[recipient] */\n      iszero\n        /* \"AutomatorCoin.sol\":3540:3599  !isExcludedFromFee[sender] && !isExcludedFromFee[recipient] */\n    tag_286:\n        /* \"AutomatorCoin.sol\":3537:4678  if(!isExcludedFromFee[sender] && !isExcludedFromFee[recipient]) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"AutomatorCoin.sol\":3631:3635  pair */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":3618:3635  recipient == pair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":3618:3627  recipient */\n      dup4\n        /* \"AutomatorCoin.sol\":3618:3635  recipient == pair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"AutomatorCoin.sol\":3615:3840  if(recipient == pair) { // Sell... */\n      tag_288\n      jumpi\n        /* \"AutomatorCoin.sol\":1224:1229  10000 */\n      0x2710\n        /* \"AutomatorCoin.sol\":1164:1168  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":3676:3682  amount */\n      dup4\n        /* \"AutomatorCoin.sol\":3676:3693  amount * SELL_TAX */\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"AutomatorCoin.sol\":3675:3712  (amount * SELL_TAX) / TAX_DENOMINATOR */\n      tag_291\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"AutomatorCoin.sol\":3663:3712  taxAmount = (amount * SELL_TAX) / TAX_DENOMINATOR */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":3615:3840  if(recipient == pair) { // Sell... */\n      jump(tag_293)\n    tag_288:\n        /* \"AutomatorCoin.sol\":3746:3750  pair */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":3736:3750  sender == pair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":3736:3742  sender */\n      dup5\n        /* \"AutomatorCoin.sol\":3736:3750  sender == pair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"AutomatorCoin.sol\":3733:3840  if(sender == pair) { // Buy... */\n      tag_294\n      jumpi\n        /* \"AutomatorCoin.sol\":1224:1229  10000 */\n      0x2710\n        /* \"AutomatorCoin.sol\":1112:1116  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":3790:3796  amount */\n      dup4\n        /* \"AutomatorCoin.sol\":3790:3806  amount * BUY_TAX */\n      tag_295\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_295:\n        /* \"AutomatorCoin.sol\":3789:3825  (amount * BUY_TAX) / TAX_DENOMINATOR */\n      tag_296\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_296:\n        /* \"AutomatorCoin.sol\":3777:3825  taxAmount = (amount * BUY_TAX) / TAX_DENOMINATOR */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":3733:3840  if(sender == pair) { // Buy... */\n    tag_294:\n        /* \"AutomatorCoin.sol\":3615:3840  if(recipient == pair) { // Sell... */\n    tag_293:\n        /* \"AutomatorCoin.sol\":3881:3882  0 */\n      0x00\n        /* \"AutomatorCoin.sol\":3869:3878  taxAmount */\n      dup2\n        /* \"AutomatorCoin.sol\":3869:3882  taxAmount > 0 */\n      gt\n        /* \"AutomatorCoin.sol\":3866:4668  if(taxAmount > 0) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"AutomatorCoin.sol\":3902:3918  uint256 lpTokens */\n      0x00\n        /* \"AutomatorCoin.sol\":1164:1168  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":3934:3939  lpTax */\n      sload(0x09)\n        /* \"AutomatorCoin.sol\":3922:3931  taxAmount */\n      dup4\n        /* \"AutomatorCoin.sol\":3922:3939  taxAmount * lpTax */\n      tag_298\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_298:\n        /* \"AutomatorCoin.sol\":3921:3951  (taxAmount * lpTax) / SELL_TAX */\n      tag_299\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_299:\n        /* \"AutomatorCoin.sol\":3902:3951  uint256 lpTokens = (taxAmount * lpTax) / SELL_TAX */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":3969:3986  uint256 devTokens */\n      0x00\n        /* \"AutomatorCoin.sol\":1164:1168  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":4002:4008  devTax */\n      sload(0x0a)\n        /* \"AutomatorCoin.sol\":3990:3999  taxAmount */\n      dup5\n        /* \"AutomatorCoin.sol\":3990:4008  taxAmount * devTax */\n      tag_300\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_300:\n        /* \"AutomatorCoin.sol\":3989:4020  (taxAmount * devTax) / SELL_TAX */\n      tag_301\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_301:\n        /* \"AutomatorCoin.sol\":3969:4020  uint256 devTokens = (taxAmount * devTax) / SELL_TAX */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":4038:4058  uint256 artistTokens */\n      0x00\n        /* \"AutomatorCoin.sol\":1164:1168  2500 */\n      0x09c4\n        /* \"AutomatorCoin.sol\":4074:4083  artistTax */\n      sload(0x0b)\n        /* \"AutomatorCoin.sol\":4062:4071  taxAmount */\n      dup6\n        /* \"AutomatorCoin.sol\":4062:4083  taxAmount * artistTax */\n      tag_302\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_302:\n        /* \"AutomatorCoin.sol\":4061:4095  (taxAmount * artistTax) / SELL_TAX */\n      tag_303\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_303:\n        /* \"AutomatorCoin.sol\":4038:4095  uint256 artistTokens = (taxAmount * artistTax) / SELL_TAX */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":4113:4136  uint256 marketingTokens */\n      0x00\n        /* \"AutomatorCoin.sol\":4174:4186  artistTokens */\n      dup2\n        /* \"AutomatorCoin.sol\":4162:4171  devTokens */\n      dup4\n        /* \"AutomatorCoin.sol\":4151:4159  lpTokens */\n      dup6\n        /* \"AutomatorCoin.sol\":4139:4148  taxAmount */\n      dup8\n        /* \"AutomatorCoin.sol\":4139:4159  taxAmount - lpTokens */\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"AutomatorCoin.sol\":4139:4171  taxAmount - lpTokens - devTokens */\n      tag_306\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_306:\n        /* \"AutomatorCoin.sol\":4139:4186  taxAmount - lpTokens - devTokens - artistTokens */\n      tag_307\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_307:\n        /* \"AutomatorCoin.sol\":4113:4186  uint256 marketingTokens = taxAmount - lpTokens - devTokens - artistTokens */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":4205:4253  super._transfer(sender, address(this), lpTokens) */\n      tag_308\n        /* \"AutomatorCoin.sol\":4221:4227  sender */\n      dup9\n        /* \"AutomatorCoin.sol\":4237:4241  this */\n      address\n        /* \"AutomatorCoin.sol\":4244:4252  lpTokens */\n      dup7\n        /* \"AutomatorCoin.sol\":4205:4220  super._transfer */\n      tag_309\n        /* \"AutomatorCoin.sol\":4205:4253  super._transfer(sender, address(this), lpTokens) */\n      jump\t// in\n    tag_308:\n        /* \"AutomatorCoin.sol\":4271:4316  super._transfer(sender, devWallet, devTokens) */\n      tag_310\n        /* \"AutomatorCoin.sol\":4287:4293  sender */\n      dup9\n        /* \"AutomatorCoin.sol\":4295:4304  devWallet */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":4306:4315  devTokens */\n      dup6\n        /* \"AutomatorCoin.sol\":4271:4286  super._transfer */\n      tag_309\n        /* \"AutomatorCoin.sol\":4271:4316  super._transfer(sender, devWallet, devTokens) */\n      jump\t// in\n    tag_310:\n        /* \"AutomatorCoin.sol\":4334:4385  super._transfer(sender, artistWallet, artistTokens) */\n      tag_311\n        /* \"AutomatorCoin.sol\":4350:4356  sender */\n      dup9\n        /* \"AutomatorCoin.sol\":4358:4370  artistWallet */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":4372:4384  artistTokens */\n      dup5\n        /* \"AutomatorCoin.sol\":4334:4349  super._transfer */\n      tag_309\n        /* \"AutomatorCoin.sol\":4334:4385  super._transfer(sender, artistWallet, artistTokens) */\n      jump\t// in\n    tag_311:\n        /* \"AutomatorCoin.sol\":4403:4460  super._transfer(sender, marketingWallet, marketingTokens) */\n      tag_312\n        /* \"AutomatorCoin.sol\":4419:4425  sender */\n      dup9\n        /* \"AutomatorCoin.sol\":4427:4442  marketingWallet */\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":4444:4459  marketingTokens */\n      dup4\n        /* \"AutomatorCoin.sol\":4403:4418  super._transfer */\n      tag_309\n        /* \"AutomatorCoin.sol\":4403:4460  super._transfer(sender, marketingWallet, marketingTokens) */\n      jump\t// in\n    tag_312:\n        /* \"AutomatorCoin.sol\":4489:4498  taxAmount */\n      dup5\n        /* \"AutomatorCoin.sol\":4479:4498  amount -= taxAmount */\n      dup7\n      tag_313\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_313:\n      swap6\n      pop\n        /* \"AutomatorCoin.sol\":4533:4537  pair */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":4520:4537  recipient == pair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":4520:4529  recipient */\n      dup8\n        /* \"AutomatorCoin.sol\":4520:4537  recipient == pair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"AutomatorCoin.sol\":4520:4582  recipient == pair && balanceOf(address(this)) >= swapThreshold */\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n        /* \"AutomatorCoin.sol\":4569:4582  swapThreshold */\n      sload(0x10)\n        /* \"AutomatorCoin.sol\":4541:4565  balanceOf(address(this)) */\n      tag_315\n        /* \"AutomatorCoin.sol\":4559:4563  this */\n      address\n        /* \"AutomatorCoin.sol\":4541:4550  balanceOf */\n      tag_118\n        /* \"AutomatorCoin.sol\":4541:4565  balanceOf(address(this)) */\n      jump\t// in\n    tag_315:\n        /* \"AutomatorCoin.sol\":4541:4582  balanceOf(address(this)) >= swapThreshold */\n      lt\n      iszero\n        /* \"AutomatorCoin.sol\":4520:4582  recipient == pair && balanceOf(address(this)) >= swapThreshold */\n    tag_314:\n        /* \"AutomatorCoin.sol\":4520:4595  recipient == pair && balanceOf(address(this)) >= swapThreshold && !swapping */\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n        /* \"AutomatorCoin.sol\":4587:4595  swapping */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"AutomatorCoin.sol\":4586:4595  !swapping */\n      iszero\n        /* \"AutomatorCoin.sol\":4520:4595  recipient == pair && balanceOf(address(this)) >= swapThreshold && !swapping */\n    tag_316:\n        /* \"AutomatorCoin.sol\":4517:4654  if(recipient == pair && balanceOf(address(this)) >= swapThreshold && !swapping) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"AutomatorCoin.sol\":4619:4635  swapAndLiquify() */\n      tag_318\n        /* \"AutomatorCoin.sol\":4619:4633  swapAndLiquify */\n      tag_319\n        /* \"AutomatorCoin.sol\":4619:4635  swapAndLiquify() */\n      jump\t// in\n    tag_318:\n        /* \"AutomatorCoin.sol\":4517:4654  if(recipient == pair && balanceOf(address(this)) >= swapThreshold && !swapping) {... */\n    tag_317:\n        /* \"AutomatorCoin.sol\":3884:4668  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":3866:4668  if(taxAmount > 0) {... */\n    tag_297:\n        /* \"AutomatorCoin.sol\":3537:4678  if(!isExcludedFromFee[sender] && !isExcludedFromFee[recipient]) {... */\n    tag_287:\n        /* \"AutomatorCoin.sol\":4688:4730  super._transfer(sender, recipient, amount) */\n      tag_320\n        /* \"AutomatorCoin.sol\":4704:4710  sender */\n      dup5\n        /* \"AutomatorCoin.sol\":4712:4721  recipient */\n      dup5\n        /* \"AutomatorCoin.sol\":4723:4729  amount */\n      dup5\n        /* \"AutomatorCoin.sol\":4688:4703  super._transfer */\n      tag_309\n        /* \"AutomatorCoin.sol\":4688:4730  super._transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_320:\n        /* \"AutomatorCoin.sol\":3303:4737  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_321\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_322\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_321:\n        /* \"AutomatorCoin.sol\":3205:4737  function _customTransfer(address sender, address recipient, uint256 amount) internal nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_330\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AutomatorCoin.sol\":4743:5826  function swapAndLiquify() private {... */\n    tag_319:\n        /* \"AutomatorCoin.sol\":4798:4802  true */\n      0x01\n        /* \"AutomatorCoin.sol\":4787:4795  swapping */\n      0x11\n      0x00\n        /* \"AutomatorCoin.sol\":4787:4802  swapping = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":4812:4835  uint256 contractBalance */\n      0x00\n        /* \"AutomatorCoin.sol\":4838:4862  balanceOf(address(this)) */\n      tag_343\n        /* \"AutomatorCoin.sol\":4856:4860  this */\n      address\n        /* \"AutomatorCoin.sol\":4838:4847  balanceOf */\n      tag_118\n        /* \"AutomatorCoin.sol\":4838:4862  balanceOf(address(this)) */\n      jump\t// in\n    tag_343:\n        /* \"AutomatorCoin.sol\":4812:4862  uint256 contractBalance = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":4872:4884  uint256 half */\n      0x00\n        /* \"AutomatorCoin.sol\":4905:4906  2 */\n      0x02\n        /* \"AutomatorCoin.sol\":4887:4902  contractBalance */\n      dup3\n        /* \"AutomatorCoin.sol\":4887:4906  contractBalance / 2 */\n      tag_344\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_344:\n        /* \"AutomatorCoin.sol\":4872:4906  uint256 half = contractBalance / 2 */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":4916:4933  uint256 otherHalf */\n      0x00\n        /* \"AutomatorCoin.sol\":4954:4958  half */\n      dup2\n        /* \"AutomatorCoin.sol\":4936:4951  contractBalance */\n      dup4\n        /* \"AutomatorCoin.sol\":4936:4958  contractBalance - half */\n      tag_345\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_345:\n        /* \"AutomatorCoin.sol\":4916:4958  uint256 otherHalf = contractBalance - half */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":5013:5034  address[] memory path */\n      0x00\n        /* \"AutomatorCoin.sol\":5051:5052  2 */\n      0x02\n        /* \"AutomatorCoin.sol\":5037:5053  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_346\n      jumpi\n      tag_347\n      tag_348\n      jump\t// in\n    tag_347:\n    tag_346:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_349\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_349:\n      pop\n        /* \"AutomatorCoin.sol\":5013:5053  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":5081:5085  this */\n      address\n        /* \"AutomatorCoin.sol\":5063:5067  path */\n      dup2\n        /* \"AutomatorCoin.sol\":5068:5069  0 */\n      0x00\n        /* \"AutomatorCoin.sol\":5063:5070  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_350\n      jumpi\n      tag_351\n      tag_352\n      jump\t// in\n    tag_351:\n    tag_350:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"AutomatorCoin.sol\":5063:5086  path[0] = address(this) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":5106:5112  router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":5106:5117  router.WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad5c4648\n        /* \"AutomatorCoin.sol\":5106:5119  router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_354\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_354:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_355\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"AutomatorCoin.sol\":5096:5100  path */\n      dup2\n        /* \"AutomatorCoin.sol\":5101:5102  1 */\n      0x01\n        /* \"AutomatorCoin.sol\":5096:5103  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_357\n      jumpi\n      tag_358\n      tag_352\n      jump\t// in\n    tag_358:\n    tag_357:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"AutomatorCoin.sol\":5096:5119  path[1] = router.WETH() */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":5157:5175  uint256 initialBNB */\n      0x00\n        /* \"AutomatorCoin.sol\":5178:5199  address(this).balance */\n      selfbalance\n        /* \"AutomatorCoin.sol\":5157:5199  uint256 initialBNB = address(this).balance */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":5210:5256  _approve(address(this), address(router), half) */\n      tag_359\n        /* \"AutomatorCoin.sol\":5227:5231  this */\n      address\n        /* \"AutomatorCoin.sol\":5242:5248  router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":5251:5255  half */\n      dup7\n        /* \"AutomatorCoin.sol\":5210:5218  _approve */\n      tag_195\n        /* \"AutomatorCoin.sol\":5210:5256  _approve(address(this), address(router), half) */\n      jump\t// in\n    tag_359:\n        /* \"AutomatorCoin.sol\":5266:5272  router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":5266:5323  router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x791ac947\n        /* \"AutomatorCoin.sol\":5337:5341  half */\n      dup6\n        /* \"AutomatorCoin.sol\":5343:5344  0 */\n      0x00\n        /* \"AutomatorCoin.sol\":5346:5350  path */\n      dup6\n        /* \"AutomatorCoin.sol\":5360:5364  this */\n      address\n        /* \"AutomatorCoin.sol\":5367:5382  block.timestamp */\n      timestamp\n        /* \"AutomatorCoin.sol\":5266:5392  router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_362\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_362:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":5403:5417  uint256 newBNB */\n      0x00\n        /* \"AutomatorCoin.sol\":5444:5454  initialBNB */\n      dup2\n        /* \"AutomatorCoin.sol\":5420:5441  address(this).balance */\n      selfbalance\n        /* \"AutomatorCoin.sol\":5420:5454  address(this).balance - initialBNB */\n      tag_365\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_365:\n        /* \"AutomatorCoin.sol\":5403:5454  uint256 newBNB = address(this).balance - initialBNB */\n      swap1\n      pop\n        /* \"AutomatorCoin.sol\":5465:5516  _approve(address(this), address(router), otherHalf) */\n      tag_366\n        /* \"AutomatorCoin.sol\":5482:5486  this */\n      address\n        /* \"AutomatorCoin.sol\":5497:5503  router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":5506:5515  otherHalf */\n      dup7\n        /* \"AutomatorCoin.sol\":5465:5473  _approve */\n      tag_195\n        /* \"AutomatorCoin.sol\":5465:5516  _approve(address(this), address(router), otherHalf) */\n      jump\t// in\n    tag_366:\n        /* \"AutomatorCoin.sol\":5526:5532  router */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AutomatorCoin.sol\":5526:5548  router.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"AutomatorCoin.sol\":5556:5562  newBNB */\n      dup3\n        /* \"AutomatorCoin.sol\":5585:5589  this */\n      address\n        /* \"AutomatorCoin.sol\":5604:5613  otherHalf */\n      dup8\n        /* \"AutomatorCoin.sol\":5627:5628  0 */\n      0x00\n        /* \"AutomatorCoin.sol\":5642:5643  0 */\n      dup1\n        /* \"AutomatorCoin.sol\":5657:5699  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"AutomatorCoin.sol\":5713:5728  block.timestamp */\n      timestamp\n        /* \"AutomatorCoin.sol\":5526:5738  router.addLiquidityETH{value: newBNB}(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_370:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_371\n      swap2\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n      pop\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":5754:5793  SwapAndLiquify(half, newBNB, otherHalf) */\n      0x17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561\n        /* \"AutomatorCoin.sol\":5769:5773  half */\n      dup6\n        /* \"AutomatorCoin.sol\":5775:5781  newBNB */\n      dup3\n        /* \"AutomatorCoin.sol\":5783:5792  otherHalf */\n      dup7\n        /* \"AutomatorCoin.sol\":5754:5793  SwapAndLiquify(half, newBNB, otherHalf) */\n      mload(0x40)\n      tag_373\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AutomatorCoin.sol\":5814:5819  false */\n      0x00\n        /* \"AutomatorCoin.sol\":5803:5811  swapping */\n      0x11\n      0x00\n        /* \"AutomatorCoin.sol\":5803:5819  swapping = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AutomatorCoin.sol\":4777:5826  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"AutomatorCoin.sol\":4743:5826  function swapAndLiquify() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_378\n      swap2\n      swap1\n      tag_379\n      jump\t// in\n    tag_378:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_380)\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_384)\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_385\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_386:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_387:\n        /* \"#utility.yul\":177:201   */\n      tag_441\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_386\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_47:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_443\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_387\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_388:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_389:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:968   */\n    tag_390:\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":813:926   */\n    tag_447:\n        /* \"#utility.yul\":827:833   */\n      dup4\n        /* \"#utility.yul\":824:825   */\n      dup2\n        /* \"#utility.yul\":821:834   */\n      lt\n        /* \"#utility.yul\":813:926   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":907:910   */\n      dup3\n        /* \"#utility.yul\":903:914   */\n      add\n        /* \"#utility.yul\":897:915   */\n      mload\n        /* \"#utility.yul\":893:894   */\n      dup2\n        /* \"#utility.yul\":888:891   */\n      dup5\n        /* \"#utility.yul\":884:895   */\n      add\n        /* \"#utility.yul\":877:916   */\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":846:847   */\n      dup2\n        /* \"#utility.yul\":842:852   */\n      add\n        /* \"#utility.yul\":837:852   */\n      swap1\n      pop\n        /* \"#utility.yul\":813:926   */\n      jump(tag_447)\n    tag_449:\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":951:957   */\n      dup5\n        /* \"#utility.yul\":946:949   */\n      dup5\n        /* \"#utility.yul\":942:958   */\n      add\n        /* \"#utility.yul\":935:962   */\n      mstore\n        /* \"#utility.yul\":784:968   */\n      pop\n        /* \"#utility.yul\":722:968   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1076   */\n    tag_391:\n        /* \"#utility.yul\":1015:1021   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1062:1069   */\n      not\n        /* \"#utility.yul\":1057:1059   */\n      0x1f\n        /* \"#utility.yul\":1050:1055   */\n      dup4\n        /* \"#utility.yul\":1046:1060   */\n      add\n        /* \"#utility.yul\":1042:1070   */\n      and\n        /* \"#utility.yul\":1032:1070   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1082:1459   */\n    tag_392:\n        /* \"#utility.yul\":1170:1173   */\n      0x00\n        /* \"#utility.yul\":1198:1237   */\n      tag_452\n        /* \"#utility.yul\":1231:1236   */\n      dup3\n        /* \"#utility.yul\":1198:1237   */\n      tag_388\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":1253:1324   */\n      tag_453\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1312:1315   */\n      dup6\n        /* \"#utility.yul\":1253:1324   */\n      tag_389\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":1246:1324   */\n      swap4\n      pop\n        /* \"#utility.yul\":1333:1398   */\n      tag_454\n        /* \"#utility.yul\":1391:1397   */\n      dup2\n        /* \"#utility.yul\":1386:1389   */\n      dup6\n        /* \"#utility.yul\":1379:1383   */\n      0x20\n        /* \"#utility.yul\":1372:1377   */\n      dup7\n        /* \"#utility.yul\":1368:1384   */\n      add\n        /* \"#utility.yul\":1333:1398   */\n      tag_390\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":1423:1452   */\n      tag_455\n        /* \"#utility.yul\":1445:1451   */\n      dup2\n        /* \"#utility.yul\":1423:1452   */\n      tag_391\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1453   */\n      add\n        /* \"#utility.yul\":1407:1453   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1459   */\n      pop\n        /* \"#utility.yul\":1082:1459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1778   */\n    tag_56:\n        /* \"#utility.yul\":1578:1582   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1605:1614   */\n      dup3\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1674   */\n      dup2\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1655:1675   */\n      sub\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1629:1676   */\n      mstore\n        /* \"#utility.yul\":1693:1771   */\n      tag_457\n        /* \"#utility.yul\":1766:1770   */\n      dup2\n        /* \"#utility.yul\":1757:1763   */\n      dup5\n        /* \"#utility.yul\":1693:1771   */\n      tag_392\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1685:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:1982   */\n    tag_394:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1971:1972   */\n      dup1\n        /* \"#utility.yul\":1964:1976   */\n      revert\n        /* \"#utility.yul\":2111:2237   */\n    tag_396:\n        /* \"#utility.yul\":2148:2155   */\n      0x00\n        /* \"#utility.yul\":2188:2230   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2181:2186   */\n      dup3\n        /* \"#utility.yul\":2177:2231   */\n      and\n        /* \"#utility.yul\":2166:2231   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2243:2339   */\n    tag_397:\n        /* \"#utility.yul\":2280:2287   */\n      0x00\n        /* \"#utility.yul\":2309:2333   */\n      tag_463\n        /* \"#utility.yul\":2327:2332   */\n      dup3\n        /* \"#utility.yul\":2309:2333   */\n      tag_396\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2298:2333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2243:2339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2467   */\n    tag_398:\n        /* \"#utility.yul\":2418:2442   */\n      tag_465\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2418:2442   */\n      tag_397\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2408:2443   */\n      eq\n        /* \"#utility.yul\":2398:2461   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2398:2461   */\n    tag_466:\n        /* \"#utility.yul\":2345:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2612   */\n    tag_399:\n        /* \"#utility.yul\":2519:2524   */\n      0x00\n        /* \"#utility.yul\":2557:2563   */\n      dup2\n        /* \"#utility.yul\":2544:2564   */\n      calldataload\n        /* \"#utility.yul\":2535:2564   */\n      swap1\n      pop\n        /* \"#utility.yul\":2573:2606   */\n      tag_468\n        /* \"#utility.yul\":2600:2605   */\n      dup2\n        /* \"#utility.yul\":2573:2606   */\n      tag_398\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":2473:2612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2740   */\n    tag_400:\n        /* \"#utility.yul\":2691:2715   */\n      tag_470\n        /* \"#utility.yul\":2709:2714   */\n      dup2\n        /* \"#utility.yul\":2691:2715   */\n      tag_386\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":2684:2689   */\n      dup2\n        /* \"#utility.yul\":2681:2716   */\n      eq\n        /* \"#utility.yul\":2671:2734   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2727:2728   */\n      dup1\n        /* \"#utility.yul\":2720:2732   */\n      revert\n        /* \"#utility.yul\":2671:2734   */\n    tag_471:\n        /* \"#utility.yul\":2618:2740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2885   */\n    tag_401:\n        /* \"#utility.yul\":2792:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2836   */\n      dup2\n        /* \"#utility.yul\":2817:2837   */\n      calldataload\n        /* \"#utility.yul\":2808:2837   */\n      swap1\n      pop\n        /* \"#utility.yul\":2846:2879   */\n      tag_473\n        /* \"#utility.yul\":2873:2878   */\n      dup2\n        /* \"#utility.yul\":2846:2879   */\n      tag_400\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":2746:2885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3365   */\n    tag_60:\n        /* \"#utility.yul\":2959:2965   */\n      0x00\n        /* \"#utility.yul\":2967:2973   */\n      dup1\n        /* \"#utility.yul\":3016:3018   */\n      0x40\n        /* \"#utility.yul\":3004:3013   */\n      dup4\n        /* \"#utility.yul\":2995:3002   */\n      dup6\n        /* \"#utility.yul\":2991:3014   */\n      sub\n        /* \"#utility.yul\":2987:3019   */\n      slt\n        /* \"#utility.yul\":2984:3103   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3022:3101   */\n      tag_476\n      tag_394\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2984:3103   */\n    tag_475:\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3167:3220   */\n      tag_477\n        /* \"#utility.yul\":3212:3219   */\n      dup6\n        /* \"#utility.yul\":3203:3209   */\n      dup3\n        /* \"#utility.yul\":3192:3201   */\n      dup7\n        /* \"#utility.yul\":3188:3210   */\n      add\n        /* \"#utility.yul\":3167:3220   */\n      tag_399\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3157:3220   */\n      swap3\n      pop\n        /* \"#utility.yul\":3113:3230   */\n      pop\n        /* \"#utility.yul\":3269:3271   */\n      0x20\n        /* \"#utility.yul\":3295:3348   */\n      tag_478\n        /* \"#utility.yul\":3340:3347   */\n      dup6\n        /* \"#utility.yul\":3331:3337   */\n      dup3\n        /* \"#utility.yul\":3320:3329   */\n      dup7\n        /* \"#utility.yul\":3316:3338   */\n      add\n        /* \"#utility.yul\":3295:3348   */\n      tag_401\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3285:3348   */\n      swap2\n      pop\n        /* \"#utility.yul\":3240:3358   */\n      pop\n        /* \"#utility.yul\":2891:3365   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3371:3461   */\n    tag_402:\n        /* \"#utility.yul\":3405:3412   */\n      0x00\n        /* \"#utility.yul\":3448:3453   */\n      dup2\n        /* \"#utility.yul\":3441:3454   */\n      iszero\n        /* \"#utility.yul\":3434:3455   */\n      iszero\n        /* \"#utility.yul\":3423:3455   */\n      swap1\n      pop\n        /* \"#utility.yul\":3371:3461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:3576   */\n    tag_403:\n        /* \"#utility.yul\":3548:3569   */\n      tag_481\n        /* \"#utility.yul\":3563:3568   */\n      dup2\n        /* \"#utility.yul\":3548:3569   */\n      tag_402\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":3543:3546   */\n      dup3\n        /* \"#utility.yul\":3536:3570   */\n      mstore\n        /* \"#utility.yul\":3467:3576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3792   */\n    tag_63:\n        /* \"#utility.yul\":3669:3673   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3696:3705   */\n      dup3\n        /* \"#utility.yul\":3692:3710   */\n      add\n        /* \"#utility.yul\":3684:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3720:3785   */\n      tag_483\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3720:3785   */\n      tag_403\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":3582:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_67:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_486\n      tag_394\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3908:4027   */\n    tag_485:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_487\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_399\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_488\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_399\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_489\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_399\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:5042   */\n    tag_84:\n        /* \"#utility.yul\":4500:4506   */\n      0x00\n        /* \"#utility.yul\":4508:4514   */\n      dup1\n        /* \"#utility.yul\":4516:4522   */\n      0x00\n        /* \"#utility.yul\":4565:4567   */\n      0x60\n        /* \"#utility.yul\":4553:4562   */\n      dup5\n        /* \"#utility.yul\":4544:4551   */\n      dup7\n        /* \"#utility.yul\":4540:4563   */\n      sub\n        /* \"#utility.yul\":4536:4568   */\n      slt\n        /* \"#utility.yul\":4533:4652   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":4571:4650   */\n      tag_492\n      tag_394\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":4533:4652   */\n    tag_491:\n        /* \"#utility.yul\":4691:4692   */\n      0x00\n        /* \"#utility.yul\":4716:4769   */\n      tag_493\n        /* \"#utility.yul\":4761:4768   */\n      dup7\n        /* \"#utility.yul\":4752:4758   */\n      dup3\n        /* \"#utility.yul\":4741:4750   */\n      dup8\n        /* \"#utility.yul\":4737:4759   */\n      add\n        /* \"#utility.yul\":4716:4769   */\n      tag_399\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4706:4769   */\n      swap4\n      pop\n        /* \"#utility.yul\":4662:4779   */\n      pop\n        /* \"#utility.yul\":4818:4820   */\n      0x20\n        /* \"#utility.yul\":4844:4897   */\n      tag_494\n        /* \"#utility.yul\":4889:4896   */\n      dup7\n        /* \"#utility.yul\":4880:4886   */\n      dup3\n        /* \"#utility.yul\":4869:4878   */\n      dup8\n        /* \"#utility.yul\":4865:4887   */\n      add\n        /* \"#utility.yul\":4844:4897   */\n      tag_399\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4834:4897   */\n      swap3\n      pop\n        /* \"#utility.yul\":4789:4907   */\n      pop\n        /* \"#utility.yul\":4946:4948   */\n      0x40\n        /* \"#utility.yul\":4972:5025   */\n      tag_495\n        /* \"#utility.yul\":5017:5024   */\n      dup7\n        /* \"#utility.yul\":5008:5014   */\n      dup3\n        /* \"#utility.yul\":4997:5006   */\n      dup8\n        /* \"#utility.yul\":4993:5015   */\n      add\n        /* \"#utility.yul\":4972:5025   */\n      tag_401\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4962:5025   */\n      swap2\n      pop\n        /* \"#utility.yul\":4917:5035   */\n      pop\n        /* \"#utility.yul\":4423:5042   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5048:5134   */\n    tag_404:\n        /* \"#utility.yul\":5083:5090   */\n      0x00\n        /* \"#utility.yul\":5123:5127   */\n      0xff\n        /* \"#utility.yul\":5116:5121   */\n      dup3\n        /* \"#utility.yul\":5112:5128   */\n      and\n        /* \"#utility.yul\":5101:5128   */\n      swap1\n      pop\n        /* \"#utility.yul\":5048:5134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5140:5252   */\n    tag_405:\n        /* \"#utility.yul\":5223:5245   */\n      tag_498\n        /* \"#utility.yul\":5239:5244   */\n      dup2\n        /* \"#utility.yul\":5223:5245   */\n      tag_404\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5218:5221   */\n      dup3\n        /* \"#utility.yul\":5211:5246   */\n      mstore\n        /* \"#utility.yul\":5140:5252   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5258:5472   */\n    tag_91:\n        /* \"#utility.yul\":5347:5351   */\n      0x00\n        /* \"#utility.yul\":5385:5387   */\n      0x20\n        /* \"#utility.yul\":5374:5383   */\n      dup3\n        /* \"#utility.yul\":5370:5388   */\n      add\n        /* \"#utility.yul\":5362:5388   */\n      swap1\n      pop\n        /* \"#utility.yul\":5398:5465   */\n      tag_500\n        /* \"#utility.yul\":5462:5463   */\n      0x00\n        /* \"#utility.yul\":5451:5460   */\n      dup4\n        /* \"#utility.yul\":5447:5464   */\n      add\n        /* \"#utility.yul\":5438:5444   */\n      dup5\n        /* \"#utility.yul\":5398:5465   */\n      tag_405\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5258:5472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5478:5807   */\n    tag_99:\n        /* \"#utility.yul\":5537:5543   */\n      0x00\n        /* \"#utility.yul\":5586:5588   */\n      0x20\n        /* \"#utility.yul\":5574:5583   */\n      dup3\n        /* \"#utility.yul\":5565:5572   */\n      dup5\n        /* \"#utility.yul\":5561:5584   */\n      sub\n        /* \"#utility.yul\":5557:5589   */\n      slt\n        /* \"#utility.yul\":5554:5673   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":5592:5671   */\n      tag_503\n      tag_394\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5554:5673   */\n    tag_502:\n        /* \"#utility.yul\":5712:5713   */\n      0x00\n        /* \"#utility.yul\":5737:5790   */\n      tag_504\n        /* \"#utility.yul\":5782:5789   */\n      dup5\n        /* \"#utility.yul\":5773:5779   */\n      dup3\n        /* \"#utility.yul\":5762:5771   */\n      dup6\n        /* \"#utility.yul\":5758:5780   */\n      add\n        /* \"#utility.yul\":5737:5790   */\n      tag_399\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5727:5790   */\n      swap2\n      pop\n        /* \"#utility.yul\":5683:5800   */\n      pop\n        /* \"#utility.yul\":5478:5807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5813:5929   */\n    tag_406:\n        /* \"#utility.yul\":5883:5904   */\n      tag_506\n        /* \"#utility.yul\":5898:5903   */\n      dup2\n        /* \"#utility.yul\":5883:5904   */\n      tag_402\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5876:5881   */\n      dup2\n        /* \"#utility.yul\":5873:5905   */\n      eq\n        /* \"#utility.yul\":5863:5923   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":5919:5920   */\n      0x00\n        /* \"#utility.yul\":5916:5917   */\n      dup1\n        /* \"#utility.yul\":5909:5921   */\n      revert\n        /* \"#utility.yul\":5863:5923   */\n    tag_507:\n        /* \"#utility.yul\":5813:5929   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5935:6068   */\n    tag_407:\n        /* \"#utility.yul\":5978:5983   */\n      0x00\n        /* \"#utility.yul\":6016:6022   */\n      dup2\n        /* \"#utility.yul\":6003:6023   */\n      calldataload\n        /* \"#utility.yul\":5994:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6062   */\n      tag_509\n        /* \"#utility.yul\":6056:6061   */\n      dup2\n        /* \"#utility.yul\":6032:6062   */\n      tag_406\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5935:6068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6074:6542   */\n    tag_109:\n        /* \"#utility.yul\":6139:6145   */\n      0x00\n        /* \"#utility.yul\":6147:6153   */\n      dup1\n        /* \"#utility.yul\":6196:6198   */\n      0x40\n        /* \"#utility.yul\":6184:6193   */\n      dup4\n        /* \"#utility.yul\":6175:6182   */\n      dup6\n        /* \"#utility.yul\":6171:6194   */\n      sub\n        /* \"#utility.yul\":6167:6199   */\n      slt\n        /* \"#utility.yul\":6164:6283   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":6202:6281   */\n      tag_512\n      tag_394\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":6164:6283   */\n    tag_511:\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6347:6400   */\n      tag_513\n        /* \"#utility.yul\":6392:6399   */\n      dup6\n        /* \"#utility.yul\":6383:6389   */\n      dup3\n        /* \"#utility.yul\":6372:6381   */\n      dup7\n        /* \"#utility.yul\":6368:6390   */\n      add\n        /* \"#utility.yul\":6347:6400   */\n      tag_399\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6337:6400   */\n      swap3\n      pop\n        /* \"#utility.yul\":6293:6410   */\n      pop\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"#utility.yul\":6475:6525   */\n      tag_514\n        /* \"#utility.yul\":6517:6524   */\n      dup6\n        /* \"#utility.yul\":6508:6514   */\n      dup3\n        /* \"#utility.yul\":6497:6506   */\n      dup7\n        /* \"#utility.yul\":6493:6515   */\n      add\n        /* \"#utility.yul\":6475:6525   */\n      tag_407\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":6465:6525   */\n      swap2\n      pop\n        /* \"#utility.yul\":6420:6535   */\n      pop\n        /* \"#utility.yul\":6074:6542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6548:6666   */\n    tag_408:\n        /* \"#utility.yul\":6635:6659   */\n      tag_516\n        /* \"#utility.yul\":6653:6658   */\n      dup2\n        /* \"#utility.yul\":6635:6659   */\n      tag_397\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6630:6633   */\n      dup3\n        /* \"#utility.yul\":6623:6660   */\n      mstore\n        /* \"#utility.yul\":6548:6666   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6672:6894   */\n    tag_127:\n        /* \"#utility.yul\":6765:6769   */\n      0x00\n        /* \"#utility.yul\":6803:6805   */\n      0x20\n        /* \"#utility.yul\":6792:6801   */\n      dup3\n        /* \"#utility.yul\":6788:6806   */\n      add\n        /* \"#utility.yul\":6780:6806   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6887   */\n      tag_518\n        /* \"#utility.yul\":6884:6885   */\n      0x00\n        /* \"#utility.yul\":6873:6882   */\n      dup4\n        /* \"#utility.yul\":6869:6886   */\n      add\n        /* \"#utility.yul\":6860:6866   */\n      dup5\n        /* \"#utility.yul\":6816:6887   */\n      tag_408\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":6672:6894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6900:7229   */\n    tag_146:\n        /* \"#utility.yul\":6959:6965   */\n      0x00\n        /* \"#utility.yul\":7008:7010   */\n      0x20\n        /* \"#utility.yul\":6996:7005   */\n      dup3\n        /* \"#utility.yul\":6987:6994   */\n      dup5\n        /* \"#utility.yul\":6983:7006   */\n      sub\n        /* \"#utility.yul\":6979:7011   */\n      slt\n        /* \"#utility.yul\":6976:7095   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7014:7093   */\n      tag_521\n      tag_394\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6976:7095   */\n    tag_520:\n        /* \"#utility.yul\":7134:7135   */\n      0x00\n        /* \"#utility.yul\":7159:7212   */\n      tag_522\n        /* \"#utility.yul\":7204:7211   */\n      dup5\n        /* \"#utility.yul\":7195:7201   */\n      dup3\n        /* \"#utility.yul\":7184:7193   */\n      dup6\n        /* \"#utility.yul\":7180:7202   */\n      add\n        /* \"#utility.yul\":7159:7212   */\n      tag_401\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":7149:7212   */\n      swap2\n      pop\n        /* \"#utility.yul\":7105:7222   */\n      pop\n        /* \"#utility.yul\":6900:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7709   */\n    tag_172:\n        /* \"#utility.yul\":7303:7309   */\n      0x00\n        /* \"#utility.yul\":7311:7317   */\n      dup1\n        /* \"#utility.yul\":7360:7362   */\n      0x40\n        /* \"#utility.yul\":7348:7357   */\n      dup4\n        /* \"#utility.yul\":7339:7346   */\n      dup6\n        /* \"#utility.yul\":7335:7358   */\n      sub\n        /* \"#utility.yul\":7331:7363   */\n      slt\n        /* \"#utility.yul\":7328:7447   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":7366:7445   */\n      tag_525\n      tag_394\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7328:7447   */\n    tag_524:\n        /* \"#utility.yul\":7486:7487   */\n      0x00\n        /* \"#utility.yul\":7511:7564   */\n      tag_526\n        /* \"#utility.yul\":7556:7563   */\n      dup6\n        /* \"#utility.yul\":7547:7553   */\n      dup3\n        /* \"#utility.yul\":7536:7545   */\n      dup7\n        /* \"#utility.yul\":7532:7554   */\n      add\n        /* \"#utility.yul\":7511:7564   */\n      tag_399\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":7501:7564   */\n      swap3\n      pop\n        /* \"#utility.yul\":7457:7574   */\n      pop\n        /* \"#utility.yul\":7613:7615   */\n      0x20\n        /* \"#utility.yul\":7639:7692   */\n      tag_527\n        /* \"#utility.yul\":7684:7691   */\n      dup6\n        /* \"#utility.yul\":7675:7681   */\n      dup3\n        /* \"#utility.yul\":7664:7673   */\n      dup7\n        /* \"#utility.yul\":7660:7682   */\n      add\n        /* \"#utility.yul\":7639:7692   */\n      tag_399\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7629:7692   */\n      swap2\n      pop\n        /* \"#utility.yul\":7584:7702   */\n      pop\n        /* \"#utility.yul\":7235:7709   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7715:7775   */\n    tag_409:\n        /* \"#utility.yul\":7743:7746   */\n      0x00\n        /* \"#utility.yul\":7764:7769   */\n      dup2\n        /* \"#utility.yul\":7757:7769   */\n      swap1\n      pop\n        /* \"#utility.yul\":7715:7775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7781:7923   */\n    tag_410:\n        /* \"#utility.yul\":7831:7840   */\n      0x00\n        /* \"#utility.yul\":7864:7917   */\n      tag_530\n        /* \"#utility.yul\":7882:7916   */\n      tag_531\n        /* \"#utility.yul\":7891:7915   */\n      tag_532\n        /* \"#utility.yul\":7909:7914   */\n      dup5\n        /* \"#utility.yul\":7891:7915   */\n      tag_396\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7882:7916   */\n      tag_409\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7864:7917   */\n      tag_396\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7851:7917   */\n      swap1\n      pop\n        /* \"#utility.yul\":7781:7923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7929:8055   */\n    tag_411:\n        /* \"#utility.yul\":7979:7988   */\n      0x00\n        /* \"#utility.yul\":8012:8049   */\n      tag_534\n        /* \"#utility.yul\":8043:8048   */\n      dup3\n        /* \"#utility.yul\":8012:8049   */\n      tag_410\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7999:8049   */\n      swap1\n      pop\n        /* \"#utility.yul\":7929:8055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8061:8210   */\n    tag_412:\n        /* \"#utility.yul\":8134:8143   */\n      0x00\n        /* \"#utility.yul\":8167:8204   */\n      tag_536\n        /* \"#utility.yul\":8198:8203   */\n      dup3\n        /* \"#utility.yul\":8167:8204   */\n      tag_411\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8154:8204   */\n      swap1\n      pop\n        /* \"#utility.yul\":8061:8210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8216:8393   */\n    tag_413:\n        /* \"#utility.yul\":8326:8386   */\n      tag_538\n        /* \"#utility.yul\":8380:8385   */\n      dup2\n        /* \"#utility.yul\":8326:8386   */\n      tag_412\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8387   */\n      mstore\n        /* \"#utility.yul\":8216:8393   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8399:8667   */\n    tag_183:\n        /* \"#utility.yul\":8515:8519   */\n      0x00\n        /* \"#utility.yul\":8553:8555   */\n      0x20\n        /* \"#utility.yul\":8542:8551   */\n      dup3\n        /* \"#utility.yul\":8538:8556   */\n      add\n        /* \"#utility.yul\":8530:8556   */\n      swap1\n      pop\n        /* \"#utility.yul\":8566:8660   */\n      tag_540\n        /* \"#utility.yul\":8657:8658   */\n      0x00\n        /* \"#utility.yul\":8646:8655   */\n      dup4\n        /* \"#utility.yul\":8642:8659   */\n      add\n        /* \"#utility.yul\":8633:8639   */\n      dup5\n        /* \"#utility.yul\":8566:8660   */\n      tag_413\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8399:8667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8673:8853   */\n    tag_414:\n        /* \"#utility.yul\":8721:8798   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8718:8719   */\n      0x00\n        /* \"#utility.yul\":8711:8799   */\n      mstore\n        /* \"#utility.yul\":8818:8822   */\n      0x22\n        /* \"#utility.yul\":8815:8816   */\n      0x04\n        /* \"#utility.yul\":8808:8823   */\n      mstore\n        /* \"#utility.yul\":8842:8846   */\n      0x24\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8832:8847   */\n      revert\n        /* \"#utility.yul\":8859:9179   */\n    tag_186:\n        /* \"#utility.yul\":8903:8909   */\n      0x00\n        /* \"#utility.yul\":8940:8941   */\n      0x02\n        /* \"#utility.yul\":8934:8938   */\n      dup3\n        /* \"#utility.yul\":8930:8942   */\n      div\n        /* \"#utility.yul\":8920:8942   */\n      swap1\n      pop\n        /* \"#utility.yul\":8987:8988   */\n      0x01\n        /* \"#utility.yul\":8981:8985   */\n      dup3\n        /* \"#utility.yul\":8977:8989   */\n      and\n        /* \"#utility.yul\":9008:9026   */\n      dup1\n        /* \"#utility.yul\":8998:9079   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":9064:9068   */\n      0x7f\n        /* \"#utility.yul\":9056:9062   */\n      dup3\n        /* \"#utility.yul\":9052:9069   */\n      and\n        /* \"#utility.yul\":9042:9069   */\n      swap2\n      pop\n        /* \"#utility.yul\":8998:9079   */\n    tag_543:\n        /* \"#utility.yul\":9126:9128   */\n      0x20\n        /* \"#utility.yul\":9118:9124   */\n      dup3\n        /* \"#utility.yul\":9115:9129   */\n      lt\n        /* \"#utility.yul\":9095:9113   */\n      dup2\n        /* \"#utility.yul\":9092:9130   */\n      sub\n        /* \"#utility.yul\":9089:9173   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":9145:9163   */\n      tag_545\n      tag_414\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9089:9173   */\n    tag_544:\n        /* \"#utility.yul\":8910:9179   */\n      pop\n        /* \"#utility.yul\":8859:9179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9185:9354   */\n    tag_415:\n        /* \"#utility.yul\":9325:9346   */\n      0x43616e6e6f742077697468647261772041544300000000000000000000000000\n        /* \"#utility.yul\":9321:9322   */\n      0x00\n        /* \"#utility.yul\":9313:9319   */\n      dup3\n        /* \"#utility.yul\":9309:9323   */\n      add\n        /* \"#utility.yul\":9302:9347   */\n      mstore\n        /* \"#utility.yul\":9185:9354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9360:9726   */\n    tag_416:\n        /* \"#utility.yul\":9502:9505   */\n      0x00\n        /* \"#utility.yul\":9523:9590   */\n      tag_548\n        /* \"#utility.yul\":9587:9589   */\n      0x13\n        /* \"#utility.yul\":9582:9585   */\n      dup4\n        /* \"#utility.yul\":9523:9590   */\n      tag_389\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9516:9590   */\n      swap2\n      pop\n        /* \"#utility.yul\":9599:9692   */\n      tag_549\n        /* \"#utility.yul\":9688:9691   */\n      dup3\n        /* \"#utility.yul\":9599:9692   */\n      tag_415\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":9717:9719   */\n      0x20\n        /* \"#utility.yul\":9712:9715   */\n      dup3\n        /* \"#utility.yul\":9708:9720   */\n      add\n        /* \"#utility.yul\":9701:9720   */\n      swap1\n      pop\n        /* \"#utility.yul\":9360:9726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9732:10151   */\n    tag_238:\n        /* \"#utility.yul\":9898:9902   */\n      0x00\n        /* \"#utility.yul\":9936:9938   */\n      0x20\n        /* \"#utility.yul\":9925:9934   */\n      dup3\n        /* \"#utility.yul\":9921:9939   */\n      add\n        /* \"#utility.yul\":9913:9939   */\n      swap1\n      pop\n        /* \"#utility.yul\":9985:9994   */\n      dup2\n        /* \"#utility.yul\":9979:9983   */\n      dup2\n        /* \"#utility.yul\":9975:9995   */\n      sub\n        /* \"#utility.yul\":9971:9972   */\n      0x00\n        /* \"#utility.yul\":9960:9969   */\n      dup4\n        /* \"#utility.yul\":9956:9973   */\n      add\n        /* \"#utility.yul\":9949:9996   */\n      mstore\n        /* \"#utility.yul\":10013:10144   */\n      tag_551\n        /* \"#utility.yul\":10139:10143   */\n      dup2\n        /* \"#utility.yul\":10013:10144   */\n      tag_416\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":10005:10144   */\n      swap1\n      pop\n        /* \"#utility.yul\":9732:10151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10157:10300   */\n    tag_417:\n        /* \"#utility.yul\":10214:10219   */\n      0x00\n        /* \"#utility.yul\":10245:10251   */\n      dup2\n        /* \"#utility.yul\":10239:10252   */\n      mload\n        /* \"#utility.yul\":10230:10252   */\n      swap1\n      pop\n        /* \"#utility.yul\":10261:10294   */\n      tag_553\n        /* \"#utility.yul\":10288:10293   */\n      dup2\n        /* \"#utility.yul\":10261:10294   */\n      tag_400\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10157:10300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10306:10657   */\n    tag_243:\n        /* \"#utility.yul\":10376:10382   */\n      0x00\n        /* \"#utility.yul\":10425:10427   */\n      0x20\n        /* \"#utility.yul\":10413:10422   */\n      dup3\n        /* \"#utility.yul\":10404:10411   */\n      dup5\n        /* \"#utility.yul\":10400:10423   */\n      sub\n        /* \"#utility.yul\":10396:10428   */\n      slt\n        /* \"#utility.yul\":10393:10512   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":10431:10510   */\n      tag_556\n      tag_394\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":10393:10512   */\n    tag_555:\n        /* \"#utility.yul\":10551:10552   */\n      0x00\n        /* \"#utility.yul\":10576:10640   */\n      tag_557\n        /* \"#utility.yul\":10632:10639   */\n      dup5\n        /* \"#utility.yul\":10623:10629   */\n      dup3\n        /* \"#utility.yul\":10612:10621   */\n      dup6\n        /* \"#utility.yul\":10608:10630   */\n      add\n        /* \"#utility.yul\":10576:10640   */\n      tag_417\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":10566:10640   */\n      swap2\n      pop\n        /* \"#utility.yul\":10522:10650   */\n      pop\n        /* \"#utility.yul\":10306:10657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10663:10995   */\n    tag_245:\n        /* \"#utility.yul\":10784:10788   */\n      0x00\n        /* \"#utility.yul\":10822:10824   */\n      0x40\n        /* \"#utility.yul\":10811:10820   */\n      dup3\n        /* \"#utility.yul\":10807:10825   */\n      add\n        /* \"#utility.yul\":10799:10825   */\n      swap1\n      pop\n        /* \"#utility.yul\":10835:10906   */\n      tag_559\n        /* \"#utility.yul\":10903:10904   */\n      0x00\n        /* \"#utility.yul\":10892:10901   */\n      dup4\n        /* \"#utility.yul\":10888:10905   */\n      add\n        /* \"#utility.yul\":10879:10885   */\n      dup6\n        /* \"#utility.yul\":10835:10906   */\n      tag_408\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10916:10988   */\n      tag_560\n        /* \"#utility.yul\":10984:10986   */\n      0x20\n        /* \"#utility.yul\":10973:10982   */\n      dup4\n        /* \"#utility.yul\":10969:10987   */\n      add\n        /* \"#utility.yul\":10960:10966   */\n      dup5\n        /* \"#utility.yul\":10916:10988   */\n      tag_387\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":10663:10995   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11001:11138   */\n    tag_418:\n        /* \"#utility.yul\":11055:11060   */\n      0x00\n        /* \"#utility.yul\":11086:11092   */\n      dup2\n        /* \"#utility.yul\":11080:11093   */\n      mload\n        /* \"#utility.yul\":11071:11093   */\n      swap1\n      pop\n        /* \"#utility.yul\":11102:11132   */\n      tag_562\n        /* \"#utility.yul\":11126:11131   */\n      dup2\n        /* \"#utility.yul\":11102:11132   */\n      tag_406\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":11001:11138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11144:11489   */\n    tag_249:\n        /* \"#utility.yul\":11211:11217   */\n      0x00\n        /* \"#utility.yul\":11260:11262   */\n      0x20\n        /* \"#utility.yul\":11248:11257   */\n      dup3\n        /* \"#utility.yul\":11239:11246   */\n      dup5\n        /* \"#utility.yul\":11235:11258   */\n      sub\n        /* \"#utility.yul\":11231:11263   */\n      slt\n        /* \"#utility.yul\":11228:11347   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":11266:11345   */\n      tag_565\n      tag_394\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11228:11347   */\n    tag_564:\n        /* \"#utility.yul\":11386:11387   */\n      0x00\n        /* \"#utility.yul\":11411:11472   */\n      tag_566\n        /* \"#utility.yul\":11464:11471   */\n      dup5\n        /* \"#utility.yul\":11455:11461   */\n      dup3\n        /* \"#utility.yul\":11444:11453   */\n      dup6\n        /* \"#utility.yul\":11440:11462   */\n      add\n        /* \"#utility.yul\":11411:11472   */\n      tag_418\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":11401:11472   */\n      swap2\n      pop\n        /* \"#utility.yul\":11357:11482   */\n      pop\n        /* \"#utility.yul\":11144:11489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11495:11937   */\n    tag_272:\n        /* \"#utility.yul\":11644:11648   */\n      0x00\n        /* \"#utility.yul\":11682:11684   */\n      0x60\n        /* \"#utility.yul\":11671:11680   */\n      dup3\n        /* \"#utility.yul\":11667:11685   */\n      add\n        /* \"#utility.yul\":11659:11685   */\n      swap1\n      pop\n        /* \"#utility.yul\":11695:11766   */\n      tag_568\n        /* \"#utility.yul\":11763:11764   */\n      0x00\n        /* \"#utility.yul\":11752:11761   */\n      dup4\n        /* \"#utility.yul\":11748:11765   */\n      add\n        /* \"#utility.yul\":11739:11745   */\n      dup7\n        /* \"#utility.yul\":11695:11766   */\n      tag_408\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11776:11848   */\n      tag_569\n        /* \"#utility.yul\":11844:11846   */\n      0x20\n        /* \"#utility.yul\":11833:11842   */\n      dup4\n        /* \"#utility.yul\":11829:11847   */\n      add\n        /* \"#utility.yul\":11820:11826   */\n      dup6\n        /* \"#utility.yul\":11776:11848   */\n      tag_387\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11858:11930   */\n      tag_570\n        /* \"#utility.yul\":11926:11928   */\n      0x40\n        /* \"#utility.yul\":11915:11924   */\n      dup4\n        /* \"#utility.yul\":11911:11929   */\n      add\n        /* \"#utility.yul\":11902:11908   */\n      dup5\n        /* \"#utility.yul\":11858:11930   */\n      tag_387\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11495:11937   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11943:12171   */\n    tag_419:\n        /* \"#utility.yul\":12083:12117   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":12079:12080   */\n      0x00\n        /* \"#utility.yul\":12071:12077   */\n      dup3\n        /* \"#utility.yul\":12067:12081   */\n      add\n        /* \"#utility.yul\":12060:12118   */\n      mstore\n        /* \"#utility.yul\":12152:12163   */\n      0x7468616e207a65726f0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12147:12149   */\n      0x20\n        /* \"#utility.yul\":12139:12145   */\n      dup3\n        /* \"#utility.yul\":12135:12150   */\n      add\n        /* \"#utility.yul\":12128:12164   */\n      mstore\n        /* \"#utility.yul\":11943:12171   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12177:12543   */\n    tag_420:\n        /* \"#utility.yul\":12319:12322   */\n      0x00\n        /* \"#utility.yul\":12340:12407   */\n      tag_573\n        /* \"#utility.yul\":12404:12406   */\n      0x29\n        /* \"#utility.yul\":12399:12402   */\n      dup4\n        /* \"#utility.yul\":12340:12407   */\n      tag_389\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":12333:12407   */\n      swap2\n      pop\n        /* \"#utility.yul\":12416:12509   */\n      tag_574\n        /* \"#utility.yul\":12505:12508   */\n      dup3\n        /* \"#utility.yul\":12416:12509   */\n      tag_419\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12534:12536   */\n      0x40\n        /* \"#utility.yul\":12529:12532   */\n      dup3\n        /* \"#utility.yul\":12525:12537   */\n      add\n        /* \"#utility.yul\":12518:12537   */\n      swap1\n      pop\n        /* \"#utility.yul\":12177:12543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12549:12968   */\n    tag_280:\n        /* \"#utility.yul\":12715:12719   */\n      0x00\n        /* \"#utility.yul\":12753:12755   */\n      0x20\n        /* \"#utility.yul\":12742:12751   */\n      dup3\n        /* \"#utility.yul\":12738:12756   */\n      add\n        /* \"#utility.yul\":12730:12756   */\n      swap1\n      pop\n        /* \"#utility.yul\":12802:12811   */\n      dup2\n        /* \"#utility.yul\":12796:12800   */\n      dup2\n        /* \"#utility.yul\":12792:12812   */\n      sub\n        /* \"#utility.yul\":12788:12789   */\n      0x00\n        /* \"#utility.yul\":12777:12786   */\n      dup4\n        /* \"#utility.yul\":12773:12790   */\n      add\n        /* \"#utility.yul\":12766:12813   */\n      mstore\n        /* \"#utility.yul\":12830:12961   */\n      tag_576\n        /* \"#utility.yul\":12956:12960   */\n      dup2\n        /* \"#utility.yul\":12830:12961   */\n      tag_420\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":12822:12961   */\n      swap1\n      pop\n        /* \"#utility.yul\":12549:12968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12974:13143   */\n    tag_421:\n        /* \"#utility.yul\":13114:13135   */\n      0x54726164696e67206e6f7420656e61626c656400000000000000000000000000\n        /* \"#utility.yul\":13110:13111   */\n      0x00\n        /* \"#utility.yul\":13102:13108   */\n      dup3\n        /* \"#utility.yul\":13098:13112   */\n      add\n        /* \"#utility.yul\":13091:13136   */\n      mstore\n        /* \"#utility.yul\":12974:13143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13149:13515   */\n    tag_422:\n        /* \"#utility.yul\":13291:13294   */\n      0x00\n        /* \"#utility.yul\":13312:13379   */\n      tag_579\n        /* \"#utility.yul\":13376:13378   */\n      0x13\n        /* \"#utility.yul\":13371:13374   */\n      dup4\n        /* \"#utility.yul\":13312:13379   */\n      tag_389\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":13305:13379   */\n      swap2\n      pop\n        /* \"#utility.yul\":13388:13481   */\n      tag_580\n        /* \"#utility.yul\":13477:13480   */\n      dup3\n        /* \"#utility.yul\":13388:13481   */\n      tag_421\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":13506:13508   */\n      0x20\n        /* \"#utility.yul\":13501:13504   */\n      dup3\n        /* \"#utility.yul\":13497:13509   */\n      add\n        /* \"#utility.yul\":13490:13509   */\n      swap1\n      pop\n        /* \"#utility.yul\":13149:13515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13521:13940   */\n    tag_285:\n        /* \"#utility.yul\":13687:13691   */\n      0x00\n        /* \"#utility.yul\":13725:13727   */\n      0x20\n        /* \"#utility.yul\":13714:13723   */\n      dup3\n        /* \"#utility.yul\":13710:13728   */\n      add\n        /* \"#utility.yul\":13702:13728   */\n      swap1\n      pop\n        /* \"#utility.yul\":13774:13783   */\n      dup2\n        /* \"#utility.yul\":13768:13772   */\n      dup2\n        /* \"#utility.yul\":13764:13784   */\n      sub\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13749:13758   */\n      dup4\n        /* \"#utility.yul\":13745:13762   */\n      add\n        /* \"#utility.yul\":13738:13785   */\n      mstore\n        /* \"#utility.yul\":13802:13933   */\n      tag_582\n        /* \"#utility.yul\":13928:13932   */\n      dup2\n        /* \"#utility.yul\":13802:13933   */\n      tag_422\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13794:13933   */\n      swap1\n      pop\n        /* \"#utility.yul\":13521:13940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13946:14126   */\n    tag_423:\n        /* \"#utility.yul\":13994:14071   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13991:13992   */\n      0x00\n        /* \"#utility.yul\":13984:14072   */\n      mstore\n        /* \"#utility.yul\":14091:14095   */\n      0x11\n        /* \"#utility.yul\":14088:14089   */\n      0x04\n        /* \"#utility.yul\":14081:14096   */\n      mstore\n        /* \"#utility.yul\":14115:14119   */\n      0x24\n        /* \"#utility.yul\":14112:14113   */\n      0x00\n        /* \"#utility.yul\":14105:14120   */\n      revert\n        /* \"#utility.yul\":14132:14542   */\n    tag_290:\n        /* \"#utility.yul\":14172:14179   */\n      0x00\n        /* \"#utility.yul\":14195:14215   */\n      tag_585\n        /* \"#utility.yul\":14213:14214   */\n      dup3\n        /* \"#utility.yul\":14195:14215   */\n      tag_386\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":14190:14215   */\n      swap2\n      pop\n        /* \"#utility.yul\":14229:14249   */\n      tag_586\n        /* \"#utility.yul\":14247:14248   */\n      dup4\n        /* \"#utility.yul\":14229:14249   */\n      tag_386\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14224:14249   */\n      swap3\n      pop\n        /* \"#utility.yul\":14284:14285   */\n      dup3\n        /* \"#utility.yul\":14281:14282   */\n      dup3\n        /* \"#utility.yul\":14277:14286   */\n      mul\n        /* \"#utility.yul\":14306:14336   */\n      tag_587\n        /* \"#utility.yul\":14324:14335   */\n      dup2\n        /* \"#utility.yul\":14306:14336   */\n      tag_386\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14295:14336   */\n      swap2\n      pop\n        /* \"#utility.yul\":14485:14486   */\n      dup3\n        /* \"#utility.yul\":14476:14483   */\n      dup3\n        /* \"#utility.yul\":14472:14487   */\n      div\n        /* \"#utility.yul\":14469:14470   */\n      dup5\n        /* \"#utility.yul\":14466:14488   */\n      eq\n        /* \"#utility.yul\":14446:14447   */\n      dup4\n        /* \"#utility.yul\":14439:14448   */\n      iszero\n        /* \"#utility.yul\":14419:14502   */\n      or\n        /* \"#utility.yul\":14396:14535   */\n      tag_588\n      jumpi\n        /* \"#utility.yul\":14515:14533   */\n      tag_589\n      tag_423\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14396:14535   */\n    tag_588:\n        /* \"#utility.yul\":14180:14542   */\n      pop\n        /* \"#utility.yul\":14132:14542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14548:14728   */\n    tag_424:\n        /* \"#utility.yul\":14596:14673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14593:14594   */\n      0x00\n        /* \"#utility.yul\":14586:14674   */\n      mstore\n        /* \"#utility.yul\":14693:14697   */\n      0x12\n        /* \"#utility.yul\":14690:14691   */\n      0x04\n        /* \"#utility.yul\":14683:14698   */\n      mstore\n        /* \"#utility.yul\":14717:14721   */\n      0x24\n        /* \"#utility.yul\":14714:14715   */\n      0x00\n        /* \"#utility.yul\":14707:14722   */\n      revert\n        /* \"#utility.yul\":14734:14919   */\n    tag_292:\n        /* \"#utility.yul\":14774:14775   */\n      0x00\n        /* \"#utility.yul\":14791:14811   */\n      tag_592\n        /* \"#utility.yul\":14809:14810   */\n      dup3\n        /* \"#utility.yul\":14791:14811   */\n      tag_386\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14786:14811   */\n      swap2\n      pop\n        /* \"#utility.yul\":14825:14845   */\n      tag_593\n        /* \"#utility.yul\":14843:14844   */\n      dup4\n        /* \"#utility.yul\":14825:14845   */\n      tag_386\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":14820:14845   */\n      swap3\n      pop\n        /* \"#utility.yul\":14864:14865   */\n      dup3\n        /* \"#utility.yul\":14854:14889   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":14869:14887   */\n      tag_595\n      tag_424\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":14854:14889   */\n    tag_594:\n        /* \"#utility.yul\":14911:14912   */\n      dup3\n        /* \"#utility.yul\":14908:14909   */\n      dup3\n        /* \"#utility.yul\":14904:14913   */\n      div\n        /* \"#utility.yul\":14899:14913   */\n      swap1\n      pop\n        /* \"#utility.yul\":14734:14919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14925:15119   */\n    tag_305:\n        /* \"#utility.yul\":14965:14969   */\n      0x00\n        /* \"#utility.yul\":14985:15005   */\n      tag_597\n        /* \"#utility.yul\":15003:15004   */\n      dup3\n        /* \"#utility.yul\":14985:15005   */\n      tag_386\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14980:15005   */\n      swap2\n      pop\n        /* \"#utility.yul\":15019:15039   */\n      tag_598\n        /* \"#utility.yul\":15037:15038   */\n      dup4\n        /* \"#utility.yul\":15019:15039   */\n      tag_386\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":15014:15039   */\n      swap3\n      pop\n        /* \"#utility.yul\":15063:15064   */\n      dup3\n        /* \"#utility.yul\":15060:15061   */\n      dup3\n        /* \"#utility.yul\":15056:15065   */\n      sub\n        /* \"#utility.yul\":15048:15065   */\n      swap1\n      pop\n        /* \"#utility.yul\":15087:15088   */\n      dup2\n        /* \"#utility.yul\":15081:15085   */\n      dup2\n        /* \"#utility.yul\":15078:15089   */\n      gt\n        /* \"#utility.yul\":15075:15112   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":15092:15110   */\n      tag_600\n      tag_423\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15075:15112   */\n    tag_599:\n        /* \"#utility.yul\":14925:15119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15125:15306   */\n    tag_425:\n        /* \"#utility.yul\":15265:15298   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":15261:15262   */\n      0x00\n        /* \"#utility.yul\":15253:15259   */\n      dup3\n        /* \"#utility.yul\":15249:15263   */\n      add\n        /* \"#utility.yul\":15242:15299   */\n      mstore\n        /* \"#utility.yul\":15125:15306   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15312:15678   */\n    tag_426:\n        /* \"#utility.yul\":15454:15457   */\n      0x00\n        /* \"#utility.yul\":15475:15542   */\n      tag_603\n        /* \"#utility.yul\":15539:15541   */\n      0x1f\n        /* \"#utility.yul\":15534:15537   */\n      dup4\n        /* \"#utility.yul\":15475:15542   */\n      tag_389\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15468:15542   */\n      swap2\n      pop\n        /* \"#utility.yul\":15551:15644   */\n      tag_604\n        /* \"#utility.yul\":15640:15643   */\n      dup3\n        /* \"#utility.yul\":15551:15644   */\n      tag_425\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15669:15671   */\n      0x20\n        /* \"#utility.yul\":15664:15667   */\n      dup3\n        /* \"#utility.yul\":15660:15672   */\n      add\n        /* \"#utility.yul\":15653:15672   */\n      swap1\n      pop\n        /* \"#utility.yul\":15312:15678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15684:16103   */\n    tag_334:\n        /* \"#utility.yul\":15850:15854   */\n      0x00\n        /* \"#utility.yul\":15888:15890   */\n      0x20\n        /* \"#utility.yul\":15877:15886   */\n      dup3\n        /* \"#utility.yul\":15873:15891   */\n      add\n        /* \"#utility.yul\":15865:15891   */\n      swap1\n      pop\n        /* \"#utility.yul\":15937:15946   */\n      dup2\n        /* \"#utility.yul\":15931:15935   */\n      dup2\n        /* \"#utility.yul\":15927:15947   */\n      sub\n        /* \"#utility.yul\":15923:15924   */\n      0x00\n        /* \"#utility.yul\":15912:15921   */\n      dup4\n        /* \"#utility.yul\":15908:15925   */\n      add\n        /* \"#utility.yul\":15901:15948   */\n      mstore\n        /* \"#utility.yul\":15965:16096   */\n      tag_606\n        /* \"#utility.yul\":16091:16095   */\n      dup2\n        /* \"#utility.yul\":15965:16096   */\n      tag_426\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15957:16096   */\n      swap1\n      pop\n        /* \"#utility.yul\":15684:16103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16109:16289   */\n    tag_348:\n        /* \"#utility.yul\":16157:16234   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16154:16155   */\n      0x00\n        /* \"#utility.yul\":16147:16235   */\n      mstore\n        /* \"#utility.yul\":16254:16258   */\n      0x41\n        /* \"#utility.yul\":16251:16252   */\n      0x04\n        /* \"#utility.yul\":16244:16259   */\n      mstore\n        /* \"#utility.yul\":16278:16282   */\n      0x24\n        /* \"#utility.yul\":16275:16276   */\n      0x00\n        /* \"#utility.yul\":16268:16283   */\n      revert\n        /* \"#utility.yul\":16295:16475   */\n    tag_352:\n        /* \"#utility.yul\":16343:16420   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16340:16341   */\n      0x00\n        /* \"#utility.yul\":16333:16421   */\n      mstore\n        /* \"#utility.yul\":16440:16444   */\n      0x32\n        /* \"#utility.yul\":16437:16438   */\n      0x04\n        /* \"#utility.yul\":16430:16445   */\n      mstore\n        /* \"#utility.yul\":16464:16468   */\n      0x24\n        /* \"#utility.yul\":16461:16462   */\n      0x00\n        /* \"#utility.yul\":16454:16469   */\n      revert\n        /* \"#utility.yul\":16481:16624   */\n    tag_427:\n        /* \"#utility.yul\":16538:16543   */\n      0x00\n        /* \"#utility.yul\":16569:16575   */\n      dup2\n        /* \"#utility.yul\":16563:16576   */\n      mload\n        /* \"#utility.yul\":16554:16576   */\n      swap1\n      pop\n        /* \"#utility.yul\":16585:16618   */\n      tag_610\n        /* \"#utility.yul\":16612:16617   */\n      dup2\n        /* \"#utility.yul\":16585:16618   */\n      tag_398\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":16481:16624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16630:16981   */\n    tag_356:\n        /* \"#utility.yul\":16700:16706   */\n      0x00\n        /* \"#utility.yul\":16749:16751   */\n      0x20\n        /* \"#utility.yul\":16737:16746   */\n      dup3\n        /* \"#utility.yul\":16728:16735   */\n      dup5\n        /* \"#utility.yul\":16724:16747   */\n      sub\n        /* \"#utility.yul\":16720:16752   */\n      slt\n        /* \"#utility.yul\":16717:16836   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":16755:16834   */\n      tag_613\n      tag_394\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16717:16836   */\n    tag_612:\n        /* \"#utility.yul\":16875:16876   */\n      0x00\n        /* \"#utility.yul\":16900:16964   */\n      tag_614\n        /* \"#utility.yul\":16956:16963   */\n      dup5\n        /* \"#utility.yul\":16947:16953   */\n      dup3\n        /* \"#utility.yul\":16936:16945   */\n      dup6\n        /* \"#utility.yul\":16932:16954   */\n      add\n        /* \"#utility.yul\":16900:16964   */\n      tag_427\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":16890:16964   */\n      swap2\n      pop\n        /* \"#utility.yul\":16846:16974   */\n      pop\n        /* \"#utility.yul\":16630:16981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16987:17072   */\n    tag_428:\n        /* \"#utility.yul\":17032:17039   */\n      0x00\n        /* \"#utility.yul\":17061:17066   */\n      dup2\n        /* \"#utility.yul\":17050:17066   */\n      swap1\n      pop\n        /* \"#utility.yul\":16987:17072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17078:17236   */\n    tag_429:\n        /* \"#utility.yul\":17136:17145   */\n      0x00\n        /* \"#utility.yul\":17169:17230   */\n      tag_617\n        /* \"#utility.yul\":17187:17229   */\n      tag_618\n        /* \"#utility.yul\":17196:17228   */\n      tag_619\n        /* \"#utility.yul\":17222:17227   */\n      dup5\n        /* \"#utility.yul\":17196:17228   */\n      tag_428\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":17187:17229   */\n      tag_409\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":17169:17230   */\n      tag_386\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17156:17230   */\n      swap1\n      pop\n        /* \"#utility.yul\":17078:17236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17242:17389   */\n    tag_430:\n        /* \"#utility.yul\":17337:17382   */\n      tag_621\n        /* \"#utility.yul\":17376:17381   */\n      dup2\n        /* \"#utility.yul\":17337:17382   */\n      tag_429\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":17332:17335   */\n      dup3\n        /* \"#utility.yul\":17325:17383   */\n      mstore\n        /* \"#utility.yul\":17242:17389   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17395:17509   */\n    tag_431:\n        /* \"#utility.yul\":17462:17468   */\n      0x00\n        /* \"#utility.yul\":17496:17501   */\n      dup2\n        /* \"#utility.yul\":17490:17502   */\n      mload\n        /* \"#utility.yul\":17480:17502   */\n      swap1\n      pop\n        /* \"#utility.yul\":17395:17509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17515:17699   */\n    tag_432:\n        /* \"#utility.yul\":17614:17625   */\n      0x00\n        /* \"#utility.yul\":17648:17654   */\n      dup3\n        /* \"#utility.yul\":17643:17646   */\n      dup3\n        /* \"#utility.yul\":17636:17655   */\n      mstore\n        /* \"#utility.yul\":17688:17692   */\n      0x20\n        /* \"#utility.yul\":17683:17686   */\n      dup3\n        /* \"#utility.yul\":17679:17693   */\n      add\n        /* \"#utility.yul\":17664:17693   */\n      swap1\n      pop\n        /* \"#utility.yul\":17515:17699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17705:17837   */\n    tag_433:\n        /* \"#utility.yul\":17772:17776   */\n      0x00\n        /* \"#utility.yul\":17795:17798   */\n      dup2\n        /* \"#utility.yul\":17787:17798   */\n      swap1\n      pop\n        /* \"#utility.yul\":17825:17829   */\n      0x20\n        /* \"#utility.yul\":17820:17823   */\n      dup3\n        /* \"#utility.yul\":17816:17830   */\n      add\n        /* \"#utility.yul\":17808:17830   */\n      swap1\n      pop\n        /* \"#utility.yul\":17705:17837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17843:17951   */\n    tag_434:\n        /* \"#utility.yul\":17920:17944   */\n      tag_626\n        /* \"#utility.yul\":17938:17943   */\n      dup2\n        /* \"#utility.yul\":17920:17944   */\n      tag_397\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":17915:17918   */\n      dup3\n        /* \"#utility.yul\":17908:17945   */\n      mstore\n        /* \"#utility.yul\":17843:17951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17957:18136   */\n    tag_435:\n        /* \"#utility.yul\":18026:18036   */\n      0x00\n        /* \"#utility.yul\":18047:18093   */\n      tag_628\n        /* \"#utility.yul\":18089:18092   */\n      dup4\n        /* \"#utility.yul\":18081:18087   */\n      dup4\n        /* \"#utility.yul\":18047:18093   */\n      tag_434\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":18125:18129   */\n      0x20\n        /* \"#utility.yul\":18120:18123   */\n      dup4\n        /* \"#utility.yul\":18116:18130   */\n      add\n        /* \"#utility.yul\":18102:18130   */\n      swap1\n      pop\n        /* \"#utility.yul\":17957:18136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18142:18255   */\n    tag_436:\n        /* \"#utility.yul\":18212:18216   */\n      0x00\n        /* \"#utility.yul\":18244:18248   */\n      0x20\n        /* \"#utility.yul\":18239:18242   */\n      dup3\n        /* \"#utility.yul\":18235:18249   */\n      add\n        /* \"#utility.yul\":18227:18249   */\n      swap1\n      pop\n        /* \"#utility.yul\":18142:18255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18291:19023   */\n    tag_437:\n        /* \"#utility.yul\":18410:18413   */\n      0x00\n        /* \"#utility.yul\":18439:18493   */\n      tag_631\n        /* \"#utility.yul\":18487:18492   */\n      dup3\n        /* \"#utility.yul\":18439:18493   */\n      tag_431\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":18509:18595   */\n      tag_632\n        /* \"#utility.yul\":18588:18594   */\n      dup2\n        /* \"#utility.yul\":18583:18586   */\n      dup6\n        /* \"#utility.yul\":18509:18595   */\n      tag_432\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":18502:18595   */\n      swap4\n      pop\n        /* \"#utility.yul\":18619:18675   */\n      tag_633\n        /* \"#utility.yul\":18669:18674   */\n      dup4\n        /* \"#utility.yul\":18619:18675   */\n      tag_433\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":18698:18705   */\n      dup1\n        /* \"#utility.yul\":18729:18730   */\n      0x00\n        /* \"#utility.yul\":18714:18998   */\n    tag_634:\n        /* \"#utility.yul\":18739:18745   */\n      dup4\n        /* \"#utility.yul\":18736:18737   */\n      dup2\n        /* \"#utility.yul\":18733:18746   */\n      lt\n        /* \"#utility.yul\":18714:18998   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":18815:18821   */\n      dup2\n        /* \"#utility.yul\":18809:18822   */\n      mload\n        /* \"#utility.yul\":18842:18905   */\n      tag_637\n        /* \"#utility.yul\":18901:18904   */\n      dup9\n        /* \"#utility.yul\":18886:18899   */\n      dup3\n        /* \"#utility.yul\":18842:18905   */\n      tag_435\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":18835:18905   */\n      swap8\n      pop\n        /* \"#utility.yul\":18928:18988   */\n      tag_638\n        /* \"#utility.yul\":18981:18987   */\n      dup4\n        /* \"#utility.yul\":18928:18988   */\n      tag_436\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":18918:18988   */\n      swap3\n      pop\n        /* \"#utility.yul\":18774:18998   */\n      pop\n        /* \"#utility.yul\":18761:18762   */\n      0x01\n        /* \"#utility.yul\":18758:18759   */\n      dup2\n        /* \"#utility.yul\":18754:18763   */\n      add\n        /* \"#utility.yul\":18749:18763   */\n      swap1\n      pop\n        /* \"#utility.yul\":18714:18998   */\n      jump(tag_634)\n    tag_636:\n        /* \"#utility.yul\":18718:18732   */\n      pop\n        /* \"#utility.yul\":19014:19017   */\n      dup6\n        /* \"#utility.yul\":19007:19017   */\n      swap4\n      pop\n        /* \"#utility.yul\":18415:19023   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18291:19023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19029:19860   */\n    tag_361:\n        /* \"#utility.yul\":19292:19296   */\n      0x00\n        /* \"#utility.yul\":19330:19333   */\n      0xa0\n        /* \"#utility.yul\":19319:19328   */\n      dup3\n        /* \"#utility.yul\":19315:19334   */\n      add\n        /* \"#utility.yul\":19307:19334   */\n      swap1\n      pop\n        /* \"#utility.yul\":19344:19415   */\n      tag_640\n        /* \"#utility.yul\":19412:19413   */\n      0x00\n        /* \"#utility.yul\":19401:19410   */\n      dup4\n        /* \"#utility.yul\":19397:19414   */\n      add\n        /* \"#utility.yul\":19388:19394   */\n      dup9\n        /* \"#utility.yul\":19344:19415   */\n      tag_387\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":19425:19505   */\n      tag_641\n        /* \"#utility.yul\":19501:19503   */\n      0x20\n        /* \"#utility.yul\":19490:19499   */\n      dup4\n        /* \"#utility.yul\":19486:19504   */\n      add\n        /* \"#utility.yul\":19477:19483   */\n      dup8\n        /* \"#utility.yul\":19425:19505   */\n      tag_430\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":19552:19561   */\n      dup2\n        /* \"#utility.yul\":19546:19550   */\n      dup2\n        /* \"#utility.yul\":19542:19562   */\n      sub\n        /* \"#utility.yul\":19537:19539   */\n      0x40\n        /* \"#utility.yul\":19526:19535   */\n      dup4\n        /* \"#utility.yul\":19522:19540   */\n      add\n        /* \"#utility.yul\":19515:19563   */\n      mstore\n        /* \"#utility.yul\":19580:19688   */\n      tag_642\n        /* \"#utility.yul\":19683:19687   */\n      dup2\n        /* \"#utility.yul\":19674:19680   */\n      dup7\n        /* \"#utility.yul\":19580:19688   */\n      tag_437\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":19572:19688   */\n      swap1\n      pop\n        /* \"#utility.yul\":19698:19770   */\n      tag_643\n        /* \"#utility.yul\":19766:19768   */\n      0x60\n        /* \"#utility.yul\":19755:19764   */\n      dup4\n        /* \"#utility.yul\":19751:19769   */\n      add\n        /* \"#utility.yul\":19742:19748   */\n      dup6\n        /* \"#utility.yul\":19698:19770   */\n      tag_408\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":19780:19853   */\n      tag_644\n        /* \"#utility.yul\":19848:19851   */\n      0x80\n        /* \"#utility.yul\":19837:19846   */\n      dup4\n        /* \"#utility.yul\":19833:19852   */\n      add\n        /* \"#utility.yul\":19824:19830   */\n      dup5\n        /* \"#utility.yul\":19780:19853   */\n      tag_387\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":19029:19860   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19866:20673   */\n    tag_368:\n        /* \"#utility.yul\":20115:20119   */\n      0x00\n        /* \"#utility.yul\":20153:20156   */\n      0xc0\n        /* \"#utility.yul\":20142:20151   */\n      dup3\n        /* \"#utility.yul\":20138:20157   */\n      add\n        /* \"#utility.yul\":20130:20157   */\n      swap1\n      pop\n        /* \"#utility.yul\":20167:20238   */\n      tag_646\n        /* \"#utility.yul\":20235:20236   */\n      0x00\n        /* \"#utility.yul\":20224:20233   */\n      dup4\n        /* \"#utility.yul\":20220:20237   */\n      add\n        /* \"#utility.yul\":20211:20217   */\n      dup10\n        /* \"#utility.yul\":20167:20238   */\n      tag_408\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":20248:20320   */\n      tag_647\n        /* \"#utility.yul\":20316:20318   */\n      0x20\n        /* \"#utility.yul\":20305:20314   */\n      dup4\n        /* \"#utility.yul\":20301:20319   */\n      add\n        /* \"#utility.yul\":20292:20298   */\n      dup9\n        /* \"#utility.yul\":20248:20320   */\n      tag_387\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":20330:20410   */\n      tag_648\n        /* \"#utility.yul\":20406:20408   */\n      0x40\n        /* \"#utility.yul\":20395:20404   */\n      dup4\n        /* \"#utility.yul\":20391:20409   */\n      add\n        /* \"#utility.yul\":20382:20388   */\n      dup8\n        /* \"#utility.yul\":20330:20410   */\n      tag_430\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":20420:20500   */\n      tag_649\n        /* \"#utility.yul\":20496:20498   */\n      0x60\n        /* \"#utility.yul\":20485:20494   */\n      dup4\n        /* \"#utility.yul\":20481:20499   */\n      add\n        /* \"#utility.yul\":20472:20478   */\n      dup7\n        /* \"#utility.yul\":20420:20500   */\n      tag_430\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":20510:20583   */\n      tag_650\n        /* \"#utility.yul\":20578:20581   */\n      0x80\n        /* \"#utility.yul\":20567:20576   */\n      dup4\n        /* \"#utility.yul\":20563:20582   */\n      add\n        /* \"#utility.yul\":20554:20560   */\n      dup6\n        /* \"#utility.yul\":20510:20583   */\n      tag_408\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":20593:20666   */\n      tag_651\n        /* \"#utility.yul\":20661:20664   */\n      0xa0\n        /* \"#utility.yul\":20650:20659   */\n      dup4\n        /* \"#utility.yul\":20646:20665   */\n      add\n        /* \"#utility.yul\":20637:20643   */\n      dup5\n        /* \"#utility.yul\":20593:20666   */\n      tag_387\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19866:20673   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20679:21342   */\n    tag_372:\n        /* \"#utility.yul\":20767:20773   */\n      0x00\n        /* \"#utility.yul\":20775:20781   */\n      dup1\n        /* \"#utility.yul\":20783:20789   */\n      0x00\n        /* \"#utility.yul\":20832:20834   */\n      0x60\n        /* \"#utility.yul\":20820:20829   */\n      dup5\n        /* \"#utility.yul\":20811:20818   */\n      dup7\n        /* \"#utility.yul\":20807:20830   */\n      sub\n        /* \"#utility.yul\":20803:20835   */\n      slt\n        /* \"#utility.yul\":20800:20919   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":20838:20917   */\n      tag_654\n      tag_394\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":20800:20919   */\n    tag_653:\n        /* \"#utility.yul\":20958:20959   */\n      0x00\n        /* \"#utility.yul\":20983:21047   */\n      tag_655\n        /* \"#utility.yul\":21039:21046   */\n      dup7\n        /* \"#utility.yul\":21030:21036   */\n      dup3\n        /* \"#utility.yul\":21019:21028   */\n      dup8\n        /* \"#utility.yul\":21015:21037   */\n      add\n        /* \"#utility.yul\":20983:21047   */\n      tag_417\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":20973:21047   */\n      swap4\n      pop\n        /* \"#utility.yul\":20929:21057   */\n      pop\n        /* \"#utility.yul\":21096:21098   */\n      0x20\n        /* \"#utility.yul\":21122:21186   */\n      tag_656\n        /* \"#utility.yul\":21178:21185   */\n      dup7\n        /* \"#utility.yul\":21169:21175   */\n      dup3\n        /* \"#utility.yul\":21158:21167   */\n      dup8\n        /* \"#utility.yul\":21154:21176   */\n      add\n        /* \"#utility.yul\":21122:21186   */\n      tag_417\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":21112:21186   */\n      swap3\n      pop\n        /* \"#utility.yul\":21067:21196   */\n      pop\n        /* \"#utility.yul\":21235:21237   */\n      0x40\n        /* \"#utility.yul\":21261:21325   */\n      tag_657\n        /* \"#utility.yul\":21317:21324   */\n      dup7\n        /* \"#utility.yul\":21308:21314   */\n      dup3\n        /* \"#utility.yul\":21297:21306   */\n      dup8\n        /* \"#utility.yul\":21293:21315   */\n      add\n        /* \"#utility.yul\":21261:21325   */\n      tag_417\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":21251:21325   */\n      swap2\n      pop\n        /* \"#utility.yul\":21206:21335   */\n      pop\n        /* \"#utility.yul\":20679:21342   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":21348:21790   */\n    tag_374:\n        /* \"#utility.yul\":21497:21501   */\n      0x00\n        /* \"#utility.yul\":21535:21537   */\n      0x60\n        /* \"#utility.yul\":21524:21533   */\n      dup3\n        /* \"#utility.yul\":21520:21538   */\n      add\n        /* \"#utility.yul\":21512:21538   */\n      swap1\n      pop\n        /* \"#utility.yul\":21548:21619   */\n      tag_659\n        /* \"#utility.yul\":21616:21617   */\n      0x00\n        /* \"#utility.yul\":21605:21614   */\n      dup4\n        /* \"#utility.yul\":21601:21618   */\n      add\n        /* \"#utility.yul\":21592:21598   */\n      dup7\n        /* \"#utility.yul\":21548:21619   */\n      tag_387\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":21629:21701   */\n      tag_660\n        /* \"#utility.yul\":21697:21699   */\n      0x20\n        /* \"#utility.yul\":21686:21695   */\n      dup4\n        /* \"#utility.yul\":21682:21700   */\n      add\n        /* \"#utility.yul\":21673:21679   */\n      dup6\n        /* \"#utility.yul\":21629:21701   */\n      tag_387\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":21711:21783   */\n      tag_661\n        /* \"#utility.yul\":21779:21781   */\n      0x40\n        /* \"#utility.yul\":21768:21777   */\n      dup4\n        /* \"#utility.yul\":21764:21782   */\n      add\n        /* \"#utility.yul\":21755:21761   */\n      dup5\n        /* \"#utility.yul\":21711:21783   */\n      tag_387\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":21348:21790   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21796:21987   */\n    tag_379:\n        /* \"#utility.yul\":21836:21839   */\n      0x00\n        /* \"#utility.yul\":21855:21875   */\n      tag_663\n        /* \"#utility.yul\":21873:21874   */\n      dup3\n        /* \"#utility.yul\":21855:21875   */\n      tag_386\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":21850:21875   */\n      swap2\n      pop\n        /* \"#utility.yul\":21889:21909   */\n      tag_664\n        /* \"#utility.yul\":21907:21908   */\n      dup4\n        /* \"#utility.yul\":21889:21909   */\n      tag_386\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":21884:21909   */\n      swap3\n      pop\n        /* \"#utility.yul\":21932:21933   */\n      dup3\n        /* \"#utility.yul\":21929:21930   */\n      dup3\n        /* \"#utility.yul\":21925:21934   */\n      add\n        /* \"#utility.yul\":21918:21934   */\n      swap1\n      pop\n        /* \"#utility.yul\":21953:21956   */\n      dup1\n        /* \"#utility.yul\":21950:21951   */\n      dup3\n        /* \"#utility.yul\":21947:21957   */\n      gt\n        /* \"#utility.yul\":21944:21980   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":21960:21978   */\n      tag_666\n      tag_423\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":21944:21980   */\n    tag_665:\n        /* \"#utility.yul\":21796:21987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a4d0349d9a94e3d9bb2f933fd2387c37298fc04e09197c88ec59a1efa477c7064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1211": {
									"entryPoint": null,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 1913,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1718,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 2051,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8299:8",
										"nodeType": "YulBlock",
										"src": "0:8299:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "140:152:8",
													"nodeType": "YulBlock",
													"src": "140:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:8",
																		"nodeType": "YulLiteral",
																		"src": "157:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:8",
																		"nodeType": "YulLiteral",
																		"src": "160:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:8"
																},
																"nativeSrc": "150:88:8",
																"nodeType": "YulFunctionCall",
																"src": "150:88:8"
															},
															"nativeSrc": "150:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:8",
																		"nodeType": "YulLiteral",
																		"src": "254:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:8",
																		"nodeType": "YulLiteral",
																		"src": "257:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:8"
																},
																"nativeSrc": "247:15:8",
																"nodeType": "YulFunctionCall",
																"src": "247:15:8"
															},
															"nativeSrc": "247:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:8",
																		"nodeType": "YulLiteral",
																		"src": "281:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:8"
																},
																"nativeSrc": "271:15:8",
																"nodeType": "YulFunctionCall",
																"src": "271:15:8"
															},
															"nativeSrc": "271:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:8"
											},
											{
												"body": {
													"nativeSrc": "326:152:8",
													"nodeType": "YulBlock",
													"src": "326:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:8",
																		"nodeType": "YulLiteral",
																		"src": "343:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:8",
																		"nodeType": "YulLiteral",
																		"src": "346:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:8"
																},
																"nativeSrc": "336:88:8",
																"nodeType": "YulFunctionCall",
																"src": "336:88:8"
															},
															"nativeSrc": "336:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:8",
																		"nodeType": "YulLiteral",
																		"src": "443:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:15:8",
																"nodeType": "YulFunctionCall",
																"src": "433:15:8"
															},
															"nativeSrc": "433:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:8",
																		"nodeType": "YulLiteral",
																		"src": "464:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:8",
																		"nodeType": "YulLiteral",
																		"src": "467:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:8"
																},
																"nativeSrc": "457:15:8",
																"nodeType": "YulFunctionCall",
																"src": "457:15:8"
															},
															"nativeSrc": "457:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:8"
											},
											{
												"body": {
													"nativeSrc": "535:269:8",
													"nodeType": "YulBlock",
													"src": "535:269:8",
													"statements": [
														{
															"nativeSrc": "545:22:8",
															"nodeType": "YulAssignment",
															"src": "545:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "565:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:8"
																},
																"nativeSrc": "555:12:8",
																"nodeType": "YulFunctionCall",
																"src": "555:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:8"
																}
															]
														},
														{
															"nativeSrc": "576:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:8",
																		"nodeType": "YulLiteral",
																		"src": "612:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:8"
																},
																"nativeSrc": "602:12:8",
																"nodeType": "YulFunctionCall",
																"src": "602:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:8",
																	"nodeType": "YulTypedName",
																	"src": "580:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:8",
																"nodeType": "YulBlock",
																"src": "653:51:8",
																"statements": [
																	{
																		"nativeSrc": "667:27:8",
																		"nodeType": "YulAssignment",
																		"src": "667:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:8",
																					"nodeType": "YulLiteral",
																					"src": "689:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:8"
																			},
																			"nativeSrc": "677:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:8"
																},
																"nativeSrc": "626:26:8",
																"nodeType": "YulFunctionCall",
																"src": "626:26:8"
															},
															"nativeSrc": "623:81:8",
															"nodeType": "YulIf",
															"src": "623:81:8"
														},
														{
															"body": {
																"nativeSrc": "756:42:8",
																"nodeType": "YulBlock",
																"src": "756:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:8"
																			},
																			"nativeSrc": "770:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:8"
																		},
																		"nativeSrc": "770:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:8",
																				"nodeType": "YulLiteral",
																				"src": "751:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:8"
																		},
																		"nativeSrc": "740:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:8"
																},
																"nativeSrc": "717:38:8",
																"nodeType": "YulFunctionCall",
																"src": "717:38:8"
															},
															"nativeSrc": "714:84:8",
															"nodeType": "YulIf",
															"src": "714:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:8",
														"nodeType": "YulTypedName",
														"src": "519:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:8",
														"nodeType": "YulTypedName",
														"src": "528:6:8",
														"type": ""
													}
												],
												"src": "484:320:8"
											},
											{
												"body": {
													"nativeSrc": "864:87:8",
													"nodeType": "YulBlock",
													"src": "864:87:8",
													"statements": [
														{
															"nativeSrc": "874:11:8",
															"nodeType": "YulAssignment",
															"src": "874:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:8",
																"nodeType": "YulIdentifier",
																"src": "882:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:8",
																		"nodeType": "YulLiteral",
																		"src": "902:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:8"
																},
																"nativeSrc": "895:14:8",
																"nodeType": "YulFunctionCall",
																"src": "895:14:8"
															},
															"nativeSrc": "895:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:8"
														},
														{
															"nativeSrc": "918:26:8",
															"nodeType": "YulAssignment",
															"src": "918:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:8",
																		"nodeType": "YulLiteral",
																		"src": "936:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:8",
																		"nodeType": "YulLiteral",
																		"src": "939:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:8"
																},
																"nativeSrc": "926:18:8",
																"nodeType": "YulFunctionCall",
																"src": "926:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:8",
														"nodeType": "YulTypedName",
														"src": "851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:8",
														"nodeType": "YulTypedName",
														"src": "859:4:8",
														"type": ""
													}
												],
												"src": "810:141:8"
											},
											{
												"body": {
													"nativeSrc": "1001:49:8",
													"nodeType": "YulBlock",
													"src": "1001:49:8",
													"statements": [
														{
															"nativeSrc": "1011:33:8",
															"nodeType": "YulAssignment",
															"src": "1011:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:8"
																		},
																		"nativeSrc": "1025:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:8"
																},
																"nativeSrc": "1021:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:8",
														"nodeType": "YulTypedName",
														"src": "984:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:8",
														"nodeType": "YulTypedName",
														"src": "994:6:8",
														"type": ""
													}
												],
												"src": "957:93:8"
											},
											{
												"body": {
													"nativeSrc": "1109:54:8",
													"nodeType": "YulBlock",
													"src": "1109:54:8",
													"statements": [
														{
															"nativeSrc": "1119:37:8",
															"nodeType": "YulAssignment",
															"src": "1119:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:8"
																},
																"nativeSrc": "1140:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:8",
														"nodeType": "YulTypedName",
														"src": "1084:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:8",
														"nodeType": "YulTypedName",
														"src": "1090:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:8",
														"nodeType": "YulTypedName",
														"src": "1100:8:8",
														"type": ""
													}
												],
												"src": "1056:107:8"
											},
											{
												"body": {
													"nativeSrc": "1245:317:8",
													"nodeType": "YulBlock",
													"src": "1245:317:8",
													"statements": [
														{
															"nativeSrc": "1255:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:8"
																},
																"nativeSrc": "1272:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:8"
																},
																"nativeSrc": "1311:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:8",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:8",
															"nodeType": "YulAssignment",
															"src": "1417:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:8"
																},
																"nativeSrc": "1429:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:8"
																}
															]
														},
														{
															"nativeSrc": "1477:30:8",
															"nodeType": "YulAssignment",
															"src": "1477:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:8"
																		},
																		"nativeSrc": "1497:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:8"
																},
																"nativeSrc": "1486:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:8"
																}
															]
														},
														{
															"nativeSrc": "1516:40:8",
															"nodeType": "YulAssignment",
															"src": "1516:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:8"
																		},
																		"nativeSrc": "1536:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:8"
																},
																"nativeSrc": "1526:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:8",
														"nodeType": "YulTypedName",
														"src": "1206:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:8",
														"nodeType": "YulTypedName",
														"src": "1213:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:8",
														"nodeType": "YulTypedName",
														"src": "1225:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:8",
														"nodeType": "YulTypedName",
														"src": "1238:6:8",
														"type": ""
													}
												],
												"src": "1169:393:8"
											},
											{
												"body": {
													"nativeSrc": "1613:32:8",
													"nodeType": "YulBlock",
													"src": "1613:32:8",
													"statements": [
														{
															"nativeSrc": "1623:16:8",
															"nodeType": "YulAssignment",
															"src": "1623:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:8",
																"nodeType": "YulIdentifier",
																"src": "1634:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:8",
														"nodeType": "YulTypedName",
														"src": "1595:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:8",
														"nodeType": "YulTypedName",
														"src": "1605:7:8",
														"type": ""
													}
												],
												"src": "1568:77:8"
											},
											{
												"body": {
													"nativeSrc": "1683:28:8",
													"nodeType": "YulBlock",
													"src": "1683:28:8",
													"statements": [
														{
															"nativeSrc": "1693:12:8",
															"nodeType": "YulAssignment",
															"src": "1693:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:8",
																"nodeType": "YulIdentifier",
																"src": "1700:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:8",
														"nodeType": "YulTypedName",
														"src": "1669:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:8",
														"nodeType": "YulTypedName",
														"src": "1679:3:8",
														"type": ""
													}
												],
												"src": "1651:60:8"
											},
											{
												"body": {
													"nativeSrc": "1777:82:8",
													"nodeType": "YulBlock",
													"src": "1777:82:8",
													"statements": [
														{
															"nativeSrc": "1787:66:8",
															"nodeType": "YulAssignment",
															"src": "1787:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:8"
																				},
																				"nativeSrc": "1827:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:8"
																		},
																		"nativeSrc": "1818:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:8"
																},
																"nativeSrc": "1800:53:8",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:8",
														"nodeType": "YulTypedName",
														"src": "1757:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:8",
														"nodeType": "YulTypedName",
														"src": "1767:9:8",
														"type": ""
													}
												],
												"src": "1717:142:8"
											},
											{
												"body": {
													"nativeSrc": "1912:28:8",
													"nodeType": "YulBlock",
													"src": "1912:28:8",
													"statements": [
														{
															"nativeSrc": "1922:12:8",
															"nodeType": "YulAssignment",
															"src": "1922:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:8",
																"nodeType": "YulIdentifier",
																"src": "1929:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:8",
														"nodeType": "YulTypedName",
														"src": "1898:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:8",
														"nodeType": "YulTypedName",
														"src": "1908:3:8",
														"type": ""
													}
												],
												"src": "1865:75:8"
											},
											{
												"body": {
													"nativeSrc": "2022:193:8",
													"nodeType": "YulBlock",
													"src": "2022:193:8",
													"statements": [
														{
															"nativeSrc": "2032:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:8"
																},
																"nativeSrc": "2056:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:8",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:8"
																				},
																				"nativeSrc": "2145:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:8"
																				},
																				"nativeSrc": "2166:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:8"
																		},
																		"nativeSrc": "2117:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:8"
																},
																"nativeSrc": "2104:105:8",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:8"
															},
															"nativeSrc": "2104:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:8",
														"nodeType": "YulTypedName",
														"src": "1999:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:8",
														"nodeType": "YulTypedName",
														"src": "2005:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:8",
														"nodeType": "YulTypedName",
														"src": "2013:7:8",
														"type": ""
													}
												],
												"src": "1946:269:8"
											},
											{
												"body": {
													"nativeSrc": "2270:24:8",
													"nodeType": "YulBlock",
													"src": "2270:24:8",
													"statements": [
														{
															"nativeSrc": "2280:8:8",
															"nodeType": "YulAssignment",
															"src": "2280:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:8",
																"nodeType": "YulLiteral",
																"src": "2287:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:8",
														"nodeType": "YulTypedName",
														"src": "2266:3:8",
														"type": ""
													}
												],
												"src": "2221:73:8"
											},
											{
												"body": {
													"nativeSrc": "2353:136:8",
													"nodeType": "YulBlock",
													"src": "2353:136:8",
													"statements": [
														{
															"nativeSrc": "2363:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:8"
																},
																"nativeSrc": "2377:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:8"
																},
																"nativeSrc": "2418:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:8"
															},
															"nativeSrc": "2418:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:8",
														"nodeType": "YulTypedName",
														"src": "2339:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:8",
														"nodeType": "YulTypedName",
														"src": "2345:6:8",
														"type": ""
													}
												],
												"src": "2300:189:8"
											},
											{
												"body": {
													"nativeSrc": "2545:136:8",
													"nodeType": "YulBlock",
													"src": "2545:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:8",
																"nodeType": "YulBlock",
																"src": "2612:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:8"
																			},
																			"nativeSrc": "2626:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:8"
																		},
																		"nativeSrc": "2626:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nativeSrc": "2562:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:8"
															},
															"nativeSrc": "2555:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:8",
																"nodeType": "YulBlock",
																"src": "2577:26:8",
																"statements": [
																	{
																		"nativeSrc": "2579:22:8",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:8"
																			},
																			"nativeSrc": "2588:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:8",
																"nodeType": "YulBlock",
																"src": "2559:2:8",
																"statements": []
															},
															"src": "2555:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:8",
														"nodeType": "YulTypedName",
														"src": "2533:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:8",
														"nodeType": "YulTypedName",
														"src": "2540:3:8",
														"type": ""
													}
												],
												"src": "2495:186:8"
											},
											{
												"body": {
													"nativeSrc": "2766:464:8",
													"nodeType": "YulBlock",
													"src": "2766:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:8",
																"nodeType": "YulBlock",
																"src": "2792:431:8",
																"statements": [
																	{
																		"nativeSrc": "2806:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:8"
																			},
																			"nativeSrc": "2822:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:8",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:8"
																					},
																					"nativeSrc": "2906:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:8"
																			},
																			"nativeSrc": "2892:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:8",
																			"nodeType": "YulBlock",
																			"src": "3093:27:8",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:8",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:8",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:8"
																			},
																			"nativeSrc": "3074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:8"
																		},
																		"nativeSrc": "3071:49:8",
																		"nodeType": "YulIf",
																		"src": "3071:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:8"
																							},
																							"nativeSrc": "3189:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:8"
																					},
																					"nativeSrc": "3175:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:8"
																			},
																			"nativeSrc": "3133:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:8"
																		},
																		"nativeSrc": "3133:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:8"
																},
																"nativeSrc": "2780:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:8"
															},
															"nativeSrc": "2777:446:8",
															"nodeType": "YulIf",
															"src": "2777:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:8",
														"nodeType": "YulTypedName",
														"src": "2742:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:8",
														"nodeType": "YulTypedName",
														"src": "2749:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:8",
														"nodeType": "YulTypedName",
														"src": "2754:10:8",
														"type": ""
													}
												],
												"src": "2687:543:8"
											},
											{
												"body": {
													"nativeSrc": "3299:54:8",
													"nodeType": "YulBlock",
													"src": "3299:54:8",
													"statements": [
														{
															"nativeSrc": "3309:37:8",
															"nodeType": "YulAssignment",
															"src": "3309:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:8"
																},
																"nativeSrc": "3330:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:8",
														"nodeType": "YulTypedName",
														"src": "3274:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:8",
														"nodeType": "YulTypedName",
														"src": "3280:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:8",
														"nodeType": "YulTypedName",
														"src": "3290:8:8",
														"type": ""
													}
												],
												"src": "3236:117:8"
											},
											{
												"body": {
													"nativeSrc": "3410:118:8",
													"nodeType": "YulBlock",
													"src": "3410:118:8",
													"statements": [
														{
															"nativeSrc": "3420:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:8"
																				},
																				"nativeSrc": "3465:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:8"
																				},
																				"nativeSrc": "3480:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:8"
																		},
																		"nativeSrc": "3436:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:8"
																},
																"nativeSrc": "3432:56:8",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:8",
															"nodeType": "YulAssignment",
															"src": "3497:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:8"
																},
																"nativeSrc": "3507:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:8",
														"nodeType": "YulTypedName",
														"src": "3387:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:8",
														"nodeType": "YulTypedName",
														"src": "3393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:8",
														"nodeType": "YulTypedName",
														"src": "3403:6:8",
														"type": ""
													}
												],
												"src": "3359:169:8"
											},
											{
												"body": {
													"nativeSrc": "3614:214:8",
													"nodeType": "YulBlock",
													"src": "3614:214:8",
													"statements": [
														{
															"nativeSrc": "3747:37:8",
															"nodeType": "YulAssignment",
															"src": "3747:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:8"
																},
																"nativeSrc": "3755:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:8"
																}
															]
														},
														{
															"nativeSrc": "3793:29:8",
															"nodeType": "YulAssignment",
															"src": "3793:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:8"
																		},
																		"nativeSrc": "3810:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:8"
																},
																"nativeSrc": "3801:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:8",
														"nodeType": "YulTypedName",
														"src": "3595:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:8",
														"nodeType": "YulTypedName",
														"src": "3601:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:8",
														"nodeType": "YulTypedName",
														"src": "3609:4:8",
														"type": ""
													}
												],
												"src": "3533:295:8"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:8",
													"nodeType": "YulBlock",
													"src": "3925:1303:8",
													"statements": [
														{
															"nativeSrc": "3936:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:8"
																},
																"nativeSrc": "3950:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:8",
																"nodeType": "YulBlock",
																"src": "4072:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:8"
																			},
																			"nativeSrc": "4074:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:8"
																		},
																		"nativeSrc": "4074:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:8"
																},
																"nativeSrc": "4041:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:8"
															},
															"nativeSrc": "4038:56:8",
															"nodeType": "YulIf",
															"src": "4038:56:8"
														},
														{
															"nativeSrc": "4104:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:8"
																		},
																		"nativeSrc": "4144:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:8"
																},
																"nativeSrc": "4118:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:8"
																},
																"nativeSrc": "4203:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:8"
															},
															"nativeSrc": "4203:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:8"
														},
														{
															"nativeSrc": "4280:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:8",
																"nodeType": "YulLiteral",
																"src": "4297:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:8",
															"nodeType": "YulAssignment",
															"src": "4308:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:8",
																"nodeType": "YulLiteral",
																"src": "4321:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:8",
																		"nodeType": "YulBlock",
																		"src": "4372:611:8",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:8",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:8"
																							},
																							"nativeSrc": "4413:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:8"
																					},
																					"nativeSrc": "4401:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:8",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:8"
																					},
																					"nativeSrc": "4451:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:8",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:8",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:8",
																					"nodeType": "YulBlock",
																					"src": "4569:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:8"
																												},
																												"nativeSrc": "4608:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:8"
																										},
																										"nativeSrc": "4602:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:8"
																								},
																								"nativeSrc": "4587:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:8"
																							},
																							"nativeSrc": "4587:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:8"
																						},
																						{
																							"nativeSrc": "4646:24:8",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:8",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:8"
																								},
																								"nativeSrc": "4656:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:8",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:8",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:8"
																								},
																								"nativeSrc": "4700:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:8"
																					},
																					"nativeSrc": "4532:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:8"
																				},
																				"nativeSrc": "4524:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:8",
																					"nodeType": "YulBlock",
																					"src": "4547:21:8",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:8",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:8",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:8"
																								},
																								"nativeSrc": "4554:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:8",
																					"nodeType": "YulBlock",
																					"src": "4528:3:8",
																					"statements": []
																				},
																				"src": "4524:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:8",
																					"nodeType": "YulBlock",
																					"src": "4768:156:8",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:8"
																										},
																										"nativeSrc": "4809:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:8"
																								},
																								"nativeSrc": "4803:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:8",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:8",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:8"
																												},
																												"nativeSrc": "4891:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:8"
																										},
																										"nativeSrc": "4861:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:8"
																								},
																								"nativeSrc": "4846:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:8"
																							},
																							"nativeSrc": "4846:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:8"
																					},
																					"nativeSrc": "4748:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:8"
																				},
																				"nativeSrc": "4745:179:8",
																				"nodeType": "YulIf",
																				"src": "4745:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:8",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:8"
																									},
																									"nativeSrc": "4954:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:8",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:8"
																							},
																							"nativeSrc": "4950:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:8"
																					},
																					"nativeSrc": "4937:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:8"
																				},
																				"nativeSrc": "4937:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:8"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:8",
																	"nodeType": "YulCase",
																	"src": "4365:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:8",
																		"nodeType": "YulBlock",
																		"src": "5000:222:8",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:8",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:8",
																					"nodeType": "YulBlock",
																					"src": "5051:67:8",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:8",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:8"
																										},
																										"nativeSrc": "5084:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:8"
																								},
																								"nativeSrc": "5078:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:8"
																				},
																				"nativeSrc": "5041:77:8",
																				"nodeType": "YulIf",
																				"src": "5041:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:8"
																							},
																							"nativeSrc": "5144:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:8"
																					},
																					"nativeSrc": "5131:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:8"
																				},
																				"nativeSrc": "5131:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:8"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:8",
																	"nodeType": "YulCase",
																	"src": "4992:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:8"
																},
																"nativeSrc": "4342:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:8"
															},
															"nativeSrc": "4335:887:8",
															"nodeType": "YulSwitch",
															"src": "4335:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:8",
														"nodeType": "YulTypedName",
														"src": "3914:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:8",
														"nodeType": "YulTypedName",
														"src": "3920:3:8",
														"type": ""
													}
												],
												"src": "3833:1395:8"
											},
											{
												"body": {
													"nativeSrc": "5279:81:8",
													"nodeType": "YulBlock",
													"src": "5279:81:8",
													"statements": [
														{
															"nativeSrc": "5289:65:8",
															"nodeType": "YulAssignment",
															"src": "5289:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:8",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:8"
																},
																"nativeSrc": "5300:54:8",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:8",
														"nodeType": "YulTypedName",
														"src": "5261:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:8",
														"nodeType": "YulTypedName",
														"src": "5271:7:8",
														"type": ""
													}
												],
												"src": "5234:126:8"
											},
											{
												"body": {
													"nativeSrc": "5411:51:8",
													"nodeType": "YulBlock",
													"src": "5411:51:8",
													"statements": [
														{
															"nativeSrc": "5421:35:8",
															"nodeType": "YulAssignment",
															"src": "5421:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:8"
																},
																"nativeSrc": "5432:24:8",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:8",
														"nodeType": "YulTypedName",
														"src": "5393:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:8",
														"nodeType": "YulTypedName",
														"src": "5403:7:8",
														"type": ""
													}
												],
												"src": "5366:96:8"
											},
											{
												"body": {
													"nativeSrc": "5533:53:8",
													"nodeType": "YulBlock",
													"src": "5533:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:8"
																		},
																		"nativeSrc": "5555:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:8"
																},
																"nativeSrc": "5543:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:8"
															},
															"nativeSrc": "5543:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:8",
														"nodeType": "YulTypedName",
														"src": "5521:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:8",
														"nodeType": "YulTypedName",
														"src": "5528:3:8",
														"type": ""
													}
												],
												"src": "5468:118:8"
											},
											{
												"body": {
													"nativeSrc": "5690:124:8",
													"nodeType": "YulBlock",
													"src": "5690:124:8",
													"statements": [
														{
															"nativeSrc": "5700:26:8",
															"nodeType": "YulAssignment",
															"src": "5700:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:8"
																},
																"nativeSrc": "5708:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:8"
																		},
																		"nativeSrc": "5789:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:8"
																},
																"nativeSrc": "5736:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:8"
															},
															"nativeSrc": "5736:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:8",
														"nodeType": "YulTypedName",
														"src": "5662:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:8",
														"nodeType": "YulTypedName",
														"src": "5674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:8",
														"nodeType": "YulTypedName",
														"src": "5685:4:8",
														"type": ""
													}
												],
												"src": "5592:222:8"
											},
											{
												"body": {
													"nativeSrc": "5860:35:8",
													"nodeType": "YulBlock",
													"src": "5860:35:8",
													"statements": [
														{
															"nativeSrc": "5870:19:8",
															"nodeType": "YulAssignment",
															"src": "5870:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5886:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5886:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5880:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5880:5:8"
																},
																"nativeSrc": "5880:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5880:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5870:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5820:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5853:6:8",
														"nodeType": "YulTypedName",
														"src": "5853:6:8",
														"type": ""
													}
												],
												"src": "5820:75:8"
											},
											{
												"body": {
													"nativeSrc": "5990:28:8",
													"nodeType": "YulBlock",
													"src": "5990:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6007:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6007:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6010:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6010:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6000:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6000:6:8"
																},
																"nativeSrc": "6000:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6000:12:8"
															},
															"nativeSrc": "6000:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "6000:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5901:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5901:117:8"
											},
											{
												"body": {
													"nativeSrc": "6113:28:8",
													"nodeType": "YulBlock",
													"src": "6113:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6130:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6130:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6133:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6133:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6123:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6123:6:8"
																},
																"nativeSrc": "6123:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6123:12:8"
															},
															"nativeSrc": "6123:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "6123:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "6024:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6024:117:8"
											},
											{
												"body": {
													"nativeSrc": "6190:79:8",
													"nodeType": "YulBlock",
													"src": "6190:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6247:16:8",
																"nodeType": "YulBlock",
																"src": "6247:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6256:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6256:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6259:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6259:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6249:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6249:6:8"
																			},
																			"nativeSrc": "6249:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6249:12:8"
																		},
																		"nativeSrc": "6249:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6249:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6213:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6213:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6238:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6238:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6220:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6220:17:8"
																				},
																				"nativeSrc": "6220:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6220:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6210:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6210:2:8"
																		},
																		"nativeSrc": "6210:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6210:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6203:6:8"
																},
																"nativeSrc": "6203:43:8",
																"nodeType": "YulFunctionCall",
																"src": "6203:43:8"
															},
															"nativeSrc": "6200:63:8",
															"nodeType": "YulIf",
															"src": "6200:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6147:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6183:5:8",
														"nodeType": "YulTypedName",
														"src": "6183:5:8",
														"type": ""
													}
												],
												"src": "6147:122:8"
											},
											{
												"body": {
													"nativeSrc": "6338:80:8",
													"nodeType": "YulBlock",
													"src": "6338:80:8",
													"statements": [
														{
															"nativeSrc": "6348:22:8",
															"nodeType": "YulAssignment",
															"src": "6348:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6363:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6363:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6357:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6357:5:8"
																},
																"nativeSrc": "6357:13:8",
																"nodeType": "YulFunctionCall",
																"src": "6357:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6348:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6348:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6406:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6406:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6379:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "6379:26:8"
																},
																"nativeSrc": "6379:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6379:33:8"
															},
															"nativeSrc": "6379:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6379:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "6275:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6316:6:8",
														"nodeType": "YulTypedName",
														"src": "6316:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6324:3:8",
														"nodeType": "YulTypedName",
														"src": "6324:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6332:5:8",
														"nodeType": "YulTypedName",
														"src": "6332:5:8",
														"type": ""
													}
												],
												"src": "6275:143:8"
											},
											{
												"body": {
													"nativeSrc": "6501:274:8",
													"nodeType": "YulBlock",
													"src": "6501:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6547:83:8",
																"nodeType": "YulBlock",
																"src": "6547:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6549:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6549:77:8"
																			},
																			"nativeSrc": "6549:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6549:79:8"
																		},
																		"nativeSrc": "6549:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6549:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6522:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6522:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6531:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6531:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6518:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:8"
																		},
																		"nativeSrc": "6518:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6518:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6543:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6514:3:8"
																},
																"nativeSrc": "6514:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6514:32:8"
															},
															"nativeSrc": "6511:119:8",
															"nodeType": "YulIf",
															"src": "6511:119:8"
														},
														{
															"nativeSrc": "6640:128:8",
															"nodeType": "YulBlock",
															"src": "6640:128:8",
															"statements": [
																{
																	"nativeSrc": "6655:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6655:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6669:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6659:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6659:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6684:74:8",
																	"nodeType": "YulAssignment",
																	"src": "6684:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6730:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6730:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6741:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6741:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6726:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6726:3:8"
																				},
																				"nativeSrc": "6726:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6726:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6750:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6750:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "6694:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "6694:31:8"
																		},
																		"nativeSrc": "6694:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6684:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6684:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "6424:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6471:9:8",
														"nodeType": "YulTypedName",
														"src": "6471:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6482:7:8",
														"nodeType": "YulTypedName",
														"src": "6482:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6494:6:8",
														"nodeType": "YulTypedName",
														"src": "6494:6:8",
														"type": ""
													}
												],
												"src": "6424:351:8"
											},
											{
												"body": {
													"nativeSrc": "6907:206:8",
													"nodeType": "YulBlock",
													"src": "6907:206:8",
													"statements": [
														{
															"nativeSrc": "6917:26:8",
															"nodeType": "YulAssignment",
															"src": "6917:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6929:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6929:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6940:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6925:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:8"
																},
																"nativeSrc": "6925:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6925:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6917:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6917:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6997:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6997:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7010:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7021:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7021:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7006:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:8"
																		},
																		"nativeSrc": "7006:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7006:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6953:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6953:43:8"
																},
																"nativeSrc": "6953:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6953:71:8"
															},
															"nativeSrc": "6953:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6953:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7078:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7078:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7091:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7102:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7087:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7087:3:8"
																		},
																		"nativeSrc": "7087:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7087:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7034:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7034:43:8"
																},
																"nativeSrc": "7034:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7034:72:8"
															},
															"nativeSrc": "7034:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7034:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "6781:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6871:9:8",
														"nodeType": "YulTypedName",
														"src": "6871:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6883:6:8",
														"nodeType": "YulTypedName",
														"src": "6883:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6891:6:8",
														"nodeType": "YulTypedName",
														"src": "6891:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6902:4:8",
														"nodeType": "YulTypedName",
														"src": "6902:4:8",
														"type": ""
													}
												],
												"src": "6781:332:8"
											},
											{
												"body": {
													"nativeSrc": "7147:152:8",
													"nodeType": "YulBlock",
													"src": "7147:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7164:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7164:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7167:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7167:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7157:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:8"
																},
																"nativeSrc": "7157:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7157:88:8"
															},
															"nativeSrc": "7157:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7157:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7261:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7261:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7264:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7264:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7254:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7254:6:8"
																},
																"nativeSrc": "7254:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7254:15:8"
															},
															"nativeSrc": "7254:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7254:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7285:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7285:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7288:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7278:6:8"
																},
																"nativeSrc": "7278:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7278:15:8"
															},
															"nativeSrc": "7278:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7278:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7119:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7119:180:8"
											},
											{
												"body": {
													"nativeSrc": "7349:147:8",
													"nodeType": "YulBlock",
													"src": "7349:147:8",
													"statements": [
														{
															"nativeSrc": "7359:25:8",
															"nodeType": "YulAssignment",
															"src": "7359:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7382:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7382:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7364:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7364:17:8"
																},
																"nativeSrc": "7364:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7364:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7359:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7359:1:8"
																}
															]
														},
														{
															"nativeSrc": "7393:25:8",
															"nodeType": "YulAssignment",
															"src": "7393:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7416:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7416:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7398:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7398:17:8"
																},
																"nativeSrc": "7398:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7398:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7393:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7393:1:8"
																}
															]
														},
														{
															"nativeSrc": "7427:16:8",
															"nodeType": "YulAssignment",
															"src": "7427:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7438:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7438:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7441:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7441:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7434:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:8"
																},
																"nativeSrc": "7434:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7434:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7427:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7467:22:8",
																"nodeType": "YulBlock",
																"src": "7467:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7469:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7469:16:8"
																			},
																			"nativeSrc": "7469:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7469:18:8"
																		},
																		"nativeSrc": "7469:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7469:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7459:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7459:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7462:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7462:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7456:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7456:2:8"
																},
																"nativeSrc": "7456:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7456:10:8"
															},
															"nativeSrc": "7453:36:8",
															"nodeType": "YulIf",
															"src": "7453:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7305:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7336:1:8",
														"nodeType": "YulTypedName",
														"src": "7336:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7339:1:8",
														"nodeType": "YulTypedName",
														"src": "7339:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7345:3:8",
														"nodeType": "YulTypedName",
														"src": "7345:3:8",
														"type": ""
													}
												],
												"src": "7305:191:8"
											},
											{
												"body": {
													"nativeSrc": "7567:53:8",
													"nodeType": "YulBlock",
													"src": "7567:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7584:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7584:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7607:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7607:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7589:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7589:17:8"
																		},
																		"nativeSrc": "7589:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7577:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7577:6:8"
																},
																"nativeSrc": "7577:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7577:37:8"
															},
															"nativeSrc": "7577:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7577:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7502:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7555:5:8",
														"nodeType": "YulTypedName",
														"src": "7555:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7562:3:8",
														"nodeType": "YulTypedName",
														"src": "7562:3:8",
														"type": ""
													}
												],
												"src": "7502:118:8"
											},
											{
												"body": {
													"nativeSrc": "7780:288:8",
													"nodeType": "YulBlock",
													"src": "7780:288:8",
													"statements": [
														{
															"nativeSrc": "7790:26:8",
															"nodeType": "YulAssignment",
															"src": "7790:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7802:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7813:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7813:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7798:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7798:3:8"
																},
																"nativeSrc": "7798:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7798:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7790:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7790:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7870:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7870:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7883:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7883:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7894:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7894:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7879:3:8"
																		},
																		"nativeSrc": "7879:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7879:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7826:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7826:43:8"
																},
																"nativeSrc": "7826:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7826:71:8"
															},
															"nativeSrc": "7826:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7826:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7951:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7951:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7964:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7964:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7975:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7975:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7960:3:8"
																		},
																		"nativeSrc": "7960:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7960:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7907:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7907:43:8"
																},
																"nativeSrc": "7907:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7907:72:8"
															},
															"nativeSrc": "7907:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7907:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8033:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8033:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8046:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8046:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8057:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8057:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8042:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:8"
																		},
																		"nativeSrc": "8042:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8042:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7989:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7989:43:8"
																},
																"nativeSrc": "7989:72:8",
																"nodeType": "YulFunctionCall",
																"src": "7989:72:8"
															},
															"nativeSrc": "7989:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "7989:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7626:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7736:9:8",
														"nodeType": "YulTypedName",
														"src": "7736:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7748:6:8",
														"nodeType": "YulTypedName",
														"src": "7748:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7756:6:8",
														"nodeType": "YulTypedName",
														"src": "7756:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7764:6:8",
														"nodeType": "YulTypedName",
														"src": "7764:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7775:4:8",
														"nodeType": "YulTypedName",
														"src": "7775:4:8",
														"type": ""
													}
												],
												"src": "7626:442:8"
											},
											{
												"body": {
													"nativeSrc": "8172:124:8",
													"nodeType": "YulBlock",
													"src": "8172:124:8",
													"statements": [
														{
															"nativeSrc": "8182:26:8",
															"nodeType": "YulAssignment",
															"src": "8182:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8194:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8194:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8205:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8205:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8190:3:8"
																},
																"nativeSrc": "8190:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8190:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8182:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8182:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8262:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8262:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8275:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8275:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8286:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8286:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8271:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8271:3:8"
																		},
																		"nativeSrc": "8271:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8271:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8218:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8218:43:8"
																},
																"nativeSrc": "8218:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8218:71:8"
															},
															"nativeSrc": "8218:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8218:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8074:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8144:9:8",
														"nodeType": "YulTypedName",
														"src": "8144:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8156:6:8",
														"nodeType": "YulTypedName",
														"src": "8156:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8167:4:8",
														"nodeType": "YulTypedName",
														"src": "8167:4:8",
														"type": ""
													}
												],
												"src": "8074:222:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526101f46009556103e8600a556101f4600b556101f4600c55690a968163f0a57b40000060105534801562000036575f80fd5b50336040518060400160405280600e81526020017f4175746f6d61746f7220436f696e0000000000000000000000000000000000008152506040518060400160405280600381526020017f41544300000000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000c8b565b508060049081620000c7919062000c8b565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013d575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000134919062000db2565b60405180910390fd5b6200014e81620006b660201b60201c565b50600160068190555062000175336b033b2e3c9fd0803ce80000006200077960201b60201c565b7310ed43c718714eb63d5aa57b78b54704e256024e60075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000234573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200025a919062000e00565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002e1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000307919062000e00565b6040518363ffffffff1660e01b81526004016200032692919062000e30565b6020604051808303815f875af115801562000343573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000369919062000e00565b60085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507373add9b0fae851f9f203ba5346d240c32d5af259600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073fbd336b10d3aa003bb0491277bd1b100a7600b7a600e5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c5e979514ebe80172edba7c7cfe38b599e4e4823600f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f3073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555062000f29565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620007ec575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620007e3919062000db2565b60405180910390fd5b620007ff5f83836200080360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000857578060025f8282546200084a919062000e88565b9250508190555062000928565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620008e3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620008da9392919062000ed3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000971578060025f8282540392505081905550620009bb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000a1a919062000f0e565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168062000aa357607f821691505b60208210810362000ab95762000ab862000a5e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830262000b1d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000ae0565b62000b29868362000ae0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000b7362000b6d62000b678462000b41565b62000b4a565b62000b41565b9050919050565b5f819050919050565b62000b8e8362000b53565b62000ba662000b9d8262000b7a565b84845462000aec565b825550505050565b5f90565b62000bbc62000bae565b62000bc981848462000b83565b505050565b5b8181101562000bf05762000be45f8262000bb2565b60018101905062000bcf565b5050565b601f82111562000c3f5762000c098162000abf565b62000c148462000ad1565b8101602085101562000c24578190505b62000c3c62000c338562000ad1565b83018262000bce565b50505b505050565b5f82821c905092915050565b5f62000c615f198460080262000c44565b1980831691505092915050565b5f62000c7b838362000c50565b9150826002028217905092915050565b62000c968262000a27565b67ffffffffffffffff81111562000cb25762000cb162000a31565b5b62000cbe825462000a8b565b62000ccb82828562000bf4565b5f60209050601f83116001811462000d01575f841562000cec578287015190505b62000cf8858262000c6e565b86555062000d67565b601f19841662000d118662000abf565b5f5b8281101562000d3a5784890151825560018201915060208501945060208101905062000d13565b8683101562000d5a578489015162000d56601f89168262000c50565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000d9a8262000d6f565b9050919050565b62000dac8162000d8e565b82525050565b5f60208201905062000dc75f83018462000da1565b92915050565b5f80fd5b62000ddc8162000d8e565b811462000de7575f80fd5b50565b5f8151905062000dfa8162000dd1565b92915050565b5f6020828403121562000e185762000e1762000dcd565b5b5f62000e278482850162000dea565b91505092915050565b5f60408201905062000e455f83018562000da1565b62000e54602083018462000da1565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000e948262000b41565b915062000ea18362000b41565b925082820190508082111562000ebc5762000ebb62000e5b565b5b92915050565b62000ecd8162000b41565b82525050565b5f60608201905062000ee85f83018662000da1565b62000ef7602083018562000ec2565b62000f06604083018462000ec2565b949350505050565b5f60208201905062000f235f83018462000ec2565b92915050565b612a838062000f375f395ff3fe6080604052600436106101db575f3560e01c806370a0823111610101578063a3342fba11610094578063d862686b11610063578063d862686b1461067e578063dd62ed3e146106a8578063f2fde38b146106e4578063f887ea401461070c576101e2565b8063a3342fba146105c6578063a8aa1b31146105f0578063a9059cbb1461061a578063cb96372814610656576101e2565b80638da5cb5b116100d05780638da5cb5b146105205780638ea5220f1461054a57806395d89b41146105745780639d0014b11461059e576101e2565b806370a082311461048e578063715018a6146104ca57806375f0a874146104e05780638a8c523c1461050a576101e2565b80631de3b450116101795780635342acb4116101485780635342acb4146103d657806354ad8aee146104125780636612e66f1461043c578063665c6de914610464576101e2565b80631de3b4501461031c57806323b872dd14610346578063313ce567146103825780634ada218b146103ac576101e2565b8063095ea7b3116101b5578063095ea7b314610264578063147c9f6d146102a057806318160ddd146102c85780631d2cb02d146102f2576101e2565b806302af37bb146101e65780630445b6671461021057806306fdde031461023a576101e2565b366101e257005b5f80fd5b3480156101f1575f80fd5b506101fa610736565b6040516102079190611f32565b60405180910390f35b34801561021b575f80fd5b5061022461073c565b6040516102319190611f32565b60405180910390f35b348015610245575f80fd5b5061024e610742565b60405161025b9190611fd5565b60405180910390f35b34801561026f575f80fd5b5061028a6004803603810190610285919061207d565b6107d2565b60405161029791906120d5565b60405180910390f35b3480156102ab575f80fd5b506102c660048036038101906102c191906120ee565b6107f4565b005b3480156102d3575f80fd5b506102dc610a23565b6040516102e99190611f32565b60405180910390f35b3480156102fd575f80fd5b50610306610a2c565b6040516103139190611f32565b60405180910390f35b348015610327575f80fd5b50610330610a32565b60405161033d9190611f32565b60405180910390f35b348015610351575f80fd5b5061036c6004803603810190610367919061213e565b610a38565b60405161037991906120d5565b60405180910390f35b34801561038d575f80fd5b50610396610a66565b6040516103a391906121a9565b60405180910390f35b3480156103b7575f80fd5b506103c0610a6e565b6040516103cd91906120d5565b60405180910390f35b3480156103e1575f80fd5b506103fc60048036038101906103f791906121c2565b610a81565b60405161040991906120d5565b60405180910390f35b34801561041d575f80fd5b50610426610a9e565b6040516104339190611f32565b60405180910390f35b348015610447575f80fd5b50610462600480360381019061045d9190612217565b610aa4565b005b34801561046f575f80fd5b50610478610b04565b6040516104859190611f32565b60405180910390f35b348015610499575f80fd5b506104b460048036038101906104af91906121c2565b610b0a565b6040516104c19190611f32565b60405180910390f35b3480156104d5575f80fd5b506104de610b4f565b005b3480156104eb575f80fd5b506104f4610b62565b6040516105019190612264565b60405180910390f35b348015610515575f80fd5b5061051e610b87565b005b34801561052b575f80fd5b50610534610bac565b6040516105419190612264565b60405180910390f35b348015610555575f80fd5b5061055e610bd4565b60405161056b9190612264565b60405180910390f35b34801561057f575f80fd5b50610588610bf9565b6040516105959190611fd5565b60405180910390f35b3480156105a9575f80fd5b506105c460048036038101906105bf919061227d565b610c89565b005b3480156105d1575f80fd5b506105da610c9b565b6040516105e79190612264565b60405180910390f35b3480156105fb575f80fd5b50610604610cc0565b6040516106119190612264565b60405180910390f35b348015610625575f80fd5b50610640600480360381019061063b919061207d565b610ce5565b60405161064d91906120d5565b60405180910390f35b348015610661575f80fd5b5061067c600480360381019061067791906121c2565b610d02565b005b348015610689575f80fd5b50610692610e6e565b60405161069f9190611f32565b60405180910390f35b3480156106b3575f80fd5b506106ce60048036038101906106c991906122a8565b610e74565b6040516106db9190611f32565b60405180910390f35b3480156106ef575f80fd5b5061070a600480360381019061070591906121c2565b610ef6565b005b348015610717575f80fd5b50610720610f7a565b60405161072d9190612341565b60405180910390f35b6109c481565b60105481565b60606003805461075190612387565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90612387565b80156107c85780601f1061079f576101008083540402835291602001916107c8565b820191905f5260205f20905b8154815290600101906020018083116107ab57829003601f168201915b5050505050905090565b5f806107dc610f9f565b90506107e9818585610fa6565b600191505092915050565b6107fc610fb8565b82600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600e5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160125f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b5f600254905090565b600c5481565b60095481565b5f80610a42610f9f565b9050610a4f85828561103f565b610a5a8585856110d2565b60019150509392505050565b5f6012905090565b601160019054906101000a900460ff1681565b6012602052805f5260405f205f915054906101000a900460ff1681565b6109c481565b610aac610fb8565b8060125f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600a5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b57610fb8565b610b605f611569565b565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b8f610fb8565b6001601160016101000a81548160ff021916908315150217905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054610c0890612387565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3490612387565b8015610c7f5780601f10610c5657610100808354040283529160200191610c7f565b820191905f5260205f20905b815481529060010190602001808311610c6257829003601f168201915b5050505050905090565b610c91610fb8565b8060108190555050565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610cf8610cf1610f9f565b84846110d2565b6001905092915050565b610d0a610fb8565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6f90612401565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dce9190612264565b602060405180830381865afa158015610de9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e0d9190612433565b6040518363ffffffff1660e01b8152600401610e2a92919061245e565b6020604051808303815f875af1158015610e46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6a9190612499565b5050565b600b5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610efe610fb8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f6e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f659190612264565b60405180910390fd5b610f7781611569565b50565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610fb3838383600161162c565b505050565b610fc0610f9f565b73ffffffffffffffffffffffffffffffffffffffff16610fde610bac565b73ffffffffffffffffffffffffffffffffffffffff161461103d57611001610f9f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110349190612264565b60405180910390fd5b565b5f61104a8484610e74565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110cc57818110156110bd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110b4939291906124c4565b60405180910390fd5b6110cb84848484035f61162c565b5b50505050565b6110da6117fb565b5f811161111c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111390612569565b60405180910390fd5b601160019054906101000a900460ff168061117d575060125f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806111ce575060125f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61120d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611204906125d1565b60405180910390fd5b5f60125f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156112ac575060125f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b156115505760085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611327576127106109c483611316919061261c565b611320919061268a565b905061139a565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611399576127106109c48361138c919061261c565b611396919061268a565b90505b5b5f81111561154f575f6109c4600954836113b4919061261c565b6113be919061268a565b90505f6109c4600a54846113d2919061261c565b6113dc919061268a565b90505f6109c4600b54856113f0919061261c565b6113fa919061268a565b90505f8183858761140b91906126ba565b61141591906126ba565b61141f91906126ba565b905061142c88308661184a565b61145888600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561184a565b61148488600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461184a565b6114b088600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361184a565b84866114bc91906126ba565b955060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16148015611524575060105461152130610b0a565b10155b801561153c575060115f9054906101000a900460ff16155b1561154a5761154961193a565b5b505050505b5b61155b84848461184a565b50611564611cf7565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361169c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116939190612264565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361170c575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117039190612264565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156117f5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117ec9190611f32565b60405180910390a35b50505050565b600260065403611840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183790612737565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118ba575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118b19190612264565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361192a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119219190612264565b60405180910390fd5b611935838383611d01565b505050565b600160115f6101000a81548160ff0219169083151502179055505f61195e30610b0a565b90505f60028261196e919061268a565b90505f818361197d91906126ba565b90505f600267ffffffffffffffff81111561199b5761199a612755565b5b6040519080825280602002602001820160405280156119c95781602001602082028036833780820191505090505b50905030815f815181106119e0576119df612782565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a84573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611aa891906127c3565b81600181518110611abc57611abb612782565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f479050611b263060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610fa6565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947855f8530426040518663ffffffff1660e01b8152600401611b889594939291906128de565b5f604051808303815f87803b158015611b9f575f80fd5b505af1158015611bb1573d5f803e3d5ffd5b505050505f8147611bc291906126ba565b9050611bf03060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610fa6565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7198230875f8061dead426040518863ffffffff1660e01b8152600401611c5796959493929190612936565b60606040518083038185885af1158015611c73573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611c989190612995565b5050507f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561858286604051611cce939291906129e5565b60405180910390a15f60115f6101000a81548160ff021916908315150217905550505050505050565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d51578060025f828254611d459190612a1a565b92505081905550611e1f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611dda578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611dd1939291906124c4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e66578060025f8282540392505081905550611eb0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f0d9190611f32565b60405180910390a3505050565b5f819050919050565b611f2c81611f1a565b82525050565b5f602082019050611f455f830184611f23565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f82578082015181840152602081019050611f67565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611fa782611f4b565b611fb18185611f55565b9350611fc1818560208601611f65565b611fca81611f8d565b840191505092915050565b5f6020820190508181035f830152611fed8184611f9d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61202282611ff9565b9050919050565b61203281612018565b811461203c575f80fd5b50565b5f8135905061204d81612029565b92915050565b61205c81611f1a565b8114612066575f80fd5b50565b5f8135905061207781612053565b92915050565b5f806040838503121561209357612092611ff5565b5b5f6120a08582860161203f565b92505060206120b185828601612069565b9150509250929050565b5f8115159050919050565b6120cf816120bb565b82525050565b5f6020820190506120e85f8301846120c6565b92915050565b5f805f6060848603121561210557612104611ff5565b5b5f6121128682870161203f565b93505060206121238682870161203f565b92505060406121348682870161203f565b9150509250925092565b5f805f6060848603121561215557612154611ff5565b5b5f6121628682870161203f565b93505060206121738682870161203f565b925050604061218486828701612069565b9150509250925092565b5f60ff82169050919050565b6121a38161218e565b82525050565b5f6020820190506121bc5f83018461219a565b92915050565b5f602082840312156121d7576121d6611ff5565b5b5f6121e48482850161203f565b91505092915050565b6121f6816120bb565b8114612200575f80fd5b50565b5f81359050612211816121ed565b92915050565b5f806040838503121561222d5761222c611ff5565b5b5f61223a8582860161203f565b925050602061224b85828601612203565b9150509250929050565b61225e81612018565b82525050565b5f6020820190506122775f830184612255565b92915050565b5f6020828403121561229257612291611ff5565b5b5f61229f84828501612069565b91505092915050565b5f80604083850312156122be576122bd611ff5565b5b5f6122cb8582860161203f565b92505060206122dc8582860161203f565b9150509250929050565b5f819050919050565b5f6123096123046122ff84611ff9565b6122e6565b611ff9565b9050919050565b5f61231a826122ef565b9050919050565b5f61232b82612310565b9050919050565b61233b81612321565b82525050565b5f6020820190506123545f830184612332565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061239e57607f821691505b6020821081036123b1576123b061235a565b5b50919050565b7f43616e6e6f7420776974686472617720415443000000000000000000000000005f82015250565b5f6123eb601383611f55565b91506123f6826123b7565b602082019050919050565b5f6020820190508181035f830152612418816123df565b9050919050565b5f8151905061242d81612053565b92915050565b5f6020828403121561244857612447611ff5565b5b5f6124558482850161241f565b91505092915050565b5f6040820190506124715f830185612255565b61247e6020830184611f23565b9392505050565b5f81519050612493816121ed565b92915050565b5f602082840312156124ae576124ad611ff5565b5b5f6124bb84828501612485565b91505092915050565b5f6060820190506124d75f830186612255565b6124e46020830185611f23565b6124f16040830184611f23565b949350505050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f612553602983611f55565b915061255e826124f9565b604082019050919050565b5f6020820190508181035f83015261258081612547565b9050919050565b7f54726164696e67206e6f7420656e61626c6564000000000000000000000000005f82015250565b5f6125bb601383611f55565b91506125c682612587565b602082019050919050565b5f6020820190508181035f8301526125e8816125af565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61262682611f1a565b915061263183611f1a565b925082820261263f81611f1a565b91508282048414831517612656576126556125ef565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61269482611f1a565b915061269f83611f1a565b9250826126af576126ae61265d565b5b828204905092915050565b5f6126c482611f1a565b91506126cf83611f1a565b92508282039050818111156126e7576126e66125ef565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612721601f83611f55565b915061272c826126ed565b602082019050919050565b5f6020820190508181035f83015261274e81612715565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f815190506127bd81612029565b92915050565b5f602082840312156127d8576127d7611ff5565b5b5f6127e5848285016127af565b91505092915050565b5f819050919050565b5f61281161280c612807846127ee565b6122e6565b611f1a565b9050919050565b612821816127f7565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61285981612018565b82525050565b5f61286a8383612850565b60208301905092915050565b5f602082019050919050565b5f61288c82612827565b6128968185612831565b93506128a183612841565b805f5b838110156128d15781516128b8888261285f565b97506128c383612876565b9250506001810190506128a4565b5085935050505092915050565b5f60a0820190506128f15f830188611f23565b6128fe6020830187612818565b81810360408301526129108186612882565b905061291f6060830185612255565b61292c6080830184611f23565b9695505050505050565b5f60c0820190506129495f830189612255565b6129566020830188611f23565b6129636040830187612818565b6129706060830186612818565b61297d6080830185612255565b61298a60a0830184611f23565b979650505050505050565b5f805f606084860312156129ac576129ab611ff5565b5b5f6129b98682870161241f565b93505060206129ca8682870161241f565b92505060406129db8682870161241f565b9150509250925092565b5f6060820190506129f85f830186611f23565b612a056020830185611f23565b612a126040830184611f23565b949350505050565b5f612a2482611f1a565b9150612a2f83611f1a565b9250828201905080821115612a4757612a466125ef565b5b9291505056fea26469706673582212200a4d0349d9a94e3d9bb2f933fd2387c37298fc04e09197c88ec59a1efa477c7064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1F4 PUSH1 0x9 SSTORE PUSH2 0x3E8 PUSH1 0xA SSTORE PUSH2 0x1F4 PUSH1 0xB SSTORE PUSH2 0x1F4 PUSH1 0xC SSTORE PUSH10 0xA968163F0A57B400000 PUSH1 0x10 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x36 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4175746F6D61746F7220436F696E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4154430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0xC8B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0xC8B JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x134 SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14E DUP2 PUSH3 0x6B6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x175 CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH3 0x779 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x234 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x25A SWAP2 SWAP1 PUSH3 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x307 SWAP2 SWAP1 PUSH3 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x326 SWAP3 SWAP2 SWAP1 PUSH3 0xE30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x343 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x369 SWAP2 SWAP1 PUSH3 0xE00 JUMP JUMPDEST PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x73ADD9B0FAE851F9F203BA5346D240C32D5AF259 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xFBD336B10D3AA003BB0491277BD1B100A7600B7A PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xC5E979514EBE80172EDBA7C7CFE38B599E4E4823 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xF29 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x7EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7E3 SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7FF PUSH0 DUP4 DUP4 PUSH3 0x803 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x857 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x84A SWAP2 SWAP1 PUSH3 0xE88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x928 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x8E3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8DA SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x971 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x9BB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0xA1A SWAP2 SWAP1 PUSH3 0xF0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xAA3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xAB9 JUMPI PUSH3 0xAB8 PUSH3 0xA5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0xB1D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xAE0 JUMP JUMPDEST PUSH3 0xB29 DUP7 DUP4 PUSH3 0xAE0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xB73 PUSH3 0xB6D PUSH3 0xB67 DUP5 PUSH3 0xB41 JUMP JUMPDEST PUSH3 0xB4A JUMP JUMPDEST PUSH3 0xB41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB8E DUP4 PUSH3 0xB53 JUMP JUMPDEST PUSH3 0xBA6 PUSH3 0xB9D DUP3 PUSH3 0xB7A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xAEC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xBBC PUSH3 0xBAE JUMP JUMPDEST PUSH3 0xBC9 DUP2 DUP5 DUP5 PUSH3 0xB83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xBF0 JUMPI PUSH3 0xBE4 PUSH0 DUP3 PUSH3 0xBB2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xBCF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xC3F JUMPI PUSH3 0xC09 DUP2 PUSH3 0xABF JUMP JUMPDEST PUSH3 0xC14 DUP5 PUSH3 0xAD1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xC24 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xC3C PUSH3 0xC33 DUP6 PUSH3 0xAD1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xBCE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC61 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xC44 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC7B DUP4 DUP4 PUSH3 0xC50 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC96 DUP3 PUSH3 0xA27 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xCB2 JUMPI PUSH3 0xCB1 PUSH3 0xA31 JUMP JUMPDEST JUMPDEST PUSH3 0xCBE DUP3 SLOAD PUSH3 0xA8B JUMP JUMPDEST PUSH3 0xCCB DUP3 DUP3 DUP6 PUSH3 0xBF4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xD01 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xCEC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xCF8 DUP6 DUP3 PUSH3 0xC6E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xD67 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xD11 DUP7 PUSH3 0xABF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xD3A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD13 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xD5A JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xD56 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xC50 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD9A DUP3 PUSH3 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDAC DUP2 PUSH3 0xD8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xDC7 PUSH0 DUP4 ADD DUP5 PUSH3 0xDA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH3 0xDDC DUP2 PUSH3 0xD8E JUMP JUMPDEST DUP2 EQ PUSH3 0xDE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xDFA DUP2 PUSH3 0xDD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xE18 JUMPI PUSH3 0xE17 PUSH3 0xDCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0xE27 DUP5 DUP3 DUP6 ADD PUSH3 0xDEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xE45 PUSH0 DUP4 ADD DUP6 PUSH3 0xDA1 JUMP JUMPDEST PUSH3 0xE54 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xDA1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xE94 DUP3 PUSH3 0xB41 JUMP JUMPDEST SWAP2 POP PUSH3 0xEA1 DUP4 PUSH3 0xB41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xEBC JUMPI PUSH3 0xEBB PUSH3 0xE5B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xECD DUP2 PUSH3 0xB41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xEE8 PUSH0 DUP4 ADD DUP7 PUSH3 0xDA1 JUMP JUMPDEST PUSH3 0xEF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xEC2 JUMP JUMPDEST PUSH3 0xF06 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xEC2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xF23 PUSH0 DUP4 ADD DUP5 PUSH3 0xEC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A83 DUP1 PUSH3 0xF37 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xA3342FBA GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xD862686B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD862686B EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x70C JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0xA3342FBA EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xCB963728 EQ PUSH2 0x656 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x9D0014B1 EQ PUSH2 0x59E JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x50A JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x1DE3B450 GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x5342ACB4 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x54AD8AEE EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x6612E66F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x665C6DE9 EQ PUSH2 0x464 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x1DE3B450 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3AC JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x147C9F6D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x1D2CB02D EQ PUSH2 0x2F2 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x2AF37BB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x445B667 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23A JUMPI PUSH2 0x1E2 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1E2 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DE PUSH2 0xB4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0xB87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55E PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DA PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x67C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x689 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x692 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x717 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x720 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77D SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7DC PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP PUSH2 0x7E9 DUP2 DUP6 DUP6 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FC PUSH2 0xFB8 JUMP JUMPDEST DUP3 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA42 PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP PUSH2 0xA4F DUP6 DUP3 DUP6 PUSH2 0x103F JUMP JUMPDEST PUSH2 0xA5A DUP6 DUP6 DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH2 0xAAC PUSH2 0xFB8 JUMP JUMPDEST DUP1 PUSH1 0x12 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB57 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xB60 PUSH0 PUSH2 0x1569 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB8F PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC08 SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC34 SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC7F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC7F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC62 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC91 PUSH2 0xFB8 JUMP JUMPDEST DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xCF8 PUSH2 0xCF1 PUSH2 0xF9F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0A PUSH2 0xFB8 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6F SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP3 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x2499 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFE PUSH2 0xFB8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF77 DUP2 PUSH2 0x1569 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFB3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x162C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFC0 PUSH2 0xF9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDE PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103D JUMPI PUSH2 0x1001 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP5 DUP5 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x10CC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x162C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x10DA PUSH2 0x17FB JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP1 PUSH2 0x2569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x117D JUMPI POP PUSH1 0x12 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x11CE JUMPI POP PUSH1 0x12 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x120D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1204 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI POP PUSH1 0x12 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1550 JUMPI PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI PUSH2 0x2710 PUSH2 0x9C4 DUP4 PUSH2 0x1316 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH2 0x139A JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1399 JUMPI PUSH2 0x2710 PUSH2 0x9C4 DUP4 PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x154F JUMPI PUSH0 PUSH2 0x9C4 PUSH1 0x9 SLOAD DUP4 PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x13BE SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C4 PUSH1 0xA SLOAD DUP5 PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C4 PUSH1 0xB SLOAD DUP6 PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x13FA SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 DUP8 PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH2 0x142C DUP9 ADDRESS DUP7 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1458 DUP9 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1484 DUP9 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x14B0 DUP9 PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x184A JUMP JUMPDEST DUP5 DUP7 PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP6 POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1524 JUMPI POP PUSH1 0x10 SLOAD PUSH2 0x1521 ADDRESS PUSH2 0xB0A JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x153C JUMPI POP PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x154A JUMPI PUSH2 0x1549 PUSH2 0x193A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMPDEST JUMPDEST PUSH2 0x155B DUP5 DUP5 DUP5 PUSH2 0x184A JUMP JUMPDEST POP PUSH2 0x1564 PUSH2 0x1CF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x17F5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17EC SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1837 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1921 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1935 DUP4 DUP4 DUP4 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x195E ADDRESS PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 DUP3 PUSH2 0x196E SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x2755 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19C9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x19E0 JUMPI PUSH2 0x19DF PUSH2 0x2782 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A84 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x2782 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x1B26 ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x791AC947 DUP6 PUSH0 DUP6 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B88 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28DE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP2 SELFBALANCE PUSH2 0x1BC2 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF0 ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 DUP3 ADDRESS DUP8 PUSH0 DUP1 PUSH2 0xDEAD TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C57 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x2995 JUMP JUMPDEST POP POP POP PUSH32 0x17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561 DUP6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1CCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D51 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D45 SWAP2 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E1F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DDA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E66 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EB0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F0D SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F45 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F82 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F67 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA7 DUP3 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1FB1 DUP2 DUP6 PUSH2 0x1F55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1F8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FED DUP2 DUP5 PUSH2 0x1F9D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2022 DUP3 PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2032 DUP2 PUSH2 0x2018 JUMP JUMPDEST DUP2 EQ PUSH2 0x203C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204D DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2077 DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A0 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CF DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2104 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2112 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2123 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2134 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2162 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2173 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2184 DUP7 DUP3 DUP8 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A3 DUP2 PUSH2 0x218E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21BC PUSH0 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E4 DUP5 DUP3 DUP6 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F6 DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP2 EQ PUSH2 0x2200 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2211 DUP2 PUSH2 0x21ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x222D JUMPI PUSH2 0x222C PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x223A DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x224B DUP6 DUP3 DUP7 ADD PUSH2 0x2203 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x225E DUP2 PUSH2 0x2018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2277 PUSH0 DUP4 ADD DUP5 PUSH2 0x2255 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2292 JUMPI PUSH2 0x2291 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229F DUP5 DUP3 DUP6 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22BE JUMPI PUSH2 0x22BD PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22CB DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22DC DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2309 PUSH2 0x2304 PUSH2 0x22FF DUP5 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x22E6 JUMP JUMPDEST PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x231A DUP3 PUSH2 0x22EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x232B DUP3 PUSH2 0x2310 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x233B DUP2 PUSH2 0x2321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2354 PUSH0 DUP4 ADD DUP5 PUSH2 0x2332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x239E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x235A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772041544300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23EB PUSH1 0x13 DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F6 DUP3 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2418 DUP2 PUSH2 0x23DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x242D DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2448 JUMPI PUSH2 0x2447 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2455 DUP5 DUP3 DUP6 ADD PUSH2 0x241F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2471 PUSH0 DUP4 ADD DUP6 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x247E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2493 DUP2 PUSH2 0x21ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24AE JUMPI PUSH2 0x24AD PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24BB DUP5 DUP3 DUP6 ADD PUSH2 0x2485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24D7 PUSH0 DUP4 ADD DUP7 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x24E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x24F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2553 PUSH1 0x29 DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x255E DUP3 PUSH2 0x24F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2580 DUP2 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206E6F7420656E61626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25BB PUSH1 0x13 DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C6 DUP3 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E8 DUP2 PUSH2 0x25AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2626 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2631 DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x263F DUP2 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2694 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x269F DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26AF JUMPI PUSH2 0x26AE PUSH2 0x265D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26C4 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x26CF DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x26E7 JUMPI PUSH2 0x26E6 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2721 PUSH1 0x1F DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x272C DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x274E DUP2 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27BD DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D8 JUMPI PUSH2 0x27D7 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E5 DUP5 DUP3 DUP6 ADD PUSH2 0x27AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2811 PUSH2 0x280C PUSH2 0x2807 DUP5 PUSH2 0x27EE JUMP JUMPDEST PUSH2 0x22E6 JUMP JUMPDEST PUSH2 0x1F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2821 DUP2 PUSH2 0x27F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2859 DUP2 PUSH2 0x2018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x286A DUP4 DUP4 PUSH2 0x2850 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x288C DUP3 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x2896 DUP2 DUP6 PUSH2 0x2831 JUMP JUMPDEST SWAP4 POP PUSH2 0x28A1 DUP4 PUSH2 0x2841 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D1 JUMPI DUP2 MLOAD PUSH2 0x28B8 DUP9 DUP3 PUSH2 0x285F JUMP JUMPDEST SWAP8 POP PUSH2 0x28C3 DUP4 PUSH2 0x2876 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x28A4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x28F1 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x28FE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2818 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2910 DUP2 DUP7 PUSH2 0x2882 JUMP JUMPDEST SWAP1 POP PUSH2 0x291F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x292C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2949 PUSH0 DUP4 ADD DUP10 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x2956 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2963 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2818 JUMP JUMPDEST PUSH2 0x2970 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2818 JUMP JUMPDEST PUSH2 0x297D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x298A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29AC JUMPI PUSH2 0x29AB PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B9 DUP7 DUP3 DUP8 ADD PUSH2 0x241F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29CA DUP7 DUP3 DUP8 ADD PUSH2 0x241F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29DB DUP7 DUP3 DUP8 ADD PUSH2 0x241F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29F8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2A05 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2A12 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A24 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2F DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A47 JUMPI PUSH2 0x2A46 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0x4D SUB BLOBHASH 0xD9 0xA9 0x4E RETURNDATASIZE SWAP12 0xB2 0xF9 CALLER REVERT 0x23 DUP8 0xC3 PUSH19 0x98FC04E09197C88EC59A1EFA477C7064736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "931:5835:7:-:0;;;1283:3;1260:26;;1333:4;1309:28;;1386:3;1359:30;;1438:3;1408:33;;1628:15;1597:46;;1888:855;;;;;;;;;;1941:10;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1963:41:7::2;1969:10;1981:22;1963:5;;;:41;;:::i;:::-;2073:42;2049:6;;:67;;;;;;;;;;;;;;;;;;2149:6;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2133:44;;;2186:4;2193:6;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2133:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2126:4;;:81;;;;;;;;;;;;;;;;;;2253:42;2241:9;;:54;;;;;;;;;;;;;;;;;;2320:42;2305:12;;:57;;;;;;;;;;;;;;;;;;2390:42;2372:15;;:60;;;;;;;;;;;;;;;;;;2539:4;2507:17;:29;2525:10;2507:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2588:4;2553:17;:32;2579:4;2553:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2633:4;2602:17;:28;2620:9;;;;;;;;;;;2602:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2681:4;2647:17;:31;2665:12;;;;;;;;;;;2647:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2732:4;2695:17;:34;2713:15;;;;;;;;;;;2695:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;931:5835:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:3:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5901:117::-;6010:1;6007;6000:12;6147:122;6220:24;6238:5;6220:24;:::i;:::-;6213:5;6210:35;6200:63;;6259:1;6256;6249:12;6200:63;6147:122;:::o;6275:143::-;6332:5;6363:6;6357:13;6348:22;;6379:33;6406:5;6379:33;:::i;:::-;6275:143;;;;:::o;6424:351::-;6494:6;6543:2;6531:9;6522:7;6518:23;6514:32;6511:119;;;6549:79;;:::i;:::-;6511:119;6669:1;6694:64;6750:7;6741:6;6730:9;6726:22;6694:64;:::i;:::-;6684:74;;6640:128;6424:351;;;;:::o;6781:332::-;6902:4;6940:2;6929:9;6925:18;6917:26;;6953:71;7021:1;7010:9;7006:17;6997:6;6953:71;:::i;:::-;7034:72;7102:2;7091:9;7087:18;7078:6;7034:72;:::i;:::-;6781:332;;;;;:::o;7119:180::-;7167:77;7164:1;7157:88;7264:4;7261:1;7254:15;7288:4;7285:1;7278:15;7305:191;7345:3;7364:20;7382:1;7364:20;:::i;:::-;7359:25;;7398:20;7416:1;7398:20;:::i;:::-;7393:25;;7441:1;7438;7434:9;7427:16;;7462:3;7459:1;7456:10;7453:36;;;7469:18;;:::i;:::-;7453:36;7305:191;;;;:::o;7502:118::-;7589:24;7607:5;7589:24;:::i;:::-;7584:3;7577:37;7502:118;;:::o;7626:442::-;7775:4;7813:2;7802:9;7798:18;7790:26;;7826:71;7894:1;7883:9;7879:17;7870:6;7826:71;:::i;:::-;7907:72;7975:2;7964:9;7960:18;7951:6;7907:72;:::i;:::-;7989;8057:2;8046:9;8042:18;8033:6;7989:72;:::i;:::-;7626:442;;;;;;:::o;8074:222::-;8167:4;8205:2;8194:9;8190:18;8182:26;;8218:71;8286:1;8275:9;8271:17;8262:6;8218:71;:::i;:::-;8074:222;;;;:::o;931:5835:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUY_TAX_1073": {
									"entryPoint": 1846,
									"id": 1073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SELL_TAX_1076": {
									"entryPoint": 2718,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 4006,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 5676,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4024,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_customTransfer_1447": {
									"entryPoint": 4306,
									"id": 1447,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 3999,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 7415,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 6139,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 4159,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5481,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 6218,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 7425,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 3700,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 2002,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@artistTax_1088": {
									"entryPoint": 3694,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@artistWallet_1095": {
									"entryPoint": 3227,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_450": {
									"entryPoint": 2826,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_428": {
									"entryPoint": 2662,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@devTax_1085": {
									"entryPoint": 2820,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@devWallet_1093": {
									"entryPoint": 3028,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableTrading_1597": {
									"entryPoint": 2951,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromFee_1112": {
									"entryPoint": 2689,
									"id": 1112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpTax_1082": {
									"entryPoint": 2610,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingTax_1091": {
									"entryPoint": 2604,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1097": {
									"entryPoint": 2914,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 1858,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2988,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pair_1070": {
									"entryPoint": 3264,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2895,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@router_1068": {
									"entryPoint": 3962,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setExcludedFromFee_1655": {
									"entryPoint": 2724,
									"id": 1655,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setSwapThreshold_1667": {
									"entryPoint": 3209,
									"id": 1667,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapAndLiquify_1587": {
									"entryPoint": 6458,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapThreshold_1104": {
									"entryPoint": 1852,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 3065,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 2595,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tradingEnabled_1108": {
									"entryPoint": 2670,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1263": {
									"entryPoint": 2616,
									"id": 1263,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3830,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1231": {
									"entryPoint": 3301,
									"id": 1231,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateWallets_1639": {
									"entryPoint": 2036,
									"id": 1639,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawStuckTokens_1702": {
									"entryPoint": 3330,
									"id": 1702,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 10159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 10179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 10645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 10335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 10320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IPancakeRouter_$1049_to_t_address_fromStack": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 10264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10550,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPancakeRouter_$1049__to_t_address__fromStack_reversed": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10462,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10725,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 10222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IPancakeRouter_$1049_to_t_address": {
									"entryPoint": 8993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 10231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785": {
									"entryPoint": 9465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c": {
									"entryPoint": 9607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21990:8",
										"nodeType": "YulBlock",
										"src": "0:21990:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "312:124:8",
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nativeSrc": "322:26:8",
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nativeSrc": "330:18:8",
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:8",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nativeSrc": "411:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nativeSrc": "358:71:8",
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nativeSrc": "358:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:8",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:8",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:8",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nativeSrc": "501:40:8",
													"nodeType": "YulBlock",
													"src": "501:40:8",
													"statements": [
														{
															"nativeSrc": "512:22:8",
															"nodeType": "YulAssignment",
															"src": "512:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nativeSrc": "522:12:8",
																"nodeType": "YulFunctionCall",
																"src": "522:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:8",
														"nodeType": "YulTypedName",
														"src": "484:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:8",
														"nodeType": "YulTypedName",
														"src": "494:6:8",
														"type": ""
													}
												],
												"src": "442:99:8"
											},
											{
												"body": {
													"nativeSrc": "643:73:8",
													"nodeType": "YulBlock",
													"src": "643:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:8"
																},
																"nativeSrc": "653:19:8",
																"nodeType": "YulFunctionCall",
																"src": "653:19:8"
															},
															"nativeSrc": "653:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:8"
														},
														{
															"nativeSrc": "681:29:8",
															"nodeType": "YulAssignment",
															"src": "681:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:8",
																		"nodeType": "YulLiteral",
																		"src": "705:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:8"
																},
																"nativeSrc": "696:14:8",
																"nodeType": "YulFunctionCall",
																"src": "696:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:8",
														"nodeType": "YulTypedName",
														"src": "615:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:8",
														"nodeType": "YulTypedName",
														"src": "620:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:8",
														"nodeType": "YulTypedName",
														"src": "631:11:8",
														"type": ""
													}
												],
												"src": "547:169:8"
											},
											{
												"body": {
													"nativeSrc": "784:184:8",
													"nodeType": "YulBlock",
													"src": "784:184:8",
													"statements": [
														{
															"nativeSrc": "794:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "794:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "803:1:8",
																"nodeType": "YulLiteral",
																"src": "803:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "798:1:8",
																	"nodeType": "YulTypedName",
																	"src": "798:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "863:63:8",
																"nodeType": "YulBlock",
																"src": "863:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "888:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "888:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "893:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "893:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "884:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "884:3:8"
																					},
																					"nativeSrc": "884:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "884:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "907:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "912:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "903:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "903:3:8"
																							},
																							"nativeSrc": "903:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "903:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "897:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "897:5:8"
																					},
																					"nativeSrc": "897:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "897:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "877:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "877:6:8"
																			},
																			"nativeSrc": "877:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "877:39:8"
																		},
																		"nativeSrc": "877:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "877:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "824:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "827:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "821:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "821:2:8"
																},
																"nativeSrc": "821:13:8",
																"nodeType": "YulFunctionCall",
																"src": "821:13:8"
															},
															"nativeSrc": "813:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "835:19:8",
																"nodeType": "YulBlock",
																"src": "835:19:8",
																"statements": [
																	{
																		"nativeSrc": "837:15:8",
																		"nodeType": "YulAssignment",
																		"src": "837:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "846:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "846:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:2:8",
																					"nodeType": "YulLiteral",
																					"src": "849:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "842:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "842:3:8"
																			},
																			"nativeSrc": "842:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "842:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "837:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "837:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "817:3:8",
																"nodeType": "YulBlock",
																"src": "817:3:8",
																"statements": []
															},
															"src": "813:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "946:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "946:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "951:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:8"
																		},
																		"nativeSrc": "942:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "942:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "960:1:8",
																		"nodeType": "YulLiteral",
																		"src": "960:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "935:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:8"
																},
																"nativeSrc": "935:27:8",
																"nodeType": "YulFunctionCall",
																"src": "935:27:8"
															},
															"nativeSrc": "935:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "935:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:8",
														"nodeType": "YulTypedName",
														"src": "766:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:8",
														"nodeType": "YulTypedName",
														"src": "771:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:8",
														"nodeType": "YulTypedName",
														"src": "776:6:8",
														"type": ""
													}
												],
												"src": "722:246:8"
											},
											{
												"body": {
													"nativeSrc": "1022:54:8",
													"nodeType": "YulBlock",
													"src": "1022:54:8",
													"statements": [
														{
															"nativeSrc": "1032:38:8",
															"nodeType": "YulAssignment",
															"src": "1032:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1050:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1050:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1057:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:8"
																		},
																		"nativeSrc": "1046:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1066:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1066:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1062:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:8"
																		},
																		"nativeSrc": "1062:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1042:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:8"
																},
																"nativeSrc": "1042:28:8",
																"nodeType": "YulFunctionCall",
																"src": "1042:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1032:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "974:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1005:5:8",
														"nodeType": "YulTypedName",
														"src": "1005:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1015:6:8",
														"nodeType": "YulTypedName",
														"src": "1015:6:8",
														"type": ""
													}
												],
												"src": "974:102:8"
											},
											{
												"body": {
													"nativeSrc": "1174:285:8",
													"nodeType": "YulBlock",
													"src": "1174:285:8",
													"statements": [
														{
															"nativeSrc": "1184:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1231:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1231:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1198:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "1198:32:8"
																},
																"nativeSrc": "1198:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1198:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1188:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1246:78:8",
															"nodeType": "YulAssignment",
															"src": "1246:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1312:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1317:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1253:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "1253:58:8"
																},
																"nativeSrc": "1253:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1253:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1246:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1372:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1379:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1379:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:8"
																		},
																		"nativeSrc": "1368:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1386:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1391:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1333:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "1333:34:8"
																},
																"nativeSrc": "1333:65:8",
																"nodeType": "YulFunctionCall",
																"src": "1333:65:8"
															},
															"nativeSrc": "1333:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "1333:65:8"
														},
														{
															"nativeSrc": "1407:46:8",
															"nodeType": "YulAssignment",
															"src": "1407:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1418:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1445:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1423:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "1423:21:8"
																		},
																		"nativeSrc": "1423:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1414:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:8"
																},
																"nativeSrc": "1414:39:8",
																"nodeType": "YulFunctionCall",
																"src": "1414:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1407:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1082:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1155:5:8",
														"nodeType": "YulTypedName",
														"src": "1155:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1162:3:8",
														"nodeType": "YulTypedName",
														"src": "1162:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1170:3:8",
														"nodeType": "YulTypedName",
														"src": "1170:3:8",
														"type": ""
													}
												],
												"src": "1082:377:8"
											},
											{
												"body": {
													"nativeSrc": "1583:195:8",
													"nodeType": "YulBlock",
													"src": "1583:195:8",
													"statements": [
														{
															"nativeSrc": "1593:26:8",
															"nodeType": "YulAssignment",
															"src": "1593:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:8"
																},
																"nativeSrc": "1601:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1601:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1593:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:8"
																		},
																		"nativeSrc": "1636:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1659:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1659:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1665:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1655:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:8"
																		},
																		"nativeSrc": "1655:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:8"
																},
																"nativeSrc": "1629:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1629:47:8"
															},
															"nativeSrc": "1629:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1629:47:8"
														},
														{
															"nativeSrc": "1685:86:8",
															"nodeType": "YulAssignment",
															"src": "1685:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1757:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1766:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1766:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1693:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:63:8"
																},
																"nativeSrc": "1693:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1693:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1685:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1685:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1465:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1555:9:8",
														"nodeType": "YulTypedName",
														"src": "1555:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1567:6:8",
														"nodeType": "YulTypedName",
														"src": "1567:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1578:4:8",
														"nodeType": "YulTypedName",
														"src": "1578:4:8",
														"type": ""
													}
												],
												"src": "1465:313:8"
											},
											{
												"body": {
													"nativeSrc": "1824:35:8",
													"nodeType": "YulBlock",
													"src": "1824:35:8",
													"statements": [
														{
															"nativeSrc": "1834:19:8",
															"nodeType": "YulAssignment",
															"src": "1834:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:5:8"
																},
																"nativeSrc": "1844:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1844:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1834:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1784:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1817:6:8",
														"nodeType": "YulTypedName",
														"src": "1817:6:8",
														"type": ""
													}
												],
												"src": "1784:75:8"
											},
											{
												"body": {
													"nativeSrc": "1954:28:8",
													"nodeType": "YulBlock",
													"src": "1954:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:8"
																},
																"nativeSrc": "1964:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1964:12:8"
															},
															"nativeSrc": "1964:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1964:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1865:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1865:117:8"
											},
											{
												"body": {
													"nativeSrc": "2077:28:8",
													"nodeType": "YulBlock",
													"src": "2077:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2094:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:8"
																},
																"nativeSrc": "2087:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2087:12:8"
															},
															"nativeSrc": "2087:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "2087:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1988:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1988:117:8"
											},
											{
												"body": {
													"nativeSrc": "2156:81:8",
													"nodeType": "YulBlock",
													"src": "2156:81:8",
													"statements": [
														{
															"nativeSrc": "2166:65:8",
															"nodeType": "YulAssignment",
															"src": "2166:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2181:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2181:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:42:8",
																		"nodeType": "YulLiteral",
																		"src": "2188:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2177:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:8"
																},
																"nativeSrc": "2177:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2177:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2166:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2166:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2111:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2138:5:8",
														"nodeType": "YulTypedName",
														"src": "2138:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2148:7:8",
														"nodeType": "YulTypedName",
														"src": "2148:7:8",
														"type": ""
													}
												],
												"src": "2111:126:8"
											},
											{
												"body": {
													"nativeSrc": "2288:51:8",
													"nodeType": "YulBlock",
													"src": "2288:51:8",
													"statements": [
														{
															"nativeSrc": "2298:35:8",
															"nodeType": "YulAssignment",
															"src": "2298:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2327:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2327:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2309:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2309:17:8"
																},
																"nativeSrc": "2309:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2309:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2298:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2298:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2243:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2270:5:8",
														"nodeType": "YulTypedName",
														"src": "2270:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2280:7:8",
														"nodeType": "YulTypedName",
														"src": "2280:7:8",
														"type": ""
													}
												],
												"src": "2243:96:8"
											},
											{
												"body": {
													"nativeSrc": "2388:79:8",
													"nodeType": "YulBlock",
													"src": "2388:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2445:16:8",
																"nodeType": "YulBlock",
																"src": "2445:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2454:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2457:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2447:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:8"
																			},
																			"nativeSrc": "2447:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:8"
																		},
																		"nativeSrc": "2447:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2411:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2436:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2418:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2418:17:8"
																				},
																				"nativeSrc": "2418:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2408:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2408:2:8"
																		},
																		"nativeSrc": "2408:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2401:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:8"
																},
																"nativeSrc": "2401:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2401:43:8"
															},
															"nativeSrc": "2398:63:8",
															"nodeType": "YulIf",
															"src": "2398:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2345:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2381:5:8",
														"nodeType": "YulTypedName",
														"src": "2381:5:8",
														"type": ""
													}
												],
												"src": "2345:122:8"
											},
											{
												"body": {
													"nativeSrc": "2525:87:8",
													"nodeType": "YulBlock",
													"src": "2525:87:8",
													"statements": [
														{
															"nativeSrc": "2535:29:8",
															"nodeType": "YulAssignment",
															"src": "2535:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2557:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2544:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:8"
																},
																"nativeSrc": "2544:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2544:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2535:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2535:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2600:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2600:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2573:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2573:26:8"
																},
																"nativeSrc": "2573:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2573:33:8"
															},
															"nativeSrc": "2573:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2573:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2473:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2503:6:8",
														"nodeType": "YulTypedName",
														"src": "2503:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2511:3:8",
														"nodeType": "YulTypedName",
														"src": "2511:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2519:5:8",
														"nodeType": "YulTypedName",
														"src": "2519:5:8",
														"type": ""
													}
												],
												"src": "2473:139:8"
											},
											{
												"body": {
													"nativeSrc": "2661:79:8",
													"nodeType": "YulBlock",
													"src": "2661:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2718:16:8",
																"nodeType": "YulBlock",
																"src": "2718:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2727:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2727:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2720:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:8"
																			},
																			"nativeSrc": "2720:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2720:12:8"
																		},
																		"nativeSrc": "2720:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2684:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2684:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2709:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2709:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2691:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2691:17:8"
																				},
																				"nativeSrc": "2691:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2681:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2681:2:8"
																		},
																		"nativeSrc": "2681:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2674:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:8"
																},
																"nativeSrc": "2674:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2674:43:8"
															},
															"nativeSrc": "2671:63:8",
															"nodeType": "YulIf",
															"src": "2671:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2618:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:8",
														"nodeType": "YulTypedName",
														"src": "2654:5:8",
														"type": ""
													}
												],
												"src": "2618:122:8"
											},
											{
												"body": {
													"nativeSrc": "2798:87:8",
													"nodeType": "YulBlock",
													"src": "2798:87:8",
													"statements": [
														{
															"nativeSrc": "2808:29:8",
															"nodeType": "YulAssignment",
															"src": "2808:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2830:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2817:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2817:12:8"
																},
																"nativeSrc": "2817:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2817:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2808:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2873:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2873:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2846:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2846:26:8"
																},
																"nativeSrc": "2846:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2846:33:8"
															},
															"nativeSrc": "2846:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2846:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2746:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2776:6:8",
														"nodeType": "YulTypedName",
														"src": "2776:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2784:3:8",
														"nodeType": "YulTypedName",
														"src": "2784:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2792:5:8",
														"nodeType": "YulTypedName",
														"src": "2792:5:8",
														"type": ""
													}
												],
												"src": "2746:139:8"
											},
											{
												"body": {
													"nativeSrc": "2974:391:8",
													"nodeType": "YulBlock",
													"src": "2974:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3020:83:8",
																"nodeType": "YulBlock",
																"src": "3020:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3022:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3022:77:8"
																			},
																			"nativeSrc": "3022:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3022:79:8"
																		},
																		"nativeSrc": "3022:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2995:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2995:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3004:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2991:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:8"
																		},
																		"nativeSrc": "2991:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2991:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3016:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3016:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2987:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:8"
																},
																"nativeSrc": "2987:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2987:32:8"
															},
															"nativeSrc": "2984:119:8",
															"nodeType": "YulIf",
															"src": "2984:119:8"
														},
														{
															"nativeSrc": "3113:117:8",
															"nodeType": "YulBlock",
															"src": "3113:117:8",
															"statements": [
																{
																	"nativeSrc": "3128:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3128:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3142:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3142:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3132:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3132:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3157:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3157:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3192:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3192:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3203:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3203:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3188:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3188:3:8"
																				},
																				"nativeSrc": "3188:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3188:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3212:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3167:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3167:20:8"
																		},
																		"nativeSrc": "3167:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3157:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3157:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3240:118:8",
															"nodeType": "YulBlock",
															"src": "3240:118:8",
															"statements": [
																{
																	"nativeSrc": "3255:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3255:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3269:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3259:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3259:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3285:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3285:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3320:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3320:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3331:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3331:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3316:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3316:3:8"
																				},
																				"nativeSrc": "3316:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3316:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3340:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3340:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3295:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3295:20:8"
																		},
																		"nativeSrc": "3295:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3285:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3285:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2891:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2936:9:8",
														"nodeType": "YulTypedName",
														"src": "2936:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2947:7:8",
														"nodeType": "YulTypedName",
														"src": "2947:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2959:6:8",
														"nodeType": "YulTypedName",
														"src": "2959:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2967:6:8",
														"nodeType": "YulTypedName",
														"src": "2967:6:8",
														"type": ""
													}
												],
												"src": "2891:474:8"
											},
											{
												"body": {
													"nativeSrc": "3413:48:8",
													"nodeType": "YulBlock",
													"src": "3413:48:8",
													"statements": [
														{
															"nativeSrc": "3423:32:8",
															"nodeType": "YulAssignment",
															"src": "3423:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3448:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3448:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3441:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3441:6:8"
																		},
																		"nativeSrc": "3441:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3434:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:8"
																},
																"nativeSrc": "3434:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3434:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3423:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3423:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3371:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3395:5:8",
														"nodeType": "YulTypedName",
														"src": "3395:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3405:7:8",
														"nodeType": "YulTypedName",
														"src": "3405:7:8",
														"type": ""
													}
												],
												"src": "3371:90:8"
											},
											{
												"body": {
													"nativeSrc": "3526:50:8",
													"nodeType": "YulBlock",
													"src": "3526:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3563:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3563:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3548:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3548:14:8"
																		},
																		"nativeSrc": "3548:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3536:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3536:6:8"
																},
																"nativeSrc": "3536:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3536:34:8"
															},
															"nativeSrc": "3536:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3536:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3467:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3514:5:8",
														"nodeType": "YulTypedName",
														"src": "3514:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3521:3:8",
														"nodeType": "YulTypedName",
														"src": "3521:3:8",
														"type": ""
													}
												],
												"src": "3467:109:8"
											},
											{
												"body": {
													"nativeSrc": "3674:118:8",
													"nodeType": "YulBlock",
													"src": "3674:118:8",
													"statements": [
														{
															"nativeSrc": "3684:26:8",
															"nodeType": "YulAssignment",
															"src": "3684:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3696:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3696:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3707:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3692:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:8"
																},
																"nativeSrc": "3692:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3692:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3684:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nativeSrc": "3767:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3720:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3720:37:8"
																},
																"nativeSrc": "3720:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3720:65:8"
															},
															"nativeSrc": "3720:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3720:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3582:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3646:9:8",
														"nodeType": "YulTypedName",
														"src": "3646:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3658:6:8",
														"nodeType": "YulTypedName",
														"src": "3658:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3669:4:8",
														"nodeType": "YulTypedName",
														"src": "3669:4:8",
														"type": ""
													}
												],
												"src": "3582:210:8"
											},
											{
												"body": {
													"nativeSrc": "3898:519:8",
													"nodeType": "YulBlock",
													"src": "3898:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:8",
																"nodeType": "YulBlock",
																"src": "3944:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:8"
																			},
																			"nativeSrc": "3946:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:8"
																		},
																		"nativeSrc": "3946:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:8"
																		},
																		"nativeSrc": "3915:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:8"
																},
																"nativeSrc": "3911:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:8"
															},
															"nativeSrc": "3908:119:8",
															"nodeType": "YulIf",
															"src": "3908:119:8"
														},
														{
															"nativeSrc": "4037:117:8",
															"nodeType": "YulBlock",
															"src": "4037:117:8",
															"statements": [
																{
																	"nativeSrc": "4052:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:8"
																				},
																				"nativeSrc": "4112:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:8"
																		},
																		"nativeSrc": "4091:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:8",
															"nodeType": "YulBlock",
															"src": "4164:118:8",
															"statements": [
																{
																	"nativeSrc": "4179:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nativeSrc": "4240:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:8"
																		},
																		"nativeSrc": "4219:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:8",
															"nodeType": "YulBlock",
															"src": "4292:118:8",
															"statements": [
																{
																	"nativeSrc": "4307:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:8"
																				},
																				"nativeSrc": "4368:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4347:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:8"
																		},
																		"nativeSrc": "4347:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "3798:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:8",
														"nodeType": "YulTypedName",
														"src": "3852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:8",
														"nodeType": "YulTypedName",
														"src": "3863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:8",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:8",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:8",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"src": "3798:619:8"
											},
											{
												"body": {
													"nativeSrc": "4523:519:8",
													"nodeType": "YulBlock",
													"src": "4523:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4569:83:8",
																"nodeType": "YulBlock",
																"src": "4569:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4571:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4571:77:8"
																			},
																			"nativeSrc": "4571:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4571:79:8"
																		},
																		"nativeSrc": "4571:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4571:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4544:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4544:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4553:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4553:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4540:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4540:3:8"
																		},
																		"nativeSrc": "4540:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4540:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4565:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4565:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4536:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4536:3:8"
																},
																"nativeSrc": "4536:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4536:32:8"
															},
															"nativeSrc": "4533:119:8",
															"nodeType": "YulIf",
															"src": "4533:119:8"
														},
														{
															"nativeSrc": "4662:117:8",
															"nodeType": "YulBlock",
															"src": "4662:117:8",
															"statements": [
																{
																	"nativeSrc": "4677:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4677:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4691:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4691:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4681:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4681:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4706:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4706:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4741:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4741:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4752:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4752:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4737:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4737:3:8"
																				},
																				"nativeSrc": "4737:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4737:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4761:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4761:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4716:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4716:20:8"
																		},
																		"nativeSrc": "4716:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4716:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4706:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4706:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4789:118:8",
															"nodeType": "YulBlock",
															"src": "4789:118:8",
															"statements": [
																{
																	"nativeSrc": "4804:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4804:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4818:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4818:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4808:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4808:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4834:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4834:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4869:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4869:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4880:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4880:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4865:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4865:3:8"
																				},
																				"nativeSrc": "4865:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4865:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4889:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4889:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4844:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4844:20:8"
																		},
																		"nativeSrc": "4844:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4844:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4834:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4834:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4917:118:8",
															"nodeType": "YulBlock",
															"src": "4917:118:8",
															"statements": [
																{
																	"nativeSrc": "4932:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4932:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4946:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4946:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4936:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4936:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4962:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4962:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4997:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4997:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5008:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5008:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4993:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4993:3:8"
																				},
																				"nativeSrc": "4993:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4993:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5017:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5017:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4972:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4972:20:8"
																		},
																		"nativeSrc": "4972:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4972:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4962:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4962:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4423:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4477:9:8",
														"nodeType": "YulTypedName",
														"src": "4477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4488:7:8",
														"nodeType": "YulTypedName",
														"src": "4488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4500:6:8",
														"nodeType": "YulTypedName",
														"src": "4500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4508:6:8",
														"nodeType": "YulTypedName",
														"src": "4508:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4516:6:8",
														"nodeType": "YulTypedName",
														"src": "4516:6:8",
														"type": ""
													}
												],
												"src": "4423:619:8"
											},
											{
												"body": {
													"nativeSrc": "5091:43:8",
													"nodeType": "YulBlock",
													"src": "5091:43:8",
													"statements": [
														{
															"nativeSrc": "5101:27:8",
															"nodeType": "YulAssignment",
															"src": "5101:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5116:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5116:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5123:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5123:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5112:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5112:3:8"
																},
																"nativeSrc": "5112:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5112:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5101:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5101:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5048:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5073:5:8",
														"nodeType": "YulTypedName",
														"src": "5073:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5083:7:8",
														"nodeType": "YulTypedName",
														"src": "5083:7:8",
														"type": ""
													}
												],
												"src": "5048:86:8"
											},
											{
												"body": {
													"nativeSrc": "5201:51:8",
													"nodeType": "YulBlock",
													"src": "5201:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5218:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5218:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5239:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5239:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5223:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5223:15:8"
																		},
																		"nativeSrc": "5223:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5223:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:8"
																},
																"nativeSrc": "5211:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5211:35:8"
															},
															"nativeSrc": "5211:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5211:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5140:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5189:5:8",
														"nodeType": "YulTypedName",
														"src": "5189:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5196:3:8",
														"nodeType": "YulTypedName",
														"src": "5196:3:8",
														"type": ""
													}
												],
												"src": "5140:112:8"
											},
											{
												"body": {
													"nativeSrc": "5352:120:8",
													"nodeType": "YulBlock",
													"src": "5352:120:8",
													"statements": [
														{
															"nativeSrc": "5362:26:8",
															"nodeType": "YulAssignment",
															"src": "5362:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5374:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5374:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5385:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5385:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5370:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5370:3:8"
																},
																"nativeSrc": "5370:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5370:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5362:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5362:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5438:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5438:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5451:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5451:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5462:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5462:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5447:3:8"
																		},
																		"nativeSrc": "5447:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5398:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5398:39:8"
																},
																"nativeSrc": "5398:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:8"
															},
															"nativeSrc": "5398:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5258:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:8",
														"nodeType": "YulTypedName",
														"src": "5324:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5336:6:8",
														"nodeType": "YulTypedName",
														"src": "5336:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5347:4:8",
														"nodeType": "YulTypedName",
														"src": "5347:4:8",
														"type": ""
													}
												],
												"src": "5258:214:8"
											},
											{
												"body": {
													"nativeSrc": "5544:263:8",
													"nodeType": "YulBlock",
													"src": "5544:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5590:83:8",
																"nodeType": "YulBlock",
																"src": "5590:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5592:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5592:77:8"
																			},
																			"nativeSrc": "5592:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5592:79:8"
																		},
																		"nativeSrc": "5592:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5592:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5565:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5565:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5574:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5574:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5561:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:8"
																		},
																		"nativeSrc": "5561:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5561:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5586:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5586:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5557:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5557:3:8"
																},
																"nativeSrc": "5557:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5557:32:8"
															},
															"nativeSrc": "5554:119:8",
															"nodeType": "YulIf",
															"src": "5554:119:8"
														},
														{
															"nativeSrc": "5683:117:8",
															"nodeType": "YulBlock",
															"src": "5683:117:8",
															"statements": [
																{
																	"nativeSrc": "5698:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5698:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5712:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5712:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5702:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5702:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5727:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5727:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5762:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5762:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5773:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5773:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5758:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5758:3:8"
																				},
																				"nativeSrc": "5758:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5758:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5782:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5782:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5737:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5737:20:8"
																		},
																		"nativeSrc": "5737:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5727:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5727:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5478:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5514:9:8",
														"nodeType": "YulTypedName",
														"src": "5514:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5525:7:8",
														"nodeType": "YulTypedName",
														"src": "5525:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5537:6:8",
														"nodeType": "YulTypedName",
														"src": "5537:6:8",
														"type": ""
													}
												],
												"src": "5478:329:8"
											},
											{
												"body": {
													"nativeSrc": "5853:76:8",
													"nodeType": "YulBlock",
													"src": "5853:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5907:16:8",
																"nodeType": "YulBlock",
																"src": "5907:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5916:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5916:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5919:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5919:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5909:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:8"
																			},
																			"nativeSrc": "5909:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5909:12:8"
																		},
																		"nativeSrc": "5909:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5909:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5876:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5876:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5898:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5898:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5883:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "5883:14:8"
																				},
																				"nativeSrc": "5883:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5883:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5873:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5873:2:8"
																		},
																		"nativeSrc": "5873:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5873:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5866:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:8"
																},
																"nativeSrc": "5866:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5866:40:8"
															},
															"nativeSrc": "5863:60:8",
															"nodeType": "YulIf",
															"src": "5863:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5813:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5846:5:8",
														"nodeType": "YulTypedName",
														"src": "5846:5:8",
														"type": ""
													}
												],
												"src": "5813:116:8"
											},
											{
												"body": {
													"nativeSrc": "5984:84:8",
													"nodeType": "YulBlock",
													"src": "5984:84:8",
													"statements": [
														{
															"nativeSrc": "5994:29:8",
															"nodeType": "YulAssignment",
															"src": "5994:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6016:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6016:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6003:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6003:12:8"
																},
																"nativeSrc": "6003:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6003:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5994:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5994:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6056:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6056:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6032:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "6032:23:8"
																},
																"nativeSrc": "6032:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6032:30:8"
															},
															"nativeSrc": "6032:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6032:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5935:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5962:6:8",
														"nodeType": "YulTypedName",
														"src": "5962:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5970:3:8",
														"nodeType": "YulTypedName",
														"src": "5970:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5978:5:8",
														"nodeType": "YulTypedName",
														"src": "5978:5:8",
														"type": ""
													}
												],
												"src": "5935:133:8"
											},
											{
												"body": {
													"nativeSrc": "6154:388:8",
													"nodeType": "YulBlock",
													"src": "6154:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6200:83:8",
																"nodeType": "YulBlock",
																"src": "6200:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6202:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6202:77:8"
																			},
																			"nativeSrc": "6202:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6202:79:8"
																		},
																		"nativeSrc": "6202:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6202:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6175:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6184:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6171:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:8"
																		},
																		"nativeSrc": "6171:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6167:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6167:3:8"
																},
																"nativeSrc": "6167:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6167:32:8"
															},
															"nativeSrc": "6164:119:8",
															"nodeType": "YulIf",
															"src": "6164:119:8"
														},
														{
															"nativeSrc": "6293:117:8",
															"nodeType": "YulBlock",
															"src": "6293:117:8",
															"statements": [
																{
																	"nativeSrc": "6308:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6308:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6322:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6312:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6312:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6337:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6372:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6372:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6383:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6368:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6368:3:8"
																				},
																				"nativeSrc": "6368:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6392:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6347:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6347:20:8"
																		},
																		"nativeSrc": "6347:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6337:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6337:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6420:115:8",
															"nodeType": "YulBlock",
															"src": "6420:115:8",
															"statements": [
																{
																	"nativeSrc": "6435:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6435:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6449:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6439:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6439:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6465:60:8",
																	"nodeType": "YulAssignment",
																	"src": "6465:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6497:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6497:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6508:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6508:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6493:3:8"
																				},
																				"nativeSrc": "6493:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6493:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6517:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6517:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6475:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6475:17:8"
																		},
																		"nativeSrc": "6475:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6475:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6465:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6465:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6074:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6116:9:8",
														"nodeType": "YulTypedName",
														"src": "6116:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6127:7:8",
														"nodeType": "YulTypedName",
														"src": "6127:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6139:6:8",
														"nodeType": "YulTypedName",
														"src": "6139:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6147:6:8",
														"nodeType": "YulTypedName",
														"src": "6147:6:8",
														"type": ""
													}
												],
												"src": "6074:468:8"
											},
											{
												"body": {
													"nativeSrc": "6613:53:8",
													"nodeType": "YulBlock",
													"src": "6613:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6630:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6630:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6653:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6653:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6635:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6635:17:8"
																		},
																		"nativeSrc": "6635:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6623:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6623:6:8"
																},
																"nativeSrc": "6623:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6623:37:8"
															},
															"nativeSrc": "6623:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6623:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6548:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6601:5:8",
														"nodeType": "YulTypedName",
														"src": "6601:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6608:3:8",
														"nodeType": "YulTypedName",
														"src": "6608:3:8",
														"type": ""
													}
												],
												"src": "6548:118:8"
											},
											{
												"body": {
													"nativeSrc": "6770:124:8",
													"nodeType": "YulBlock",
													"src": "6770:124:8",
													"statements": [
														{
															"nativeSrc": "6780:26:8",
															"nodeType": "YulAssignment",
															"src": "6780:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6792:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6792:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6803:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6788:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:8"
																},
																"nativeSrc": "6788:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6788:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6780:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6860:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6860:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6873:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6873:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6884:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6884:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6869:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6869:3:8"
																		},
																		"nativeSrc": "6869:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6869:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6816:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6816:43:8"
																},
																"nativeSrc": "6816:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6816:71:8"
															},
															"nativeSrc": "6816:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6816:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6672:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6742:9:8",
														"nodeType": "YulTypedName",
														"src": "6742:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6754:6:8",
														"nodeType": "YulTypedName",
														"src": "6754:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6765:4:8",
														"nodeType": "YulTypedName",
														"src": "6765:4:8",
														"type": ""
													}
												],
												"src": "6672:222:8"
											},
											{
												"body": {
													"nativeSrc": "6966:263:8",
													"nodeType": "YulBlock",
													"src": "6966:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7012:83:8",
																"nodeType": "YulBlock",
																"src": "7012:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7014:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7014:77:8"
																			},
																			"nativeSrc": "7014:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7014:79:8"
																		},
																		"nativeSrc": "7014:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7014:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6987:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6987:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6996:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6996:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6983:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6983:3:8"
																		},
																		"nativeSrc": "6983:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6983:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7008:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7008:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6979:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6979:3:8"
																},
																"nativeSrc": "6979:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6979:32:8"
															},
															"nativeSrc": "6976:119:8",
															"nodeType": "YulIf",
															"src": "6976:119:8"
														},
														{
															"nativeSrc": "7105:117:8",
															"nodeType": "YulBlock",
															"src": "7105:117:8",
															"statements": [
																{
																	"nativeSrc": "7120:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7120:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7134:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7134:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7124:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7124:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7149:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7149:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7184:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7184:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7195:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7195:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7180:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7180:3:8"
																				},
																				"nativeSrc": "7180:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7180:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7204:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7204:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7159:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7159:20:8"
																		},
																		"nativeSrc": "7159:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7159:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7149:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7149:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6900:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6936:9:8",
														"nodeType": "YulTypedName",
														"src": "6936:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6947:7:8",
														"nodeType": "YulTypedName",
														"src": "6947:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6959:6:8",
														"nodeType": "YulTypedName",
														"src": "6959:6:8",
														"type": ""
													}
												],
												"src": "6900:329:8"
											},
											{
												"body": {
													"nativeSrc": "7318:391:8",
													"nodeType": "YulBlock",
													"src": "7318:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7364:83:8",
																"nodeType": "YulBlock",
																"src": "7364:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7366:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7366:77:8"
																			},
																			"nativeSrc": "7366:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:79:8"
																		},
																		"nativeSrc": "7366:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7366:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7339:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7339:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7348:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7348:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7335:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:8"
																		},
																		"nativeSrc": "7335:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7335:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7360:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7360:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7331:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:8"
																},
																"nativeSrc": "7331:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7331:32:8"
															},
															"nativeSrc": "7328:119:8",
															"nodeType": "YulIf",
															"src": "7328:119:8"
														},
														{
															"nativeSrc": "7457:117:8",
															"nodeType": "YulBlock",
															"src": "7457:117:8",
															"statements": [
																{
																	"nativeSrc": "7472:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7472:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7486:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7486:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7476:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7476:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7501:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7501:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7536:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7536:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7547:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7547:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7532:3:8"
																				},
																				"nativeSrc": "7532:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7532:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7556:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7556:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7511:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7511:20:8"
																		},
																		"nativeSrc": "7511:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7511:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7501:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7501:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7584:118:8",
															"nodeType": "YulBlock",
															"src": "7584:118:8",
															"statements": [
																{
																	"nativeSrc": "7599:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7599:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7613:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7613:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7603:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7603:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7629:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7629:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7664:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7664:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7675:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7675:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7660:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7660:3:8"
																				},
																				"nativeSrc": "7660:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7660:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7684:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7684:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7639:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7639:20:8"
																		},
																		"nativeSrc": "7639:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7639:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7629:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7629:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7235:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7280:9:8",
														"nodeType": "YulTypedName",
														"src": "7280:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7291:7:8",
														"nodeType": "YulTypedName",
														"src": "7291:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7303:6:8",
														"nodeType": "YulTypedName",
														"src": "7303:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7311:6:8",
														"nodeType": "YulTypedName",
														"src": "7311:6:8",
														"type": ""
													}
												],
												"src": "7235:474:8"
											},
											{
												"body": {
													"nativeSrc": "7747:28:8",
													"nodeType": "YulBlock",
													"src": "7747:28:8",
													"statements": [
														{
															"nativeSrc": "7757:12:8",
															"nodeType": "YulAssignment",
															"src": "7757:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "7764:5:8",
																"nodeType": "YulIdentifier",
																"src": "7764:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7757:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7757:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7715:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7733:5:8",
														"nodeType": "YulTypedName",
														"src": "7733:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7743:3:8",
														"nodeType": "YulTypedName",
														"src": "7743:3:8",
														"type": ""
													}
												],
												"src": "7715:60:8"
											},
											{
												"body": {
													"nativeSrc": "7841:82:8",
													"nodeType": "YulBlock",
													"src": "7841:82:8",
													"statements": [
														{
															"nativeSrc": "7851:66:8",
															"nodeType": "YulAssignment",
															"src": "7851:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7909:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7909:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7891:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "7891:17:8"
																				},
																				"nativeSrc": "7891:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7891:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7882:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "7882:8:8"
																		},
																		"nativeSrc": "7882:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7864:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7864:17:8"
																},
																"nativeSrc": "7864:53:8",
																"nodeType": "YulFunctionCall",
																"src": "7864:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7851:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7851:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7781:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7821:5:8",
														"nodeType": "YulTypedName",
														"src": "7821:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7831:9:8",
														"nodeType": "YulTypedName",
														"src": "7831:9:8",
														"type": ""
													}
												],
												"src": "7781:142:8"
											},
											{
												"body": {
													"nativeSrc": "7989:66:8",
													"nodeType": "YulBlock",
													"src": "7989:66:8",
													"statements": [
														{
															"nativeSrc": "7999:50:8",
															"nodeType": "YulAssignment",
															"src": "7999:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8043:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8043:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8012:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "8012:30:8"
																},
																"nativeSrc": "8012:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8012:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7999:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7999:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "7929:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7969:5:8",
														"nodeType": "YulTypedName",
														"src": "7969:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7979:9:8",
														"nodeType": "YulTypedName",
														"src": "7979:9:8",
														"type": ""
													}
												],
												"src": "7929:126:8"
											},
											{
												"body": {
													"nativeSrc": "8144:66:8",
													"nodeType": "YulBlock",
													"src": "8144:66:8",
													"statements": [
														{
															"nativeSrc": "8154:50:8",
															"nodeType": "YulAssignment",
															"src": "8154:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8198:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8198:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8167:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "8167:30:8"
																},
																"nativeSrc": "8167:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8167:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8154:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8154:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IPancakeRouter_$1049_to_t_address",
												"nativeSrc": "8061:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8124:5:8",
														"nodeType": "YulTypedName",
														"src": "8124:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8134:9:8",
														"nodeType": "YulTypedName",
														"src": "8134:9:8",
														"type": ""
													}
												],
												"src": "8061:149:8"
											},
											{
												"body": {
													"nativeSrc": "8304:89:8",
													"nodeType": "YulBlock",
													"src": "8304:89:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8321:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8321:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8380:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8380:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IPancakeRouter_$1049_to_t_address",
																			"nativeSrc": "8326:53:8",
																			"nodeType": "YulIdentifier",
																			"src": "8326:53:8"
																		},
																		"nativeSrc": "8326:60:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8326:60:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:8"
																},
																"nativeSrc": "8314:73:8",
																"nodeType": "YulFunctionCall",
																"src": "8314:73:8"
															},
															"nativeSrc": "8314:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "8314:73:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IPancakeRouter_$1049_to_t_address_fromStack",
												"nativeSrc": "8216:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8292:5:8",
														"nodeType": "YulTypedName",
														"src": "8292:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8299:3:8",
														"nodeType": "YulTypedName",
														"src": "8299:3:8",
														"type": ""
													}
												],
												"src": "8216:177:8"
											},
											{
												"body": {
													"nativeSrc": "8520:147:8",
													"nodeType": "YulBlock",
													"src": "8520:147:8",
													"statements": [
														{
															"nativeSrc": "8530:26:8",
															"nodeType": "YulAssignment",
															"src": "8530:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8542:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8542:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8553:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8538:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8538:3:8"
																},
																"nativeSrc": "8538:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8538:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8530:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8530:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8633:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8633:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8646:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8646:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8657:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8657:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8642:3:8"
																		},
																		"nativeSrc": "8642:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8642:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IPancakeRouter_$1049_to_t_address_fromStack",
																	"nativeSrc": "8566:66:8",
																	"nodeType": "YulIdentifier",
																	"src": "8566:66:8"
																},
																"nativeSrc": "8566:94:8",
																"nodeType": "YulFunctionCall",
																"src": "8566:94:8"
															},
															"nativeSrc": "8566:94:8",
															"nodeType": "YulExpressionStatement",
															"src": "8566:94:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPancakeRouter_$1049__to_t_address__fromStack_reversed",
												"nativeSrc": "8399:268:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8492:9:8",
														"nodeType": "YulTypedName",
														"src": "8492:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8504:6:8",
														"nodeType": "YulTypedName",
														"src": "8504:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8515:4:8",
														"nodeType": "YulTypedName",
														"src": "8515:4:8",
														"type": ""
													}
												],
												"src": "8399:268:8"
											},
											{
												"body": {
													"nativeSrc": "8701:152:8",
													"nodeType": "YulBlock",
													"src": "8701:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8718:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8718:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8721:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8721:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8711:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:8"
																},
																"nativeSrc": "8711:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8711:88:8"
															},
															"nativeSrc": "8711:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8711:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8815:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8815:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8818:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8818:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8808:6:8"
																},
																"nativeSrc": "8808:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8808:15:8"
															},
															"nativeSrc": "8808:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8808:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8842:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8832:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8832:6:8"
																},
																"nativeSrc": "8832:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8832:15:8"
															},
															"nativeSrc": "8832:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8832:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8673:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8673:180:8"
											},
											{
												"body": {
													"nativeSrc": "8910:269:8",
													"nodeType": "YulBlock",
													"src": "8910:269:8",
													"statements": [
														{
															"nativeSrc": "8920:22:8",
															"nodeType": "YulAssignment",
															"src": "8920:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8934:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8934:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8940:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8940:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8930:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:8"
																},
																"nativeSrc": "8930:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8930:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8920:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:8"
																}
															]
														},
														{
															"nativeSrc": "8951:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8951:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8981:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8981:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8987:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8987:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8977:3:8"
																},
																"nativeSrc": "8977:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8977:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8955:18:8",
																	"nodeType": "YulTypedName",
																	"src": "8955:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9028:51:8",
																"nodeType": "YulBlock",
																"src": "9028:51:8",
																"statements": [
																	{
																		"nativeSrc": "9042:27:8",
																		"nodeType": "YulAssignment",
																		"src": "9042:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9056:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9056:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9064:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9064:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9052:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9052:3:8"
																			},
																			"nativeSrc": "9052:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9052:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9042:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9042:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9008:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9008:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9001:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:8"
																},
																"nativeSrc": "9001:26:8",
																"nodeType": "YulFunctionCall",
																"src": "9001:26:8"
															},
															"nativeSrc": "8998:81:8",
															"nodeType": "YulIf",
															"src": "8998:81:8"
														},
														{
															"body": {
																"nativeSrc": "9131:42:8",
																"nodeType": "YulBlock",
																"src": "9131:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9145:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9145:16:8"
																			},
																			"nativeSrc": "9145:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9145:18:8"
																		},
																		"nativeSrc": "9145:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9145:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9095:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9095:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9118:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9118:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9126:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9126:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9115:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9115:2:8"
																		},
																		"nativeSrc": "9115:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9115:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9092:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9092:2:8"
																},
																"nativeSrc": "9092:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9092:38:8"
															},
															"nativeSrc": "9089:84:8",
															"nodeType": "YulIf",
															"src": "9089:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8859:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8894:4:8",
														"nodeType": "YulTypedName",
														"src": "8894:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8903:6:8",
														"nodeType": "YulTypedName",
														"src": "8903:6:8",
														"type": ""
													}
												],
												"src": "8859:320:8"
											},
											{
												"body": {
													"nativeSrc": "9291:63:8",
													"nodeType": "YulBlock",
													"src": "9291:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9313:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9313:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9321:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9321:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9309:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9309:3:8"
																		},
																		"nativeSrc": "9309:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9309:14:8"
																	},
																	{
																		"hexValue": "43616e6e6f7420776974686472617720415443",
																		"kind": "string",
																		"nativeSrc": "9325:21:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:21:8",
																		"type": "",
																		"value": "Cannot withdraw ATC"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9302:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:8"
																},
																"nativeSrc": "9302:45:8",
																"nodeType": "YulFunctionCall",
																"src": "9302:45:8"
															},
															"nativeSrc": "9302:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "9302:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01",
												"nativeSrc": "9185:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9283:6:8",
														"nodeType": "YulTypedName",
														"src": "9283:6:8",
														"type": ""
													}
												],
												"src": "9185:169:8"
											},
											{
												"body": {
													"nativeSrc": "9506:220:8",
													"nodeType": "YulBlock",
													"src": "9506:220:8",
													"statements": [
														{
															"nativeSrc": "9516:74:8",
															"nodeType": "YulAssignment",
															"src": "9516:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9582:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9582:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9587:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9587:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9523:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9523:58:8"
																},
																"nativeSrc": "9523:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9523:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9516:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9516:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9688:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9688:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01",
																	"nativeSrc": "9599:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9599:88:8"
																},
																"nativeSrc": "9599:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9599:93:8"
															},
															"nativeSrc": "9599:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9599:93:8"
														},
														{
															"nativeSrc": "9701:19:8",
															"nodeType": "YulAssignment",
															"src": "9701:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9712:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9712:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9717:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9717:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9708:3:8"
																},
																"nativeSrc": "9708:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9708:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9701:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9701:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9360:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9494:3:8",
														"nodeType": "YulTypedName",
														"src": "9494:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9502:3:8",
														"nodeType": "YulTypedName",
														"src": "9502:3:8",
														"type": ""
													}
												],
												"src": "9360:366:8"
											},
											{
												"body": {
													"nativeSrc": "9903:248:8",
													"nodeType": "YulBlock",
													"src": "9903:248:8",
													"statements": [
														{
															"nativeSrc": "9913:26:8",
															"nodeType": "YulAssignment",
															"src": "9913:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9925:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9925:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9936:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9921:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9921:3:8"
																},
																"nativeSrc": "9921:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9921:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9913:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9913:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9960:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9960:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9971:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9971:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9956:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9956:3:8"
																		},
																		"nativeSrc": "9956:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9956:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9979:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9979:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9985:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9985:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:8"
																		},
																		"nativeSrc": "9975:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9975:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9949:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:8"
																},
																"nativeSrc": "9949:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9949:47:8"
															},
															"nativeSrc": "9949:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9949:47:8"
														},
														{
															"nativeSrc": "10005:139:8",
															"nodeType": "YulAssignment",
															"src": "10005:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10139:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10139:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10013:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10013:124:8"
																},
																"nativeSrc": "10013:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10013:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10005:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10005:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9732:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9883:9:8",
														"nodeType": "YulTypedName",
														"src": "9883:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9898:4:8",
														"nodeType": "YulTypedName",
														"src": "9898:4:8",
														"type": ""
													}
												],
												"src": "9732:419:8"
											},
											{
												"body": {
													"nativeSrc": "10220:80:8",
													"nodeType": "YulBlock",
													"src": "10220:80:8",
													"statements": [
														{
															"nativeSrc": "10230:22:8",
															"nodeType": "YulAssignment",
															"src": "10230:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10245:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10245:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10239:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10239:5:8"
																},
																"nativeSrc": "10239:13:8",
																"nodeType": "YulFunctionCall",
																"src": "10239:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10230:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10230:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10288:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10288:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10261:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "10261:26:8"
																},
																"nativeSrc": "10261:33:8",
																"nodeType": "YulFunctionCall",
																"src": "10261:33:8"
															},
															"nativeSrc": "10261:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "10261:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10157:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10198:6:8",
														"nodeType": "YulTypedName",
														"src": "10198:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10206:3:8",
														"nodeType": "YulTypedName",
														"src": "10206:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10214:5:8",
														"nodeType": "YulTypedName",
														"src": "10214:5:8",
														"type": ""
													}
												],
												"src": "10157:143:8"
											},
											{
												"body": {
													"nativeSrc": "10383:274:8",
													"nodeType": "YulBlock",
													"src": "10383:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10429:83:8",
																"nodeType": "YulBlock",
																"src": "10429:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10431:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10431:77:8"
																			},
																			"nativeSrc": "10431:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10431:79:8"
																		},
																		"nativeSrc": "10431:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10431:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10404:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10404:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10413:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10413:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10400:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10400:3:8"
																		},
																		"nativeSrc": "10400:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10400:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10425:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10425:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10396:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10396:3:8"
																},
																"nativeSrc": "10396:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10396:32:8"
															},
															"nativeSrc": "10393:119:8",
															"nodeType": "YulIf",
															"src": "10393:119:8"
														},
														{
															"nativeSrc": "10522:128:8",
															"nodeType": "YulBlock",
															"src": "10522:128:8",
															"statements": [
																{
																	"nativeSrc": "10537:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10537:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10551:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10551:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10541:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10541:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10566:74:8",
																	"nodeType": "YulAssignment",
																	"src": "10566:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10612:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10612:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10623:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10623:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10608:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10608:3:8"
																				},
																				"nativeSrc": "10608:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10608:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10632:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10632:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10576:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "10576:31:8"
																		},
																		"nativeSrc": "10576:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10576:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10566:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10566:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10306:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10353:9:8",
														"nodeType": "YulTypedName",
														"src": "10353:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10364:7:8",
														"nodeType": "YulTypedName",
														"src": "10364:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10376:6:8",
														"nodeType": "YulTypedName",
														"src": "10376:6:8",
														"type": ""
													}
												],
												"src": "10306:351:8"
											},
											{
												"body": {
													"nativeSrc": "10789:206:8",
													"nodeType": "YulBlock",
													"src": "10789:206:8",
													"statements": [
														{
															"nativeSrc": "10799:26:8",
															"nodeType": "YulAssignment",
															"src": "10799:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10811:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10811:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10822:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10822:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10807:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10807:3:8"
																},
																"nativeSrc": "10807:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10807:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10799:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10799:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10879:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10879:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10892:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10892:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10903:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10903:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10888:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10888:3:8"
																		},
																		"nativeSrc": "10888:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10888:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10835:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10835:43:8"
																},
																"nativeSrc": "10835:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10835:71:8"
															},
															"nativeSrc": "10835:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10835:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10960:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10960:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10973:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10973:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10984:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10984:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10969:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10969:3:8"
																		},
																		"nativeSrc": "10969:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10969:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10916:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10916:43:8"
																},
																"nativeSrc": "10916:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10916:72:8"
															},
															"nativeSrc": "10916:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10916:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10663:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10753:9:8",
														"nodeType": "YulTypedName",
														"src": "10753:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10765:6:8",
														"nodeType": "YulTypedName",
														"src": "10765:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10773:6:8",
														"nodeType": "YulTypedName",
														"src": "10773:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10784:4:8",
														"nodeType": "YulTypedName",
														"src": "10784:4:8",
														"type": ""
													}
												],
												"src": "10663:332:8"
											},
											{
												"body": {
													"nativeSrc": "11061:77:8",
													"nodeType": "YulBlock",
													"src": "11061:77:8",
													"statements": [
														{
															"nativeSrc": "11071:22:8",
															"nodeType": "YulAssignment",
															"src": "11071:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11086:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11086:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11080:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11080:5:8"
																},
																"nativeSrc": "11080:13:8",
																"nodeType": "YulFunctionCall",
																"src": "11080:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11071:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11071:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11126:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11126:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11102:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "11102:23:8"
																},
																"nativeSrc": "11102:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11102:30:8"
															},
															"nativeSrc": "11102:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11102:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11001:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11039:6:8",
														"nodeType": "YulTypedName",
														"src": "11039:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11047:3:8",
														"nodeType": "YulTypedName",
														"src": "11047:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11055:5:8",
														"nodeType": "YulTypedName",
														"src": "11055:5:8",
														"type": ""
													}
												],
												"src": "11001:137:8"
											},
											{
												"body": {
													"nativeSrc": "11218:271:8",
													"nodeType": "YulBlock",
													"src": "11218:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11264:83:8",
																"nodeType": "YulBlock",
																"src": "11264:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11266:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11266:77:8"
																			},
																			"nativeSrc": "11266:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11266:79:8"
																		},
																		"nativeSrc": "11266:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11266:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11239:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11239:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11248:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11248:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11235:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:8"
																		},
																		"nativeSrc": "11235:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11235:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11260:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11260:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11231:3:8"
																},
																"nativeSrc": "11231:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11231:32:8"
															},
															"nativeSrc": "11228:119:8",
															"nodeType": "YulIf",
															"src": "11228:119:8"
														},
														{
															"nativeSrc": "11357:125:8",
															"nodeType": "YulBlock",
															"src": "11357:125:8",
															"statements": [
																{
																	"nativeSrc": "11372:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11372:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11386:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11386:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11376:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11376:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11401:71:8",
																	"nodeType": "YulAssignment",
																	"src": "11401:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11444:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11444:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11455:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11455:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11440:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11440:3:8"
																				},
																				"nativeSrc": "11440:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11440:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11464:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11464:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11411:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "11411:28:8"
																		},
																		"nativeSrc": "11411:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11411:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11401:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11401:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11144:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11188:9:8",
														"nodeType": "YulTypedName",
														"src": "11188:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11199:7:8",
														"nodeType": "YulTypedName",
														"src": "11199:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11211:6:8",
														"nodeType": "YulTypedName",
														"src": "11211:6:8",
														"type": ""
													}
												],
												"src": "11144:345:8"
											},
											{
												"body": {
													"nativeSrc": "11649:288:8",
													"nodeType": "YulBlock",
													"src": "11649:288:8",
													"statements": [
														{
															"nativeSrc": "11659:26:8",
															"nodeType": "YulAssignment",
															"src": "11659:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11671:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11671:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11682:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11682:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11667:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:8"
																},
																"nativeSrc": "11667:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11667:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11659:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11659:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11739:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11739:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11752:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11752:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11763:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11763:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11748:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11748:3:8"
																		},
																		"nativeSrc": "11748:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11748:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11695:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11695:43:8"
																},
																"nativeSrc": "11695:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11695:71:8"
															},
															"nativeSrc": "11695:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11695:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11820:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11820:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11833:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11833:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11844:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11844:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11829:3:8"
																		},
																		"nativeSrc": "11829:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11829:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11776:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11776:43:8"
																},
																"nativeSrc": "11776:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11776:72:8"
															},
															"nativeSrc": "11776:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11776:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11902:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11902:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11915:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11915:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11926:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11926:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11911:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11911:3:8"
																		},
																		"nativeSrc": "11911:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11911:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11858:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11858:43:8"
																},
																"nativeSrc": "11858:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11858:72:8"
															},
															"nativeSrc": "11858:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11858:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11495:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11605:9:8",
														"nodeType": "YulTypedName",
														"src": "11605:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11617:6:8",
														"nodeType": "YulTypedName",
														"src": "11617:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11625:6:8",
														"nodeType": "YulTypedName",
														"src": "11625:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11633:6:8",
														"nodeType": "YulTypedName",
														"src": "11633:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11644:4:8",
														"nodeType": "YulTypedName",
														"src": "11644:4:8",
														"type": ""
													}
												],
												"src": "11495:442:8"
											},
											{
												"body": {
													"nativeSrc": "12049:122:8",
													"nodeType": "YulBlock",
													"src": "12049:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12071:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12071:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12079:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12079:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12067:3:8"
																		},
																		"nativeSrc": "12067:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12067:14:8"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nativeSrc": "12083:34:8",
																		"nodeType": "YulLiteral",
																		"src": "12083:34:8",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12060:6:8"
																},
																"nativeSrc": "12060:58:8",
																"nodeType": "YulFunctionCall",
																"src": "12060:58:8"
															},
															"nativeSrc": "12060:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "12060:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12139:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12139:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12147:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12147:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12135:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12135:3:8"
																		},
																		"nativeSrc": "12135:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12135:15:8"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "12152:11:8",
																		"nodeType": "YulLiteral",
																		"src": "12152:11:8",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12128:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12128:6:8"
																},
																"nativeSrc": "12128:36:8",
																"nodeType": "YulFunctionCall",
																"src": "12128:36:8"
															},
															"nativeSrc": "12128:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "12128:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
												"nativeSrc": "11943:228:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12041:6:8",
														"nodeType": "YulTypedName",
														"src": "12041:6:8",
														"type": ""
													}
												],
												"src": "11943:228:8"
											},
											{
												"body": {
													"nativeSrc": "12323:220:8",
													"nodeType": "YulBlock",
													"src": "12323:220:8",
													"statements": [
														{
															"nativeSrc": "12333:74:8",
															"nodeType": "YulAssignment",
															"src": "12333:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12399:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12399:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12404:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12404:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12340:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12340:58:8"
																},
																"nativeSrc": "12340:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12340:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12333:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12333:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12505:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12505:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																	"nativeSrc": "12416:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12416:88:8"
																},
																"nativeSrc": "12416:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12416:93:8"
															},
															"nativeSrc": "12416:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12416:93:8"
														},
														{
															"nativeSrc": "12518:19:8",
															"nodeType": "YulAssignment",
															"src": "12518:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12529:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12529:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12534:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12534:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12525:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12525:3:8"
																},
																"nativeSrc": "12525:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12525:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12518:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12518:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12177:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12311:3:8",
														"nodeType": "YulTypedName",
														"src": "12311:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12319:3:8",
														"nodeType": "YulTypedName",
														"src": "12319:3:8",
														"type": ""
													}
												],
												"src": "12177:366:8"
											},
											{
												"body": {
													"nativeSrc": "12720:248:8",
													"nodeType": "YulBlock",
													"src": "12720:248:8",
													"statements": [
														{
															"nativeSrc": "12730:26:8",
															"nodeType": "YulAssignment",
															"src": "12730:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12742:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12742:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12753:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12753:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12738:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12738:3:8"
																},
																"nativeSrc": "12738:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12738:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12730:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12730:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12777:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12777:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12788:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12788:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12773:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12773:3:8"
																		},
																		"nativeSrc": "12773:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12773:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12796:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12796:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12802:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12802:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12792:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12792:3:8"
																		},
																		"nativeSrc": "12792:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12792:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12766:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12766:6:8"
																},
																"nativeSrc": "12766:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12766:47:8"
															},
															"nativeSrc": "12766:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12766:47:8"
														},
														{
															"nativeSrc": "12822:139:8",
															"nodeType": "YulAssignment",
															"src": "12822:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12956:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12956:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12830:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12830:124:8"
																},
																"nativeSrc": "12830:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12830:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12822:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12822:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12549:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12700:9:8",
														"nodeType": "YulTypedName",
														"src": "12700:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12715:4:8",
														"nodeType": "YulTypedName",
														"src": "12715:4:8",
														"type": ""
													}
												],
												"src": "12549:419:8"
											},
											{
												"body": {
													"nativeSrc": "13080:63:8",
													"nodeType": "YulBlock",
													"src": "13080:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13102:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13102:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13110:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13110:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13098:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13098:3:8"
																		},
																		"nativeSrc": "13098:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13098:14:8"
																	},
																	{
																		"hexValue": "54726164696e67206e6f7420656e61626c6564",
																		"kind": "string",
																		"nativeSrc": "13114:21:8",
																		"nodeType": "YulLiteral",
																		"src": "13114:21:8",
																		"type": "",
																		"value": "Trading not enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13091:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13091:6:8"
																},
																"nativeSrc": "13091:45:8",
																"nodeType": "YulFunctionCall",
																"src": "13091:45:8"
															},
															"nativeSrc": "13091:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "13091:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
												"nativeSrc": "12974:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13072:6:8",
														"nodeType": "YulTypedName",
														"src": "13072:6:8",
														"type": ""
													}
												],
												"src": "12974:169:8"
											},
											{
												"body": {
													"nativeSrc": "13295:220:8",
													"nodeType": "YulBlock",
													"src": "13295:220:8",
													"statements": [
														{
															"nativeSrc": "13305:74:8",
															"nodeType": "YulAssignment",
															"src": "13305:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13371:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13376:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13376:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13312:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13312:58:8"
																},
																"nativeSrc": "13312:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13312:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13305:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13305:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13477:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
																	"nativeSrc": "13388:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13388:88:8"
																},
																"nativeSrc": "13388:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13388:93:8"
															},
															"nativeSrc": "13388:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13388:93:8"
														},
														{
															"nativeSrc": "13490:19:8",
															"nodeType": "YulAssignment",
															"src": "13490:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13501:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13501:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13506:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13506:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13497:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13497:3:8"
																},
																"nativeSrc": "13497:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13497:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13490:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13490:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13149:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13283:3:8",
														"nodeType": "YulTypedName",
														"src": "13283:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13291:3:8",
														"nodeType": "YulTypedName",
														"src": "13291:3:8",
														"type": ""
													}
												],
												"src": "13149:366:8"
											},
											{
												"body": {
													"nativeSrc": "13692:248:8",
													"nodeType": "YulBlock",
													"src": "13692:248:8",
													"statements": [
														{
															"nativeSrc": "13702:26:8",
															"nodeType": "YulAssignment",
															"src": "13702:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13714:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13714:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13725:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13725:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13710:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13710:3:8"
																},
																"nativeSrc": "13710:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13710:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13702:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13702:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13749:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13749:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13760:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13760:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13745:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:8"
																		},
																		"nativeSrc": "13745:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13745:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13768:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13768:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13774:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13774:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13764:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13764:3:8"
																		},
																		"nativeSrc": "13764:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13764:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13738:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:8"
																},
																"nativeSrc": "13738:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13738:47:8"
															},
															"nativeSrc": "13738:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13738:47:8"
														},
														{
															"nativeSrc": "13794:139:8",
															"nodeType": "YulAssignment",
															"src": "13794:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13928:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13928:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13802:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13802:124:8"
																},
																"nativeSrc": "13802:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13802:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13794:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13794:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13521:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13672:9:8",
														"nodeType": "YulTypedName",
														"src": "13672:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13687:4:8",
														"nodeType": "YulTypedName",
														"src": "13687:4:8",
														"type": ""
													}
												],
												"src": "13521:419:8"
											},
											{
												"body": {
													"nativeSrc": "13974:152:8",
													"nodeType": "YulBlock",
													"src": "13974:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13991:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13994:77:8",
																		"nodeType": "YulLiteral",
																		"src": "13994:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13984:6:8"
																},
																"nativeSrc": "13984:88:8",
																"nodeType": "YulFunctionCall",
																"src": "13984:88:8"
															},
															"nativeSrc": "13984:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "13984:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14088:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14088:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14091:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14091:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14081:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14081:6:8"
																},
																"nativeSrc": "14081:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14081:15:8"
															},
															"nativeSrc": "14081:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14081:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14112:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14112:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14115:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14115:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14105:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14105:6:8"
																},
																"nativeSrc": "14105:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14105:15:8"
															},
															"nativeSrc": "14105:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14105:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13946:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "13946:180:8"
											},
											{
												"body": {
													"nativeSrc": "14180:362:8",
													"nodeType": "YulBlock",
													"src": "14180:362:8",
													"statements": [
														{
															"nativeSrc": "14190:25:8",
															"nodeType": "YulAssignment",
															"src": "14190:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14213:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14213:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14195:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14195:17:8"
																},
																"nativeSrc": "14195:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14195:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14190:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14190:1:8"
																}
															]
														},
														{
															"nativeSrc": "14224:25:8",
															"nodeType": "YulAssignment",
															"src": "14224:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14247:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14247:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14229:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14229:17:8"
																},
																"nativeSrc": "14229:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14229:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14224:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14224:1:8"
																}
															]
														},
														{
															"nativeSrc": "14258:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14258:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14281:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14281:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14284:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14284:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14277:3:8"
																},
																"nativeSrc": "14277:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14277:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14262:11:8",
																	"nodeType": "YulTypedName",
																	"src": "14262:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14295:41:8",
															"nodeType": "YulAssignment",
															"src": "14295:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14324:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "14324:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14306:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14306:17:8"
																},
																"nativeSrc": "14306:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14306:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14295:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14295:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14513:22:8",
																"nodeType": "YulBlock",
																"src": "14513:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14515:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14515:16:8"
																			},
																			"nativeSrc": "14515:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14515:18:8"
																		},
																		"nativeSrc": "14515:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14515:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14446:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "14446:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14439:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "14439:6:8"
																				},
																				"nativeSrc": "14439:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14439:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14469:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "14469:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14476:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "14476:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14485:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "14485:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14472:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "14472:3:8"
																						},
																						"nativeSrc": "14472:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "14472:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14466:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "14466:2:8"
																				},
																				"nativeSrc": "14466:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14466:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14419:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "14419:2:8"
																		},
																		"nativeSrc": "14419:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14419:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14399:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14399:6:8"
																},
																"nativeSrc": "14399:113:8",
																"nodeType": "YulFunctionCall",
																"src": "14399:113:8"
															},
															"nativeSrc": "14396:139:8",
															"nodeType": "YulIf",
															"src": "14396:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14132:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14163:1:8",
														"nodeType": "YulTypedName",
														"src": "14163:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14166:1:8",
														"nodeType": "YulTypedName",
														"src": "14166:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14172:7:8",
														"nodeType": "YulTypedName",
														"src": "14172:7:8",
														"type": ""
													}
												],
												"src": "14132:410:8"
											},
											{
												"body": {
													"nativeSrc": "14576:152:8",
													"nodeType": "YulBlock",
													"src": "14576:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14593:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14593:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14596:77:8",
																		"nodeType": "YulLiteral",
																		"src": "14596:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14586:6:8"
																},
																"nativeSrc": "14586:88:8",
																"nodeType": "YulFunctionCall",
																"src": "14586:88:8"
															},
															"nativeSrc": "14586:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "14586:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14690:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14690:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14693:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14693:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14683:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14683:6:8"
																},
																"nativeSrc": "14683:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14683:15:8"
															},
															"nativeSrc": "14683:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14683:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14714:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14714:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14717:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14717:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14707:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14707:6:8"
																},
																"nativeSrc": "14707:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14707:15:8"
															},
															"nativeSrc": "14707:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14707:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14548:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14548:180:8"
											},
											{
												"body": {
													"nativeSrc": "14776:143:8",
													"nodeType": "YulBlock",
													"src": "14776:143:8",
													"statements": [
														{
															"nativeSrc": "14786:25:8",
															"nodeType": "YulAssignment",
															"src": "14786:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14809:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14809:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14791:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14791:17:8"
																},
																"nativeSrc": "14791:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14791:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14786:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14786:1:8"
																}
															]
														},
														{
															"nativeSrc": "14820:25:8",
															"nodeType": "YulAssignment",
															"src": "14820:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14843:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14843:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14825:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14825:17:8"
																},
																"nativeSrc": "14825:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14825:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14820:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14820:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14867:22:8",
																"nodeType": "YulBlock",
																"src": "14867:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14869:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14869:16:8"
																			},
																			"nativeSrc": "14869:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14869:18:8"
																		},
																		"nativeSrc": "14869:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14869:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14864:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14864:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14857:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14857:6:8"
																},
																"nativeSrc": "14857:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14857:9:8"
															},
															"nativeSrc": "14854:35:8",
															"nodeType": "YulIf",
															"src": "14854:35:8"
														},
														{
															"nativeSrc": "14899:14:8",
															"nodeType": "YulAssignment",
															"src": "14899:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14908:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14908:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14911:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14911:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14904:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14904:3:8"
																},
																"nativeSrc": "14904:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14904:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14899:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14899:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14734:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14765:1:8",
														"nodeType": "YulTypedName",
														"src": "14765:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14768:1:8",
														"nodeType": "YulTypedName",
														"src": "14768:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14774:1:8",
														"nodeType": "YulTypedName",
														"src": "14774:1:8",
														"type": ""
													}
												],
												"src": "14734:185:8"
											},
											{
												"body": {
													"nativeSrc": "14970:149:8",
													"nodeType": "YulBlock",
													"src": "14970:149:8",
													"statements": [
														{
															"nativeSrc": "14980:25:8",
															"nodeType": "YulAssignment",
															"src": "14980:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15003:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15003:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14985:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14985:17:8"
																},
																"nativeSrc": "14985:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14985:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14980:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14980:1:8"
																}
															]
														},
														{
															"nativeSrc": "15014:25:8",
															"nodeType": "YulAssignment",
															"src": "15014:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15037:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15037:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15019:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15019:17:8"
																},
																"nativeSrc": "15019:20:8",
																"nodeType": "YulFunctionCall",
																"src": "15019:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15014:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15014:1:8"
																}
															]
														},
														{
															"nativeSrc": "15048:17:8",
															"nodeType": "YulAssignment",
															"src": "15048:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15060:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15060:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15063:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15063:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15056:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15056:3:8"
																},
																"nativeSrc": "15056:9:8",
																"nodeType": "YulFunctionCall",
																"src": "15056:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15048:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15048:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15090:22:8",
																"nodeType": "YulBlock",
																"src": "15090:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15092:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "15092:16:8"
																			},
																			"nativeSrc": "15092:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15092:18:8"
																		},
																		"nativeSrc": "15092:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15092:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15081:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15081:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15087:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15087:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15078:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15078:2:8"
																},
																"nativeSrc": "15078:11:8",
																"nodeType": "YulFunctionCall",
																"src": "15078:11:8"
															},
															"nativeSrc": "15075:37:8",
															"nodeType": "YulIf",
															"src": "15075:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14925:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14956:1:8",
														"nodeType": "YulTypedName",
														"src": "14956:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14959:1:8",
														"nodeType": "YulTypedName",
														"src": "14959:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14965:4:8",
														"nodeType": "YulTypedName",
														"src": "14965:4:8",
														"type": ""
													}
												],
												"src": "14925:194:8"
											},
											{
												"body": {
													"nativeSrc": "15231:75:8",
													"nodeType": "YulBlock",
													"src": "15231:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15253:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15253:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15261:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15261:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15249:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15249:3:8"
																		},
																		"nativeSrc": "15249:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15249:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "15265:33:8",
																		"nodeType": "YulLiteral",
																		"src": "15265:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15242:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:8"
																},
																"nativeSrc": "15242:57:8",
																"nodeType": "YulFunctionCall",
																"src": "15242:57:8"
															},
															"nativeSrc": "15242:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "15242:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "15125:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15223:6:8",
														"nodeType": "YulTypedName",
														"src": "15223:6:8",
														"type": ""
													}
												],
												"src": "15125:181:8"
											},
											{
												"body": {
													"nativeSrc": "15458:220:8",
													"nodeType": "YulBlock",
													"src": "15458:220:8",
													"statements": [
														{
															"nativeSrc": "15468:74:8",
															"nodeType": "YulAssignment",
															"src": "15468:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15534:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15534:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15539:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15539:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15475:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15475:58:8"
																},
																"nativeSrc": "15475:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15475:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15468:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15468:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15640:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15640:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "15551:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15551:88:8"
																},
																"nativeSrc": "15551:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15551:93:8"
															},
															"nativeSrc": "15551:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15551:93:8"
														},
														{
															"nativeSrc": "15653:19:8",
															"nodeType": "YulAssignment",
															"src": "15653:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15664:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15664:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15669:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15669:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15660:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15660:3:8"
																},
																"nativeSrc": "15660:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15660:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15653:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15653:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15312:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15446:3:8",
														"nodeType": "YulTypedName",
														"src": "15446:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15454:3:8",
														"nodeType": "YulTypedName",
														"src": "15454:3:8",
														"type": ""
													}
												],
												"src": "15312:366:8"
											},
											{
												"body": {
													"nativeSrc": "15855:248:8",
													"nodeType": "YulBlock",
													"src": "15855:248:8",
													"statements": [
														{
															"nativeSrc": "15865:26:8",
															"nodeType": "YulAssignment",
															"src": "15865:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15877:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15877:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15888:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15888:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15873:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15873:3:8"
																},
																"nativeSrc": "15873:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15873:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15865:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15865:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15912:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15912:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15923:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15923:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15908:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15908:3:8"
																		},
																		"nativeSrc": "15908:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15908:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15931:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15931:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15937:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15937:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15927:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15927:3:8"
																		},
																		"nativeSrc": "15927:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15927:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15901:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15901:6:8"
																},
																"nativeSrc": "15901:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15901:47:8"
															},
															"nativeSrc": "15901:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15901:47:8"
														},
														{
															"nativeSrc": "15957:139:8",
															"nodeType": "YulAssignment",
															"src": "15957:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16091:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16091:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15965:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15965:124:8"
																},
																"nativeSrc": "15965:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15965:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15957:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15957:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15684:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15835:9:8",
														"nodeType": "YulTypedName",
														"src": "15835:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15850:4:8",
														"nodeType": "YulTypedName",
														"src": "15850:4:8",
														"type": ""
													}
												],
												"src": "15684:419:8"
											},
											{
												"body": {
													"nativeSrc": "16137:152:8",
													"nodeType": "YulBlock",
													"src": "16137:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16154:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16157:77:8",
																		"nodeType": "YulLiteral",
																		"src": "16157:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16147:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16147:6:8"
																},
																"nativeSrc": "16147:88:8",
																"nodeType": "YulFunctionCall",
																"src": "16147:88:8"
															},
															"nativeSrc": "16147:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "16147:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16251:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16251:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16254:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16254:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16244:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16244:6:8"
																},
																"nativeSrc": "16244:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16244:15:8"
															},
															"nativeSrc": "16244:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "16244:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16275:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16275:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16278:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16278:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16268:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16268:6:8"
																},
																"nativeSrc": "16268:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16268:15:8"
															},
															"nativeSrc": "16268:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "16268:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "16109:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "16109:180:8"
											},
											{
												"body": {
													"nativeSrc": "16323:152:8",
													"nodeType": "YulBlock",
													"src": "16323:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16340:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16340:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16343:77:8",
																		"nodeType": "YulLiteral",
																		"src": "16343:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16333:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16333:6:8"
																},
																"nativeSrc": "16333:88:8",
																"nodeType": "YulFunctionCall",
																"src": "16333:88:8"
															},
															"nativeSrc": "16333:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "16333:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16437:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16437:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16440:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16440:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16430:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16430:6:8"
																},
																"nativeSrc": "16430:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16430:15:8"
															},
															"nativeSrc": "16430:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "16430:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16461:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16461:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16464:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16464:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16454:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16454:6:8"
																},
																"nativeSrc": "16454:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16454:15:8"
															},
															"nativeSrc": "16454:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "16454:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16295:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "16295:180:8"
											},
											{
												"body": {
													"nativeSrc": "16544:80:8",
													"nodeType": "YulBlock",
													"src": "16544:80:8",
													"statements": [
														{
															"nativeSrc": "16554:22:8",
															"nodeType": "YulAssignment",
															"src": "16554:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16569:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16569:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16563:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16563:5:8"
																},
																"nativeSrc": "16563:13:8",
																"nodeType": "YulFunctionCall",
																"src": "16563:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16554:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16554:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16612:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16612:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "16585:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "16585:26:8"
																},
																"nativeSrc": "16585:33:8",
																"nodeType": "YulFunctionCall",
																"src": "16585:33:8"
															},
															"nativeSrc": "16585:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "16585:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "16481:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16522:6:8",
														"nodeType": "YulTypedName",
														"src": "16522:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16530:3:8",
														"nodeType": "YulTypedName",
														"src": "16530:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16538:5:8",
														"nodeType": "YulTypedName",
														"src": "16538:5:8",
														"type": ""
													}
												],
												"src": "16481:143:8"
											},
											{
												"body": {
													"nativeSrc": "16707:274:8",
													"nodeType": "YulBlock",
													"src": "16707:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16753:83:8",
																"nodeType": "YulBlock",
																"src": "16753:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16755:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "16755:77:8"
																			},
																			"nativeSrc": "16755:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16755:79:8"
																		},
																		"nativeSrc": "16755:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16755:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16728:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16728:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16737:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16737:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16724:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16724:3:8"
																		},
																		"nativeSrc": "16724:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16724:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16749:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16749:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16720:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16720:3:8"
																},
																"nativeSrc": "16720:32:8",
																"nodeType": "YulFunctionCall",
																"src": "16720:32:8"
															},
															"nativeSrc": "16717:119:8",
															"nodeType": "YulIf",
															"src": "16717:119:8"
														},
														{
															"nativeSrc": "16846:128:8",
															"nodeType": "YulBlock",
															"src": "16846:128:8",
															"statements": [
																{
																	"nativeSrc": "16861:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16861:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16875:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16875:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16865:6:8",
																			"nodeType": "YulTypedName",
																			"src": "16865:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16890:74:8",
																	"nodeType": "YulAssignment",
																	"src": "16890:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16936:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16936:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16947:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16947:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16932:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16932:3:8"
																				},
																				"nativeSrc": "16932:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16932:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16956:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16956:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "16900:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "16900:31:8"
																		},
																		"nativeSrc": "16900:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16900:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16890:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16890:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "16630:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16677:9:8",
														"nodeType": "YulTypedName",
														"src": "16677:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16688:7:8",
														"nodeType": "YulTypedName",
														"src": "16688:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16700:6:8",
														"nodeType": "YulTypedName",
														"src": "16700:6:8",
														"type": ""
													}
												],
												"src": "16630:351:8"
											},
											{
												"body": {
													"nativeSrc": "17040:32:8",
													"nodeType": "YulBlock",
													"src": "17040:32:8",
													"statements": [
														{
															"nativeSrc": "17050:16:8",
															"nodeType": "YulAssignment",
															"src": "17050:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "17061:5:8",
																"nodeType": "YulIdentifier",
																"src": "17061:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "17050:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "17050:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "16987:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17022:5:8",
														"nodeType": "YulTypedName",
														"src": "17022:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "17032:7:8",
														"nodeType": "YulTypedName",
														"src": "17032:7:8",
														"type": ""
													}
												],
												"src": "16987:85:8"
											},
											{
												"body": {
													"nativeSrc": "17146:90:8",
													"nodeType": "YulBlock",
													"src": "17146:90:8",
													"statements": [
														{
															"nativeSrc": "17156:74:8",
															"nodeType": "YulAssignment",
															"src": "17156:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17222:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "17222:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "17196:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "17196:25:8"
																				},
																				"nativeSrc": "17196:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17196:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17187:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "17187:8:8"
																		},
																		"nativeSrc": "17187:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17187:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17169:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "17169:17:8"
																},
																"nativeSrc": "17169:61:8",
																"nodeType": "YulFunctionCall",
																"src": "17169:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17156:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "17156:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "17078:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17126:5:8",
														"nodeType": "YulTypedName",
														"src": "17126:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17136:9:8",
														"nodeType": "YulTypedName",
														"src": "17136:9:8",
														"type": ""
													}
												],
												"src": "17078:158:8"
											},
											{
												"body": {
													"nativeSrc": "17315:74:8",
													"nodeType": "YulBlock",
													"src": "17315:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17332:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17332:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17376:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "17376:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "17337:38:8",
																			"nodeType": "YulIdentifier",
																			"src": "17337:38:8"
																		},
																		"nativeSrc": "17337:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17337:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17325:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17325:6:8"
																},
																"nativeSrc": "17325:58:8",
																"nodeType": "YulFunctionCall",
																"src": "17325:58:8"
															},
															"nativeSrc": "17325:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "17325:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "17242:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17303:5:8",
														"nodeType": "YulTypedName",
														"src": "17303:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17310:3:8",
														"nodeType": "YulTypedName",
														"src": "17310:3:8",
														"type": ""
													}
												],
												"src": "17242:147:8"
											},
											{
												"body": {
													"nativeSrc": "17469:40:8",
													"nodeType": "YulBlock",
													"src": "17469:40:8",
													"statements": [
														{
															"nativeSrc": "17480:22:8",
															"nodeType": "YulAssignment",
															"src": "17480:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17496:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "17496:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17490:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "17490:5:8"
																},
																"nativeSrc": "17490:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17490:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17480:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17480:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "17395:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17452:5:8",
														"nodeType": "YulTypedName",
														"src": "17452:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17462:6:8",
														"nodeType": "YulTypedName",
														"src": "17462:6:8",
														"type": ""
													}
												],
												"src": "17395:114:8"
											},
											{
												"body": {
													"nativeSrc": "17626:73:8",
													"nodeType": "YulBlock",
													"src": "17626:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17643:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17643:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17648:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17648:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17636:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17636:6:8"
																},
																"nativeSrc": "17636:19:8",
																"nodeType": "YulFunctionCall",
																"src": "17636:19:8"
															},
															"nativeSrc": "17636:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "17636:19:8"
														},
														{
															"nativeSrc": "17664:29:8",
															"nodeType": "YulAssignment",
															"src": "17664:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17683:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17683:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17688:4:8",
																		"nodeType": "YulLiteral",
																		"src": "17688:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17679:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17679:3:8"
																},
																"nativeSrc": "17679:14:8",
																"nodeType": "YulFunctionCall",
																"src": "17679:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17664:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "17664:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "17515:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17598:3:8",
														"nodeType": "YulTypedName",
														"src": "17598:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17603:6:8",
														"nodeType": "YulTypedName",
														"src": "17603:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17614:11:8",
														"nodeType": "YulTypedName",
														"src": "17614:11:8",
														"type": ""
													}
												],
												"src": "17515:184:8"
											},
											{
												"body": {
													"nativeSrc": "17777:60:8",
													"nodeType": "YulBlock",
													"src": "17777:60:8",
													"statements": [
														{
															"nativeSrc": "17787:11:8",
															"nodeType": "YulAssignment",
															"src": "17787:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "17795:3:8",
																"nodeType": "YulIdentifier",
																"src": "17795:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17787:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17787:4:8"
																}
															]
														},
														{
															"nativeSrc": "17808:22:8",
															"nodeType": "YulAssignment",
															"src": "17808:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "17820:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17820:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17825:4:8",
																		"nodeType": "YulLiteral",
																		"src": "17825:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17816:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17816:3:8"
																},
																"nativeSrc": "17816:14:8",
																"nodeType": "YulFunctionCall",
																"src": "17816:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17808:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17808:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "17705:132:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "17764:3:8",
														"nodeType": "YulTypedName",
														"src": "17764:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "17772:4:8",
														"nodeType": "YulTypedName",
														"src": "17772:4:8",
														"type": ""
													}
												],
												"src": "17705:132:8"
											},
											{
												"body": {
													"nativeSrc": "17898:53:8",
													"nodeType": "YulBlock",
													"src": "17898:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17915:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17915:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17938:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "17938:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17920:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "17920:17:8"
																		},
																		"nativeSrc": "17920:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17920:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17908:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17908:6:8"
																},
																"nativeSrc": "17908:37:8",
																"nodeType": "YulFunctionCall",
																"src": "17908:37:8"
															},
															"nativeSrc": "17908:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "17908:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "17843:108:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17886:5:8",
														"nodeType": "YulTypedName",
														"src": "17886:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17893:3:8",
														"nodeType": "YulTypedName",
														"src": "17893:3:8",
														"type": ""
													}
												],
												"src": "17843:108:8"
											},
											{
												"body": {
													"nativeSrc": "18037:99:8",
													"nodeType": "YulBlock",
													"src": "18037:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18081:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18081:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18089:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18089:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "18047:33:8",
																	"nodeType": "YulIdentifier",
																	"src": "18047:33:8"
																},
																"nativeSrc": "18047:46:8",
																"nodeType": "YulFunctionCall",
																"src": "18047:46:8"
															},
															"nativeSrc": "18047:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "18047:46:8"
														},
														{
															"nativeSrc": "18102:28:8",
															"nodeType": "YulAssignment",
															"src": "18102:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18120:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18120:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18125:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18125:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18116:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18116:3:8"
																},
																"nativeSrc": "18116:14:8",
																"nodeType": "YulFunctionCall",
																"src": "18116:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "18102:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "18102:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "17957:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "18010:6:8",
														"nodeType": "YulTypedName",
														"src": "18010:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18018:3:8",
														"nodeType": "YulTypedName",
														"src": "18018:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "18026:10:8",
														"nodeType": "YulTypedName",
														"src": "18026:10:8",
														"type": ""
													}
												],
												"src": "17957:179:8"
											},
											{
												"body": {
													"nativeSrc": "18217:38:8",
													"nodeType": "YulBlock",
													"src": "18217:38:8",
													"statements": [
														{
															"nativeSrc": "18227:22:8",
															"nodeType": "YulAssignment",
															"src": "18227:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "18239:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18239:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18244:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18244:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18235:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18235:3:8"
																},
																"nativeSrc": "18235:14:8",
																"nodeType": "YulFunctionCall",
																"src": "18235:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "18227:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18227:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "18142:113:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18204:3:8",
														"nodeType": "YulTypedName",
														"src": "18204:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "18212:4:8",
														"nodeType": "YulTypedName",
														"src": "18212:4:8",
														"type": ""
													}
												],
												"src": "18142:113:8"
											},
											{
												"body": {
													"nativeSrc": "18415:608:8",
													"nodeType": "YulBlock",
													"src": "18415:608:8",
													"statements": [
														{
															"nativeSrc": "18425:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "18425:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18487:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18487:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "18439:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "18439:47:8"
																},
																"nativeSrc": "18439:54:8",
																"nodeType": "YulFunctionCall",
																"src": "18439:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18429:6:8",
																	"nodeType": "YulTypedName",
																	"src": "18429:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18502:93:8",
															"nodeType": "YulAssignment",
															"src": "18502:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18583:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18583:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18588:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18588:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "18509:73:8",
																	"nodeType": "YulIdentifier",
																	"src": "18509:73:8"
																},
																"nativeSrc": "18509:86:8",
																"nodeType": "YulFunctionCall",
																"src": "18509:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18502:3:8"
																}
															]
														},
														{
															"nativeSrc": "18604:71:8",
															"nodeType": "YulVariableDeclaration",
															"src": "18604:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18669:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18669:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "18619:49:8",
																	"nodeType": "YulIdentifier",
																	"src": "18619:49:8"
																},
																"nativeSrc": "18619:56:8",
																"nodeType": "YulFunctionCall",
																"src": "18619:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "18608:7:8",
																	"nodeType": "YulTypedName",
																	"src": "18608:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18684:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "18684:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "18698:7:8",
																"nodeType": "YulIdentifier",
																"src": "18698:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "18688:6:8",
																	"nodeType": "YulTypedName",
																	"src": "18688:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18774:224:8",
																"nodeType": "YulBlock",
																"src": "18774:224:8",
																"statements": [
																	{
																		"nativeSrc": "18788:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18788:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "18815:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "18815:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "18809:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "18809:5:8"
																			},
																			"nativeSrc": "18809:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18809:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "18792:13:8",
																				"nodeType": "YulTypedName",
																				"src": "18792:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18835:70:8",
																		"nodeType": "YulAssignment",
																		"src": "18835:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "18886:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "18886:13:8"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "18901:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "18901:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "18842:43:8",
																				"nodeType": "YulIdentifier",
																				"src": "18842:43:8"
																			},
																			"nativeSrc": "18842:63:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18842:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "18835:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18835:3:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18918:70:8",
																		"nodeType": "YulAssignment",
																		"src": "18918:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "18981:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "18981:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "18928:52:8",
																				"nodeType": "YulIdentifier",
																				"src": "18928:52:8"
																			},
																			"nativeSrc": "18928:60:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18928:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "18918:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18918:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "18736:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18736:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18739:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18739:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18733:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18733:2:8"
																},
																"nativeSrc": "18733:13:8",
																"nodeType": "YulFunctionCall",
																"src": "18733:13:8"
															},
															"nativeSrc": "18714:284:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18747:18:8",
																"nodeType": "YulBlock",
																"src": "18747:18:8",
																"statements": [
																	{
																		"nativeSrc": "18749:14:8",
																		"nodeType": "YulAssignment",
																		"src": "18749:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "18758:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "18758:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18761:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18761:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18754:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18754:3:8"
																			},
																			"nativeSrc": "18754:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18754:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "18749:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "18749:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18718:14:8",
																"nodeType": "YulBlock",
																"src": "18718:14:8",
																"statements": [
																	{
																		"nativeSrc": "18720:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18720:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18729:1:8",
																			"nodeType": "YulLiteral",
																			"src": "18729:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "18724:1:8",
																				"nodeType": "YulTypedName",
																				"src": "18724:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "18714:284:8"
														},
														{
															"nativeSrc": "19007:10:8",
															"nodeType": "YulAssignment",
															"src": "19007:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "19014:3:8",
																"nodeType": "YulIdentifier",
																"src": "19014:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19007:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19007:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "18291:732:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18394:5:8",
														"nodeType": "YulTypedName",
														"src": "18394:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18401:3:8",
														"nodeType": "YulTypedName",
														"src": "18401:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18410:3:8",
														"nodeType": "YulTypedName",
														"src": "18410:3:8",
														"type": ""
													}
												],
												"src": "18291:732:8"
											},
											{
												"body": {
													"nativeSrc": "19297:563:8",
													"nodeType": "YulBlock",
													"src": "19297:563:8",
													"statements": [
														{
															"nativeSrc": "19307:27:8",
															"nodeType": "YulAssignment",
															"src": "19307:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19319:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19319:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19330:3:8",
																		"nodeType": "YulLiteral",
																		"src": "19330:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19315:3:8"
																},
																"nativeSrc": "19315:19:8",
																"nodeType": "YulFunctionCall",
																"src": "19315:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19307:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19307:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19388:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19388:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19401:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19401:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19412:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19412:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19397:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19397:3:8"
																		},
																		"nativeSrc": "19397:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19397:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19344:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19344:43:8"
																},
																"nativeSrc": "19344:71:8",
																"nodeType": "YulFunctionCall",
																"src": "19344:71:8"
															},
															"nativeSrc": "19344:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "19344:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19477:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19477:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19490:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19490:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19501:2:8",
																				"nodeType": "YulLiteral",
																				"src": "19501:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19486:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19486:3:8"
																		},
																		"nativeSrc": "19486:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19486:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "19425:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "19425:51:8"
																},
																"nativeSrc": "19425:80:8",
																"nodeType": "YulFunctionCall",
																"src": "19425:80:8"
															},
															"nativeSrc": "19425:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "19425:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19526:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19526:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19537:2:8",
																				"nodeType": "YulLiteral",
																				"src": "19537:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19522:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19522:3:8"
																		},
																		"nativeSrc": "19522:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19522:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19546:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19546:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19552:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19552:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19542:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19542:3:8"
																		},
																		"nativeSrc": "19542:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19542:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19515:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19515:6:8"
																},
																"nativeSrc": "19515:48:8",
																"nodeType": "YulFunctionCall",
																"src": "19515:48:8"
															},
															"nativeSrc": "19515:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "19515:48:8"
														},
														{
															"nativeSrc": "19572:116:8",
															"nodeType": "YulAssignment",
															"src": "19572:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19674:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19674:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19683:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19683:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "19580:93:8",
																	"nodeType": "YulIdentifier",
																	"src": "19580:93:8"
																},
																"nativeSrc": "19580:108:8",
																"nodeType": "YulFunctionCall",
																"src": "19580:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19572:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19572:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19742:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19742:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19755:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19755:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19766:2:8",
																				"nodeType": "YulLiteral",
																				"src": "19766:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19751:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19751:3:8"
																		},
																		"nativeSrc": "19751:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19751:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19698:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19698:43:8"
																},
																"nativeSrc": "19698:72:8",
																"nodeType": "YulFunctionCall",
																"src": "19698:72:8"
															},
															"nativeSrc": "19698:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "19698:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "19824:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19824:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19837:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19837:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19848:3:8",
																				"nodeType": "YulLiteral",
																				"src": "19848:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19833:3:8"
																		},
																		"nativeSrc": "19833:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19833:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19780:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19780:43:8"
																},
																"nativeSrc": "19780:73:8",
																"nodeType": "YulFunctionCall",
																"src": "19780:73:8"
															},
															"nativeSrc": "19780:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "19780:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19029:831:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19237:9:8",
														"nodeType": "YulTypedName",
														"src": "19237:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "19249:6:8",
														"nodeType": "YulTypedName",
														"src": "19249:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19257:6:8",
														"nodeType": "YulTypedName",
														"src": "19257:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19265:6:8",
														"nodeType": "YulTypedName",
														"src": "19265:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19273:6:8",
														"nodeType": "YulTypedName",
														"src": "19273:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19281:6:8",
														"nodeType": "YulTypedName",
														"src": "19281:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19292:4:8",
														"nodeType": "YulTypedName",
														"src": "19292:4:8",
														"type": ""
													}
												],
												"src": "19029:831:8"
											},
											{
												"body": {
													"nativeSrc": "20120:553:8",
													"nodeType": "YulBlock",
													"src": "20120:553:8",
													"statements": [
														{
															"nativeSrc": "20130:27:8",
															"nodeType": "YulAssignment",
															"src": "20130:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20142:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20142:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20153:3:8",
																		"nodeType": "YulLiteral",
																		"src": "20153:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20138:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20138:3:8"
																},
																"nativeSrc": "20138:19:8",
																"nodeType": "YulFunctionCall",
																"src": "20138:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20130:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20130:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20211:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20211:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20224:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20224:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20235:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20235:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20220:3:8"
																		},
																		"nativeSrc": "20220:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20220:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20167:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20167:43:8"
																},
																"nativeSrc": "20167:71:8",
																"nodeType": "YulFunctionCall",
																"src": "20167:71:8"
															},
															"nativeSrc": "20167:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "20167:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20292:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20292:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20305:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20305:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20316:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20316:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20301:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20301:3:8"
																		},
																		"nativeSrc": "20301:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20301:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20248:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20248:43:8"
																},
																"nativeSrc": "20248:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20248:72:8"
															},
															"nativeSrc": "20248:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20248:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20382:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20382:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20395:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20395:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20406:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20406:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20391:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20391:3:8"
																		},
																		"nativeSrc": "20391:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20391:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "20330:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "20330:51:8"
																},
																"nativeSrc": "20330:80:8",
																"nodeType": "YulFunctionCall",
																"src": "20330:80:8"
															},
															"nativeSrc": "20330:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "20330:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20472:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20472:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20485:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20485:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20496:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20496:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20481:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20481:3:8"
																		},
																		"nativeSrc": "20481:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20481:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "20420:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "20420:51:8"
																},
																"nativeSrc": "20420:80:8",
																"nodeType": "YulFunctionCall",
																"src": "20420:80:8"
															},
															"nativeSrc": "20420:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "20420:80:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "20554:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20554:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20567:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20567:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20578:3:8",
																				"nodeType": "YulLiteral",
																				"src": "20578:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20563:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20563:3:8"
																		},
																		"nativeSrc": "20563:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20563:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20510:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20510:43:8"
																},
																"nativeSrc": "20510:73:8",
																"nodeType": "YulFunctionCall",
																"src": "20510:73:8"
															},
															"nativeSrc": "20510:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "20510:73:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "20637:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20637:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20650:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20650:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20661:3:8",
																				"nodeType": "YulLiteral",
																				"src": "20661:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20646:3:8"
																		},
																		"nativeSrc": "20646:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20646:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20593:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20593:43:8"
																},
																"nativeSrc": "20593:73:8",
																"nodeType": "YulFunctionCall",
																"src": "20593:73:8"
															},
															"nativeSrc": "20593:73:8",
															"nodeType": "YulExpressionStatement",
															"src": "20593:73:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19866:807:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20052:9:8",
														"nodeType": "YulTypedName",
														"src": "20052:9:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "20064:6:8",
														"nodeType": "YulTypedName",
														"src": "20064:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20072:6:8",
														"nodeType": "YulTypedName",
														"src": "20072:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20080:6:8",
														"nodeType": "YulTypedName",
														"src": "20080:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20088:6:8",
														"nodeType": "YulTypedName",
														"src": "20088:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20096:6:8",
														"nodeType": "YulTypedName",
														"src": "20096:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20104:6:8",
														"nodeType": "YulTypedName",
														"src": "20104:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20115:4:8",
														"nodeType": "YulTypedName",
														"src": "20115:4:8",
														"type": ""
													}
												],
												"src": "19866:807:8"
											},
											{
												"body": {
													"nativeSrc": "20790:552:8",
													"nodeType": "YulBlock",
													"src": "20790:552:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "20836:83:8",
																"nodeType": "YulBlock",
																"src": "20836:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20838:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "20838:77:8"
																			},
																			"nativeSrc": "20838:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "20838:79:8"
																		},
																		"nativeSrc": "20838:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "20838:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20811:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "20811:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20820:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20820:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20807:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20807:3:8"
																		},
																		"nativeSrc": "20807:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20807:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20832:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20832:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20803:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20803:3:8"
																},
																"nativeSrc": "20803:32:8",
																"nodeType": "YulFunctionCall",
																"src": "20803:32:8"
															},
															"nativeSrc": "20800:119:8",
															"nodeType": "YulIf",
															"src": "20800:119:8"
														},
														{
															"nativeSrc": "20929:128:8",
															"nodeType": "YulBlock",
															"src": "20929:128:8",
															"statements": [
																{
																	"nativeSrc": "20944:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20944:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20958:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20958:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20948:6:8",
																			"nodeType": "YulTypedName",
																			"src": "20948:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20973:74:8",
																	"nodeType": "YulAssignment",
																	"src": "20973:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21019:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "21019:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21030:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "21030:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21015:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "21015:3:8"
																				},
																				"nativeSrc": "21015:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "21015:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21039:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "21039:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "20983:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "20983:31:8"
																		},
																		"nativeSrc": "20983:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20983:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20973:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "20973:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21067:129:8",
															"nodeType": "YulBlock",
															"src": "21067:129:8",
															"statements": [
																{
																	"nativeSrc": "21082:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21082:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21096:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21096:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21086:6:8",
																			"nodeType": "YulTypedName",
																			"src": "21086:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21112:74:8",
																	"nodeType": "YulAssignment",
																	"src": "21112:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21158:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "21158:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21169:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "21169:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21154:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "21154:3:8"
																				},
																				"nativeSrc": "21154:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "21154:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21178:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "21178:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21122:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "21122:31:8"
																		},
																		"nativeSrc": "21122:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21122:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "21112:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "21112:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21206:129:8",
															"nodeType": "YulBlock",
															"src": "21206:129:8",
															"statements": [
																{
																	"nativeSrc": "21221:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21221:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21235:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21235:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21225:6:8",
																			"nodeType": "YulTypedName",
																			"src": "21225:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21251:74:8",
																	"nodeType": "YulAssignment",
																	"src": "21251:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21297:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "21297:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21308:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "21308:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21293:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "21293:3:8"
																				},
																				"nativeSrc": "21293:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "21293:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21317:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "21317:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21261:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "21261:31:8"
																		},
																		"nativeSrc": "21261:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21261:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "21251:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "21251:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "20679:663:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20744:9:8",
														"nodeType": "YulTypedName",
														"src": "20744:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20755:7:8",
														"nodeType": "YulTypedName",
														"src": "20755:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20767:6:8",
														"nodeType": "YulTypedName",
														"src": "20767:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20775:6:8",
														"nodeType": "YulTypedName",
														"src": "20775:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20783:6:8",
														"nodeType": "YulTypedName",
														"src": "20783:6:8",
														"type": ""
													}
												],
												"src": "20679:663:8"
											},
											{
												"body": {
													"nativeSrc": "21502:288:8",
													"nodeType": "YulBlock",
													"src": "21502:288:8",
													"statements": [
														{
															"nativeSrc": "21512:26:8",
															"nodeType": "YulAssignment",
															"src": "21512:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21524:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "21524:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21535:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21535:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21520:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21520:3:8"
																},
																"nativeSrc": "21520:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21520:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21512:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21512:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21592:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21592:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21605:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21605:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21616:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21616:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21601:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21601:3:8"
																		},
																		"nativeSrc": "21601:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21601:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21548:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "21548:43:8"
																},
																"nativeSrc": "21548:71:8",
																"nodeType": "YulFunctionCall",
																"src": "21548:71:8"
															},
															"nativeSrc": "21548:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "21548:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21673:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21673:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21686:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21686:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21697:2:8",
																				"nodeType": "YulLiteral",
																				"src": "21697:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21682:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21682:3:8"
																		},
																		"nativeSrc": "21682:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21682:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21629:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "21629:43:8"
																},
																"nativeSrc": "21629:72:8",
																"nodeType": "YulFunctionCall",
																"src": "21629:72:8"
															},
															"nativeSrc": "21629:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "21629:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21755:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21755:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21768:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21768:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21779:2:8",
																				"nodeType": "YulLiteral",
																				"src": "21779:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21764:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21764:3:8"
																		},
																		"nativeSrc": "21764:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21764:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21711:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "21711:43:8"
																},
																"nativeSrc": "21711:72:8",
																"nodeType": "YulFunctionCall",
																"src": "21711:72:8"
															},
															"nativeSrc": "21711:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "21711:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21348:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21458:9:8",
														"nodeType": "YulTypedName",
														"src": "21458:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21470:6:8",
														"nodeType": "YulTypedName",
														"src": "21470:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21478:6:8",
														"nodeType": "YulTypedName",
														"src": "21478:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21486:6:8",
														"nodeType": "YulTypedName",
														"src": "21486:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21497:4:8",
														"nodeType": "YulTypedName",
														"src": "21497:4:8",
														"type": ""
													}
												],
												"src": "21348:442:8"
											},
											{
												"body": {
													"nativeSrc": "21840:147:8",
													"nodeType": "YulBlock",
													"src": "21840:147:8",
													"statements": [
														{
															"nativeSrc": "21850:25:8",
															"nodeType": "YulAssignment",
															"src": "21850:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21873:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21873:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21855:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21855:17:8"
																},
																"nativeSrc": "21855:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21855:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21850:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21850:1:8"
																}
															]
														},
														{
															"nativeSrc": "21884:25:8",
															"nodeType": "YulAssignment",
															"src": "21884:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21907:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21907:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21889:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "21889:17:8"
																},
																"nativeSrc": "21889:20:8",
																"nodeType": "YulFunctionCall",
																"src": "21889:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21884:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "21884:1:8"
																}
															]
														},
														{
															"nativeSrc": "21918:16:8",
															"nodeType": "YulAssignment",
															"src": "21918:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21929:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21929:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21932:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21932:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21925:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21925:3:8"
																},
																"nativeSrc": "21925:9:8",
																"nodeType": "YulFunctionCall",
																"src": "21925:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21918:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21918:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21958:22:8",
																"nodeType": "YulBlock",
																"src": "21958:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21960:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "21960:16:8"
																			},
																			"nativeSrc": "21960:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21960:18:8"
																		},
																		"nativeSrc": "21960:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "21960:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21950:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "21950:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21953:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21953:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21947:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "21947:2:8"
																},
																"nativeSrc": "21947:10:8",
																"nodeType": "YulFunctionCall",
																"src": "21947:10:8"
															},
															"nativeSrc": "21944:36:8",
															"nodeType": "YulIf",
															"src": "21944:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21796:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21827:1:8",
														"nodeType": "YulTypedName",
														"src": "21827:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21830:1:8",
														"nodeType": "YulTypedName",
														"src": "21830:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21836:3:8",
														"nodeType": "YulTypedName",
														"src": "21836:3:8",
														"type": ""
													}
												],
												"src": "21796:191:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPancakeRouter_$1049_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPancakeRouter_$1049_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPancakeRouter_$1049_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPancakeRouter_$1049__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPancakeRouter_$1049_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot withdraw ATC\")\n\n    }\n\n    function abi_encode_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trading not enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101db575f3560e01c806370a0823111610101578063a3342fba11610094578063d862686b11610063578063d862686b1461067e578063dd62ed3e146106a8578063f2fde38b146106e4578063f887ea401461070c576101e2565b8063a3342fba146105c6578063a8aa1b31146105f0578063a9059cbb1461061a578063cb96372814610656576101e2565b80638da5cb5b116100d05780638da5cb5b146105205780638ea5220f1461054a57806395d89b41146105745780639d0014b11461059e576101e2565b806370a082311461048e578063715018a6146104ca57806375f0a874146104e05780638a8c523c1461050a576101e2565b80631de3b450116101795780635342acb4116101485780635342acb4146103d657806354ad8aee146104125780636612e66f1461043c578063665c6de914610464576101e2565b80631de3b4501461031c57806323b872dd14610346578063313ce567146103825780634ada218b146103ac576101e2565b8063095ea7b3116101b5578063095ea7b314610264578063147c9f6d146102a057806318160ddd146102c85780631d2cb02d146102f2576101e2565b806302af37bb146101e65780630445b6671461021057806306fdde031461023a576101e2565b366101e257005b5f80fd5b3480156101f1575f80fd5b506101fa610736565b6040516102079190611f32565b60405180910390f35b34801561021b575f80fd5b5061022461073c565b6040516102319190611f32565b60405180910390f35b348015610245575f80fd5b5061024e610742565b60405161025b9190611fd5565b60405180910390f35b34801561026f575f80fd5b5061028a6004803603810190610285919061207d565b6107d2565b60405161029791906120d5565b60405180910390f35b3480156102ab575f80fd5b506102c660048036038101906102c191906120ee565b6107f4565b005b3480156102d3575f80fd5b506102dc610a23565b6040516102e99190611f32565b60405180910390f35b3480156102fd575f80fd5b50610306610a2c565b6040516103139190611f32565b60405180910390f35b348015610327575f80fd5b50610330610a32565b60405161033d9190611f32565b60405180910390f35b348015610351575f80fd5b5061036c6004803603810190610367919061213e565b610a38565b60405161037991906120d5565b60405180910390f35b34801561038d575f80fd5b50610396610a66565b6040516103a391906121a9565b60405180910390f35b3480156103b7575f80fd5b506103c0610a6e565b6040516103cd91906120d5565b60405180910390f35b3480156103e1575f80fd5b506103fc60048036038101906103f791906121c2565b610a81565b60405161040991906120d5565b60405180910390f35b34801561041d575f80fd5b50610426610a9e565b6040516104339190611f32565b60405180910390f35b348015610447575f80fd5b50610462600480360381019061045d9190612217565b610aa4565b005b34801561046f575f80fd5b50610478610b04565b6040516104859190611f32565b60405180910390f35b348015610499575f80fd5b506104b460048036038101906104af91906121c2565b610b0a565b6040516104c19190611f32565b60405180910390f35b3480156104d5575f80fd5b506104de610b4f565b005b3480156104eb575f80fd5b506104f4610b62565b6040516105019190612264565b60405180910390f35b348015610515575f80fd5b5061051e610b87565b005b34801561052b575f80fd5b50610534610bac565b6040516105419190612264565b60405180910390f35b348015610555575f80fd5b5061055e610bd4565b60405161056b9190612264565b60405180910390f35b34801561057f575f80fd5b50610588610bf9565b6040516105959190611fd5565b60405180910390f35b3480156105a9575f80fd5b506105c460048036038101906105bf919061227d565b610c89565b005b3480156105d1575f80fd5b506105da610c9b565b6040516105e79190612264565b60405180910390f35b3480156105fb575f80fd5b50610604610cc0565b6040516106119190612264565b60405180910390f35b348015610625575f80fd5b50610640600480360381019061063b919061207d565b610ce5565b60405161064d91906120d5565b60405180910390f35b348015610661575f80fd5b5061067c600480360381019061067791906121c2565b610d02565b005b348015610689575f80fd5b50610692610e6e565b60405161069f9190611f32565b60405180910390f35b3480156106b3575f80fd5b506106ce60048036038101906106c991906122a8565b610e74565b6040516106db9190611f32565b60405180910390f35b3480156106ef575f80fd5b5061070a600480360381019061070591906121c2565b610ef6565b005b348015610717575f80fd5b50610720610f7a565b60405161072d9190612341565b60405180910390f35b6109c481565b60105481565b60606003805461075190612387565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90612387565b80156107c85780601f1061079f576101008083540402835291602001916107c8565b820191905f5260205f20905b8154815290600101906020018083116107ab57829003601f168201915b5050505050905090565b5f806107dc610f9f565b90506107e9818585610fa6565b600191505092915050565b6107fc610fb8565b82600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600e5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160125f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160125f600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b5f600254905090565b600c5481565b60095481565b5f80610a42610f9f565b9050610a4f85828561103f565b610a5a8585856110d2565b60019150509392505050565b5f6012905090565b601160019054906101000a900460ff1681565b6012602052805f5260405f205f915054906101000a900460ff1681565b6109c481565b610aac610fb8565b8060125f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b600a5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b57610fb8565b610b605f611569565b565b600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b8f610fb8565b6001601160016101000a81548160ff021916908315150217905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060048054610c0890612387565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3490612387565b8015610c7f5780601f10610c5657610100808354040283529160200191610c7f565b820191905f5260205f20905b815481529060010190602001808311610c6257829003601f168201915b5050505050905090565b610c91610fb8565b8060108190555050565b600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610cf8610cf1610f9f565b84846110d2565b6001905092915050565b610d0a610fb8565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6f90612401565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dce9190612264565b602060405180830381865afa158015610de9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e0d9190612433565b6040518363ffffffff1660e01b8152600401610e2a92919061245e565b6020604051808303815f875af1158015610e46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6a9190612499565b5050565b600b5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610efe610fb8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f6e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f659190612264565b60405180910390fd5b610f7781611569565b50565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f33905090565b610fb3838383600161162c565b505050565b610fc0610f9f565b73ffffffffffffffffffffffffffffffffffffffff16610fde610bac565b73ffffffffffffffffffffffffffffffffffffffff161461103d57611001610f9f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110349190612264565b60405180910390fd5b565b5f61104a8484610e74565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110cc57818110156110bd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110b4939291906124c4565b60405180910390fd5b6110cb84848484035f61162c565b5b50505050565b6110da6117fb565b5f811161111c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111390612569565b60405180910390fd5b601160019054906101000a900460ff168061117d575060125f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b806111ce575060125f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61120d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611204906125d1565b60405180910390fd5b5f60125f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161580156112ac575060125f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b156115505760085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611327576127106109c483611316919061261c565b611320919061268a565b905061139a565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611399576127106109c48361138c919061261c565b611396919061268a565b90505b5b5f81111561154f575f6109c4600954836113b4919061261c565b6113be919061268a565b90505f6109c4600a54846113d2919061261c565b6113dc919061268a565b90505f6109c4600b54856113f0919061261c565b6113fa919061268a565b90505f8183858761140b91906126ba565b61141591906126ba565b61141f91906126ba565b905061142c88308661184a565b61145888600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561184a565b61148488600e5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461184a565b6114b088600f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361184a565b84866114bc91906126ba565b955060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16148015611524575060105461152130610b0a565b10155b801561153c575060115f9054906101000a900460ff16155b1561154a5761154961193a565b5b505050505b5b61155b84848461184a565b50611564611cf7565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361169c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016116939190612264565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361170c575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016117039190612264565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156117f5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117ec9190611f32565b60405180910390a35b50505050565b600260065403611840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183790612737565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118ba575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016118b19190612264565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361192a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119219190612264565b60405180910390fd5b611935838383611d01565b505050565b600160115f6101000a81548160ff0219169083151502179055505f61195e30610b0a565b90505f60028261196e919061268a565b90505f818361197d91906126ba565b90505f600267ffffffffffffffff81111561199b5761199a612755565b5b6040519080825280602002602001820160405280156119c95781602001602082028036833780820191505090505b50905030815f815181106119e0576119df612782565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a84573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611aa891906127c3565b81600181518110611abc57611abb612782565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505f479050611b263060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610fa6565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663791ac947855f8530426040518663ffffffff1660e01b8152600401611b889594939291906128de565b5f604051808303815f87803b158015611b9f575f80fd5b505af1158015611bb1573d5f803e3d5ffd5b505050505f8147611bc291906126ba565b9050611bf03060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686610fa6565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7198230875f8061dead426040518863ffffffff1660e01b8152600401611c5796959493929190612936565b60606040518083038185885af1158015611c73573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611c989190612995565b5050507f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561858286604051611cce939291906129e5565b60405180910390a15f60115f6101000a81548160ff021916908315150217905550505050505050565b6001600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d51578060025f828254611d459190612a1a565b92505081905550611e1f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611dda578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611dd1939291906124c4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e66578060025f8282540392505081905550611eb0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611f0d9190611f32565b60405180910390a3505050565b5f819050919050565b611f2c81611f1a565b82525050565b5f602082019050611f455f830184611f23565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611f82578082015181840152602081019050611f67565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611fa782611f4b565b611fb18185611f55565b9350611fc1818560208601611f65565b611fca81611f8d565b840191505092915050565b5f6020820190508181035f830152611fed8184611f9d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61202282611ff9565b9050919050565b61203281612018565b811461203c575f80fd5b50565b5f8135905061204d81612029565b92915050565b61205c81611f1a565b8114612066575f80fd5b50565b5f8135905061207781612053565b92915050565b5f806040838503121561209357612092611ff5565b5b5f6120a08582860161203f565b92505060206120b185828601612069565b9150509250929050565b5f8115159050919050565b6120cf816120bb565b82525050565b5f6020820190506120e85f8301846120c6565b92915050565b5f805f6060848603121561210557612104611ff5565b5b5f6121128682870161203f565b93505060206121238682870161203f565b92505060406121348682870161203f565b9150509250925092565b5f805f6060848603121561215557612154611ff5565b5b5f6121628682870161203f565b93505060206121738682870161203f565b925050604061218486828701612069565b9150509250925092565b5f60ff82169050919050565b6121a38161218e565b82525050565b5f6020820190506121bc5f83018461219a565b92915050565b5f602082840312156121d7576121d6611ff5565b5b5f6121e48482850161203f565b91505092915050565b6121f6816120bb565b8114612200575f80fd5b50565b5f81359050612211816121ed565b92915050565b5f806040838503121561222d5761222c611ff5565b5b5f61223a8582860161203f565b925050602061224b85828601612203565b9150509250929050565b61225e81612018565b82525050565b5f6020820190506122775f830184612255565b92915050565b5f6020828403121561229257612291611ff5565b5b5f61229f84828501612069565b91505092915050565b5f80604083850312156122be576122bd611ff5565b5b5f6122cb8582860161203f565b92505060206122dc8582860161203f565b9150509250929050565b5f819050919050565b5f6123096123046122ff84611ff9565b6122e6565b611ff9565b9050919050565b5f61231a826122ef565b9050919050565b5f61232b82612310565b9050919050565b61233b81612321565b82525050565b5f6020820190506123545f830184612332565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061239e57607f821691505b6020821081036123b1576123b061235a565b5b50919050565b7f43616e6e6f7420776974686472617720415443000000000000000000000000005f82015250565b5f6123eb601383611f55565b91506123f6826123b7565b602082019050919050565b5f6020820190508181035f830152612418816123df565b9050919050565b5f8151905061242d81612053565b92915050565b5f6020828403121561244857612447611ff5565b5b5f6124558482850161241f565b91505092915050565b5f6040820190506124715f830185612255565b61247e6020830184611f23565b9392505050565b5f81519050612493816121ed565b92915050565b5f602082840312156124ae576124ad611ff5565b5b5f6124bb84828501612485565b91505092915050565b5f6060820190506124d75f830186612255565b6124e46020830185611f23565b6124f16040830184611f23565b949350505050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f612553602983611f55565b915061255e826124f9565b604082019050919050565b5f6020820190508181035f83015261258081612547565b9050919050565b7f54726164696e67206e6f7420656e61626c6564000000000000000000000000005f82015250565b5f6125bb601383611f55565b91506125c682612587565b602082019050919050565b5f6020820190508181035f8301526125e8816125af565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61262682611f1a565b915061263183611f1a565b925082820261263f81611f1a565b91508282048414831517612656576126556125ef565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61269482611f1a565b915061269f83611f1a565b9250826126af576126ae61265d565b5b828204905092915050565b5f6126c482611f1a565b91506126cf83611f1a565b92508282039050818111156126e7576126e66125ef565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612721601f83611f55565b915061272c826126ed565b602082019050919050565b5f6020820190508181035f83015261274e81612715565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f815190506127bd81612029565b92915050565b5f602082840312156127d8576127d7611ff5565b5b5f6127e5848285016127af565b91505092915050565b5f819050919050565b5f61281161280c612807846127ee565b6122e6565b611f1a565b9050919050565b612821816127f7565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61285981612018565b82525050565b5f61286a8383612850565b60208301905092915050565b5f602082019050919050565b5f61288c82612827565b6128968185612831565b93506128a183612841565b805f5b838110156128d15781516128b8888261285f565b97506128c383612876565b9250506001810190506128a4565b5085935050505092915050565b5f60a0820190506128f15f830188611f23565b6128fe6020830187612818565b81810360408301526129108186612882565b905061291f6060830185612255565b61292c6080830184611f23565b9695505050505050565b5f60c0820190506129495f830189612255565b6129566020830188611f23565b6129636040830187612818565b6129706060830186612818565b61297d6080830185612255565b61298a60a0830184611f23565b979650505050505050565b5f805f606084860312156129ac576129ab611ff5565b5b5f6129b98682870161241f565b93505060206129ca8682870161241f565b92505060406129db8682870161241f565b9150509250925092565b5f6060820190506129f85f830186611f23565b612a056020830185611f23565b612a126040830184611f23565b949350505050565b5f612a2482611f1a565b9150612a2f83611f1a565b9250828201905080821115612a4757612a466125ef565b5b9291505056fea26469706673582212200a4d0349d9a94e3d9bb2f933fd2387c37298fc04e09197c88ec59a1efa477c7064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xA3342FBA GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xD862686B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD862686B EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x70C JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0xA3342FBA EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xA8AA1B31 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xCB963728 EQ PUSH2 0x656 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x9D0014B1 EQ PUSH2 0x59E JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x50A JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x1DE3B450 GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x5342ACB4 GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x54AD8AEE EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x6612E66F EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x665C6DE9 EQ PUSH2 0x464 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x1DE3B450 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x3AC JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x147C9F6D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x1D2CB02D EQ PUSH2 0x2F2 JUMPI PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH4 0x2AF37BB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x445B667 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23A JUMPI PUSH2 0x1E2 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1E2 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x330 PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x213E JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x396 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DE PUSH2 0xB4F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51E PUSH2 0xB87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x534 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55E PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x588 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DA PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x625 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x67C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x689 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x692 PUSH2 0xE6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x717 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x720 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77D SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7DC PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP PUSH2 0x7E9 DUP2 DUP6 DUP6 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FC PUSH2 0xFB8 JUMP JUMPDEST DUP3 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA42 PUSH2 0xF9F JUMP JUMPDEST SWAP1 POP PUSH2 0xA4F DUP6 DUP3 DUP6 PUSH2 0x103F JUMP JUMPDEST PUSH2 0xA5A DUP6 DUP6 DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9C4 DUP2 JUMP JUMPDEST PUSH2 0xAAC PUSH2 0xFB8 JUMP JUMPDEST DUP1 PUSH1 0x12 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB57 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0xB60 PUSH0 PUSH2 0x1569 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB8F PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC08 SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC34 SWAP1 PUSH2 0x2387 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC7F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC7F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC62 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC91 PUSH2 0xFB8 JUMP JUMPDEST DUP1 PUSH1 0x10 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xCF8 PUSH2 0xCF1 PUSH2 0xF9F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD0A PUSH2 0xFB8 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6F SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE0D SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2A SWAP3 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x2499 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEFE PUSH2 0xFB8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF77 DUP2 PUSH2 0x1569 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFB3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x162C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFC0 PUSH2 0xF9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDE PUSH2 0xBAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103D JUMPI PUSH2 0x1001 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP5 DUP5 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x10CC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x162C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x10DA PUSH2 0x17FB JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1113 SWAP1 PUSH2 0x2569 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x117D JUMPI POP PUSH1 0x12 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x11CE JUMPI POP PUSH1 0x12 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x120D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1204 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI POP PUSH1 0x12 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1550 JUMPI PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1327 JUMPI PUSH2 0x2710 PUSH2 0x9C4 DUP4 PUSH2 0x1316 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH2 0x139A JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1399 JUMPI PUSH2 0x2710 PUSH2 0x9C4 DUP4 PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x154F JUMPI PUSH0 PUSH2 0x9C4 PUSH1 0x9 SLOAD DUP4 PUSH2 0x13B4 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x13BE SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C4 PUSH1 0xA SLOAD DUP5 PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C4 PUSH1 0xB SLOAD DUP6 PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x261C JUMP JUMPDEST PUSH2 0x13FA SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 DUP8 PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH2 0x142C DUP9 ADDRESS DUP7 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1458 DUP9 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1484 DUP9 PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x14B0 DUP9 PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x184A JUMP JUMPDEST DUP5 DUP7 PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP6 POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1524 JUMPI POP PUSH1 0x10 SLOAD PUSH2 0x1521 ADDRESS PUSH2 0xB0A JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x153C JUMPI POP PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x154A JUMPI PUSH2 0x1549 PUSH2 0x193A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMPDEST JUMPDEST PUSH2 0x155B DUP5 DUP5 DUP5 PUSH2 0x184A JUMP JUMPDEST POP PUSH2 0x1564 PUSH2 0x1CF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x170C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x17F5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17EC SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1840 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1837 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x192A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1921 SWAP2 SWAP1 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1935 DUP4 DUP4 DUP4 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x195E ADDRESS PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 DUP3 PUSH2 0x196E SWAP2 SWAP1 PUSH2 0x268A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x2755 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19C9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP ADDRESS DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x19E0 JUMPI PUSH2 0x19DF PUSH2 0x2782 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A84 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x2782 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x1B26 ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x791AC947 DUP6 PUSH0 DUP6 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B88 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28DE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP2 SELFBALANCE PUSH2 0x1BC2 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF0 ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 DUP3 ADDRESS DUP8 PUSH0 DUP1 PUSH2 0xDEAD TIMESTAMP PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C57 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C73 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x2995 JUMP JUMPDEST POP POP POP PUSH32 0x17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561 DUP6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1CCE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D51 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D45 SWAP2 SWAP1 PUSH2 0x2A1A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E1F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1DDA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E66 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EB0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F0D SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2C DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F45 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F82 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F67 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA7 DUP3 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1FB1 DUP2 DUP6 PUSH2 0x1F55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1F8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FED DUP2 DUP5 PUSH2 0x1F9D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2022 DUP3 PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2032 DUP2 PUSH2 0x2018 JUMP JUMPDEST DUP2 EQ PUSH2 0x203C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204D DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x1F1A JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2077 DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A0 DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B1 DUP6 DUP3 DUP7 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CF DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2104 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2112 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2123 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2134 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2162 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2173 DUP7 DUP3 DUP8 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2184 DUP7 DUP3 DUP8 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A3 DUP2 PUSH2 0x218E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21BC PUSH0 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E4 DUP5 DUP3 DUP6 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F6 DUP2 PUSH2 0x20BB JUMP JUMPDEST DUP2 EQ PUSH2 0x2200 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2211 DUP2 PUSH2 0x21ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x222D JUMPI PUSH2 0x222C PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x223A DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x224B DUP6 DUP3 DUP7 ADD PUSH2 0x2203 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x225E DUP2 PUSH2 0x2018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2277 PUSH0 DUP4 ADD DUP5 PUSH2 0x2255 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2292 JUMPI PUSH2 0x2291 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x229F DUP5 DUP3 DUP6 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22BE JUMPI PUSH2 0x22BD PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22CB DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22DC DUP6 DUP3 DUP7 ADD PUSH2 0x203F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2309 PUSH2 0x2304 PUSH2 0x22FF DUP5 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x22E6 JUMP JUMPDEST PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x231A DUP3 PUSH2 0x22EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x232B DUP3 PUSH2 0x2310 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x233B DUP2 PUSH2 0x2321 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2354 PUSH0 DUP4 ADD DUP5 PUSH2 0x2332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x239E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x235A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742077697468647261772041544300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23EB PUSH1 0x13 DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x23F6 DUP3 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2418 DUP2 PUSH2 0x23DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x242D DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2448 JUMPI PUSH2 0x2447 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2455 DUP5 DUP3 DUP6 ADD PUSH2 0x241F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2471 PUSH0 DUP4 ADD DUP6 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x247E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2493 DUP2 PUSH2 0x21ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24AE JUMPI PUSH2 0x24AD PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24BB DUP5 DUP3 DUP6 ADD PUSH2 0x2485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24D7 PUSH0 DUP4 ADD DUP7 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x24E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x24F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2553 PUSH1 0x29 DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x255E DUP3 PUSH2 0x24F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2580 DUP2 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206E6F7420656E61626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25BB PUSH1 0x13 DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C6 DUP3 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E8 DUP2 PUSH2 0x25AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2626 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2631 DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x263F DUP2 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2656 JUMPI PUSH2 0x2655 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2694 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x269F DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26AF JUMPI PUSH2 0x26AE PUSH2 0x265D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26C4 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x26CF DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x26E7 JUMPI PUSH2 0x26E6 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2721 PUSH1 0x1F DUP4 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH2 0x272C DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x274E DUP2 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27BD DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D8 JUMPI PUSH2 0x27D7 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E5 DUP5 DUP3 DUP6 ADD PUSH2 0x27AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2811 PUSH2 0x280C PUSH2 0x2807 DUP5 PUSH2 0x27EE JUMP JUMPDEST PUSH2 0x22E6 JUMP JUMPDEST PUSH2 0x1F1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2821 DUP2 PUSH2 0x27F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2859 DUP2 PUSH2 0x2018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x286A DUP4 DUP4 PUSH2 0x2850 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x288C DUP3 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x2896 DUP2 DUP6 PUSH2 0x2831 JUMP JUMPDEST SWAP4 POP PUSH2 0x28A1 DUP4 PUSH2 0x2841 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D1 JUMPI DUP2 MLOAD PUSH2 0x28B8 DUP9 DUP3 PUSH2 0x285F JUMP JUMPDEST SWAP8 POP PUSH2 0x28C3 DUP4 PUSH2 0x2876 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x28A4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x28F1 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x28FE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2818 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2910 DUP2 DUP7 PUSH2 0x2882 JUMP JUMPDEST SWAP1 POP PUSH2 0x291F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x292C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2949 PUSH0 DUP4 ADD DUP10 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x2956 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2963 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2818 JUMP JUMPDEST PUSH2 0x2970 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2818 JUMP JUMPDEST PUSH2 0x297D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x298A PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29AC JUMPI PUSH2 0x29AB PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B9 DUP7 DUP3 DUP8 ADD PUSH2 0x241F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29CA DUP7 DUP3 DUP8 ADD PUSH2 0x241F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29DB DUP7 DUP3 DUP8 ADD PUSH2 0x241F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29F8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2A05 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2A12 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A24 DUP3 PUSH2 0x1F1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2F DUP4 PUSH2 0x1F1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A47 JUMPI PUSH2 0x2A46 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0x4D SUB BLOBHASH 0xD9 0xA9 0x4E RETURNDATASIZE SWAP12 0xB2 0xF9 CALLER REVERT 0x23 DUP8 0xC3 PUSH19 0x98FC04E09197C88EC59A1EFA477C7064736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "931:5835:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1078:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1597:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5920:340:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:97:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1408:33:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1260:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2925:274;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:26:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1732:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1129:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6266:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1309:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1539:30:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5832:82;;;;;;;;;;;;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1476:24:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6405:100:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1506:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1019:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2749:170;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6511:218;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1359:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;985:28:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1078:38;1112:4;1078:38;:::o;1597:46::-;;;;:::o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;5920:340:7:-;1531:13:0;:11;:13::i;:::-;6035:4:7::1;6023:9;;:16;;;;;;;;;;;;;;;;;;6064:7;6049:12;;:22;;;;;;;;;;;;;;;;;;6099:10;6081:15;;:28;;;;;;;;;;;;;;;;;;6150:4;6119:17;:28;6137:9;;;;;;;;;;;6119:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;6198:4;6164:17;:31;6182:12;;;;;;;;;;;6164:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;6249:4;6212:17;:34;6230:15;;;;;;;;;;;6212:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;5920:340:::0;;;:::o;2830:97:3:-;2882:7;2908:12;;2901:19;;2830:97;:::o;1408:33:7:-;;;;:::o;1260:26::-;;;;:::o;2925:274::-;3023:4;3039:15;3057:12;:10;:12::i;:::-;3039:30;;3079:40;3095:6;3103:7;3112:6;3079:15;:40::i;:::-;3129:42;3145:6;3153:9;3164:6;3129:15;:42::i;:::-;3188:4;3181:11;;;2925:274;;;;;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;1700:26:7:-;;;;;;;;;;;;;:::o;1732:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;1129:39::-;1164:4;1129:39;:::o;6266:133::-;1531:13:0;:11;:13::i;:::-;6384:8:7::1;6355:17;:26;6373:7;6355:26;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6266:133:::0;;:::o;1309:28::-;;;;:::o;2985:116:3:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1539:30:7:-;;;;;;;;;;;;;:::o;5832:82::-;1531:13:0;:11;:13::i;:::-;5903:4:7::1;5886:14;;:21;;;;;;;;;;;;;;;;;;5832:82::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1476:24:7:-;;;;;;;;;;;;;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;6405:100:7:-;1531:13:0;:11;:13::i;:::-;6492:6:7::1;6476:13;:22;;;;6405:100:::0;:::o;1506:27::-;;;;;;;;;;;;;:::o;1019:19::-;;;;;;;;;;;;;:::o;2749:170::-;2827:4;2843:48;2859:12;:10;:12::i;:::-;2873:9;2884:6;2843:15;:48::i;:::-;2908:4;2901:11;;2749:170;;;;:::o;6511:218::-;1531:13:0;:11;:13::i;:::-;6609:4:7::1;6592:22;;:5;:22;;::::0;6584:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;6655:5;6648:22;;;6671:10;6690:5;6683:23;;;6715:4;6683:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6648:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6511:218:::0;:::o;1359:30::-;;;;:::o;3532:140:3:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;985:28:7:-;;;;;;;;;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10396:476:3:-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;3205:1532:7:-;2261:21:2;:19;:21::i;:::-;3330:1:7::1;3321:6;:10;3313:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3395:14;;;;;;;;;;;:43;;;;3413:17;:25;3431:6;3413:25;;;;;;;;;;;;;;;;;;;;;;;;;3395:43;:75;;;;3442:17;:28;3460:9;3442:28;;;;;;;;;;;;;;;;;;;;;;;;;3395:75;3387:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;3505:17;3541;:25;3559:6;3541:25;;;;;;;;;;;;;;;;;;;;;;;;;3540:26;:59;;;;;3571:17;:28;3589:9;3571:28;;;;;;;;;;;;;;;;;;;;;;;;;3570:29;3540:59;3537:1141;;;3631:4;;;;;;;;;;;3618:17;;:9;:17;;::::0;3615:225:::1;;1224:5;1164:4;3676:6;:17;;;;:::i;:::-;3675:37;;;;:::i;:::-;3663:49;;3615:225;;;3746:4;;;;;;;;;;;3736:14;;:6;:14;;::::0;3733:107:::1;;1224:5;1112:4;3790:6;:16;;;;:::i;:::-;3789:36;;;;:::i;:::-;3777:48;;3733:107;3615:225;3881:1;3869:9;:13;3866:802;;;3902:16;1164:4;3934:5;;3922:9;:17;;;;:::i;:::-;3921:30;;;;:::i;:::-;3902:49;;3969:17;1164:4;4002:6;;3990:9;:18;;;;:::i;:::-;3989:31;;;;:::i;:::-;3969:51;;4038:20;1164:4;4074:9;;4062;:21;;;;:::i;:::-;4061:34;;;;:::i;:::-;4038:57;;4113:23;4174:12;4162:9;4151:8;4139:9;:20;;;;:::i;:::-;:32;;;;:::i;:::-;:47;;;;:::i;:::-;4113:73;;4205:48;4221:6;4237:4;4244:8;4205:15;:48::i;:::-;4271:45;4287:6;4295:9;;;;;;;;;;;4306;4271:15;:45::i;:::-;4334:51;4350:6;4358:12;;;;;;;;;;;4372;4334:15;:51::i;:::-;4403:57;4419:6;4427:15;;;;;;;;;;;4444;4403;:57::i;:::-;4489:9;4479:19;;;;;:::i;:::-;;;4533:4;;;;;;;;;;;4520:17;;:9;:17;;;:62;;;;;4569:13;;4541:24;4559:4;4541:9;:24::i;:::-;:41;;4520:62;:75;;;;;4587:8;;;;;;;;;;;4586:9;4520:75;4517:137;;;4619:16;:14;:16::i;:::-;4517:137;3884:784;;;;3866:802;3537:1141;4688:42;4704:6;4712:9;4723:6;4688:15;:42::i;:::-;3303:1434;2303:20:2::0;:18;:20::i;:::-;3205:1532:7;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:3:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5374:300:3:-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;4743:1083:7:-;4798:4;4787:8;;:15;;;;;;;;;;;;;;;;;;4812:23;4838:24;4856:4;4838:9;:24::i;:::-;4812:50;;4872:12;4905:1;4887:15;:19;;;;:::i;:::-;4872:34;;4916:17;4954:4;4936:15;:22;;;;:::i;:::-;4916:42;;5013:21;5051:1;5037:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5013:40;;5081:4;5063;5068:1;5063:7;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;;;5106:6;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5096:4;5101:1;5096:7;;;;;;;;:::i;:::-;;;;;;;:23;;;;;;;;;;;5157:18;5178:21;5157:42;;5210:46;5227:4;5242:6;;;;;;;;;;;5251:4;5210:8;:46::i;:::-;5266:6;;;;;;;;;;;:57;;;5337:4;5343:1;5346:4;5360;5367:15;5266:126;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5403:14;5444:10;5420:21;:34;;;;:::i;:::-;5403:51;;5465;5482:4;5497:6;;;;;;;;;;;5506:9;5465:8;:51::i;:::-;5526:6;;;;;;;;;;;:22;;;5556:6;5585:4;5604:9;5627:1;5642;5657:42;5713:15;5526:212;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5754:39;5769:4;5775:6;5783:9;5754:39;;;;;;;;:::i;:::-;;;;;;;;5814:5;5803:8;;:16;;;;;;;;;;;;;;;;;;4777:1049;;;;;;4743:1083::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;5989:1107:3:-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:::-;4500:6;4508;4516;4565:2;4553:9;4544:7;4540:23;4536:32;4533:119;;;4571:79;;:::i;:::-;4533:119;4691:1;4716:53;4761:7;4752:6;4741:9;4737:22;4716:53;:::i;:::-;4706:63;;4662:117;4818:2;4844:53;4889:7;4880:6;4869:9;4865:22;4844:53;:::i;:::-;4834:63;;4789:118;4946:2;4972:53;5017:7;5008:6;4997:9;4993:22;4972:53;:::i;:::-;4962:63;;4917:118;4423:619;;;;;:::o;5048:86::-;5083:7;5123:4;5116:5;5112:16;5101:27;;5048:86;;;:::o;5140:112::-;5223:22;5239:5;5223:22;:::i;:::-;5218:3;5211:35;5140:112;;:::o;5258:214::-;5347:4;5385:2;5374:9;5370:18;5362:26;;5398:67;5462:1;5451:9;5447:17;5438:6;5398:67;:::i;:::-;5258:214;;;;:::o;5478:329::-;5537:6;5586:2;5574:9;5565:7;5561:23;5557:32;5554:119;;;5592:79;;:::i;:::-;5554:119;5712:1;5737:53;5782:7;5773:6;5762:9;5758:22;5737:53;:::i;:::-;5727:63;;5683:117;5478:329;;;;:::o;5813:116::-;5883:21;5898:5;5883:21;:::i;:::-;5876:5;5873:32;5863:60;;5919:1;5916;5909:12;5863:60;5813:116;:::o;5935:133::-;5978:5;6016:6;6003:20;5994:29;;6032:30;6056:5;6032:30;:::i;:::-;5935:133;;;;:::o;6074:468::-;6139:6;6147;6196:2;6184:9;6175:7;6171:23;6167:32;6164:119;;;6202:79;;:::i;:::-;6164:119;6322:1;6347:53;6392:7;6383:6;6372:9;6368:22;6347:53;:::i;:::-;6337:63;;6293:117;6449:2;6475:50;6517:7;6508:6;6497:9;6493:22;6475:50;:::i;:::-;6465:60;;6420:115;6074:468;;;;;:::o;6548:118::-;6635:24;6653:5;6635:24;:::i;:::-;6630:3;6623:37;6548:118;;:::o;6672:222::-;6765:4;6803:2;6792:9;6788:18;6780:26;;6816:71;6884:1;6873:9;6869:17;6860:6;6816:71;:::i;:::-;6672:222;;;;:::o;6900:329::-;6959:6;7008:2;6996:9;6987:7;6983:23;6979:32;6976:119;;;7014:79;;:::i;:::-;6976:119;7134:1;7159:53;7204:7;7195:6;7184:9;7180:22;7159:53;:::i;:::-;7149:63;;7105:117;6900:329;;;;:::o;7235:474::-;7303:6;7311;7360:2;7348:9;7339:7;7335:23;7331:32;7328:119;;;7366:79;;:::i;:::-;7328:119;7486:1;7511:53;7556:7;7547:6;7536:9;7532:22;7511:53;:::i;:::-;7501:63;;7457:117;7613:2;7639:53;7684:7;7675:6;7664:9;7660:22;7639:53;:::i;:::-;7629:63;;7584:118;7235:474;;;;;:::o;7715:60::-;7743:3;7764:5;7757:12;;7715:60;;;:::o;7781:142::-;7831:9;7864:53;7882:34;7891:24;7909:5;7891:24;:::i;:::-;7882:34;:::i;:::-;7864:53;:::i;:::-;7851:66;;7781:142;;;:::o;7929:126::-;7979:9;8012:37;8043:5;8012:37;:::i;:::-;7999:50;;7929:126;;;:::o;8061:149::-;8134:9;8167:37;8198:5;8167:37;:::i;:::-;8154:50;;8061:149;;;:::o;8216:177::-;8326:60;8380:5;8326:60;:::i;:::-;8321:3;8314:73;8216:177;;:::o;8399:268::-;8515:4;8553:2;8542:9;8538:18;8530:26;;8566:94;8657:1;8646:9;8642:17;8633:6;8566:94;:::i;:::-;8399:268;;;;:::o;8673:180::-;8721:77;8718:1;8711:88;8818:4;8815:1;8808:15;8842:4;8839:1;8832:15;8859:320;8903:6;8940:1;8934:4;8930:12;8920:22;;8987:1;8981:4;8977:12;9008:18;8998:81;;9064:4;9056:6;9052:17;9042:27;;8998:81;9126:2;9118:6;9115:14;9095:18;9092:38;9089:84;;9145:18;;:::i;:::-;9089:84;8910:269;8859:320;;;:::o;9185:169::-;9325:21;9321:1;9313:6;9309:14;9302:45;9185:169;:::o;9360:366::-;9502:3;9523:67;9587:2;9582:3;9523:67;:::i;:::-;9516:74;;9599:93;9688:3;9599:93;:::i;:::-;9717:2;9712:3;9708:12;9701:19;;9360:366;;;:::o;9732:419::-;9898:4;9936:2;9925:9;9921:18;9913:26;;9985:9;9979:4;9975:20;9971:1;9960:9;9956:17;9949:47;10013:131;10139:4;10013:131;:::i;:::-;10005:139;;9732:419;;;:::o;10157:143::-;10214:5;10245:6;10239:13;10230:22;;10261:33;10288:5;10261:33;:::i;:::-;10157:143;;;;:::o;10306:351::-;10376:6;10425:2;10413:9;10404:7;10400:23;10396:32;10393:119;;;10431:79;;:::i;:::-;10393:119;10551:1;10576:64;10632:7;10623:6;10612:9;10608:22;10576:64;:::i;:::-;10566:74;;10522:128;10306:351;;;;:::o;10663:332::-;10784:4;10822:2;10811:9;10807:18;10799:26;;10835:71;10903:1;10892:9;10888:17;10879:6;10835:71;:::i;:::-;10916:72;10984:2;10973:9;10969:18;10960:6;10916:72;:::i;:::-;10663:332;;;;;:::o;11001:137::-;11055:5;11086:6;11080:13;11071:22;;11102:30;11126:5;11102:30;:::i;:::-;11001:137;;;;:::o;11144:345::-;11211:6;11260:2;11248:9;11239:7;11235:23;11231:32;11228:119;;;11266:79;;:::i;:::-;11228:119;11386:1;11411:61;11464:7;11455:6;11444:9;11440:22;11411:61;:::i;:::-;11401:71;;11357:125;11144:345;;;;:::o;11495:442::-;11644:4;11682:2;11671:9;11667:18;11659:26;;11695:71;11763:1;11752:9;11748:17;11739:6;11695:71;:::i;:::-;11776:72;11844:2;11833:9;11829:18;11820:6;11776:72;:::i;:::-;11858;11926:2;11915:9;11911:18;11902:6;11858:72;:::i;:::-;11495:442;;;;;;:::o;11943:228::-;12083:34;12079:1;12071:6;12067:14;12060:58;12152:11;12147:2;12139:6;12135:15;12128:36;11943:228;:::o;12177:366::-;12319:3;12340:67;12404:2;12399:3;12340:67;:::i;:::-;12333:74;;12416:93;12505:3;12416:93;:::i;:::-;12534:2;12529:3;12525:12;12518:19;;12177:366;;;:::o;12549:419::-;12715:4;12753:2;12742:9;12738:18;12730:26;;12802:9;12796:4;12792:20;12788:1;12777:9;12773:17;12766:47;12830:131;12956:4;12830:131;:::i;:::-;12822:139;;12549:419;;;:::o;12974:169::-;13114:21;13110:1;13102:6;13098:14;13091:45;12974:169;:::o;13149:366::-;13291:3;13312:67;13376:2;13371:3;13312:67;:::i;:::-;13305:74;;13388:93;13477:3;13388:93;:::i;:::-;13506:2;13501:3;13497:12;13490:19;;13149:366;;;:::o;13521:419::-;13687:4;13725:2;13714:9;13710:18;13702:26;;13774:9;13768:4;13764:20;13760:1;13749:9;13745:17;13738:47;13802:131;13928:4;13802:131;:::i;:::-;13794:139;;13521:419;;;:::o;13946:180::-;13994:77;13991:1;13984:88;14091:4;14088:1;14081:15;14115:4;14112:1;14105:15;14132:410;14172:7;14195:20;14213:1;14195:20;:::i;:::-;14190:25;;14229:20;14247:1;14229:20;:::i;:::-;14224:25;;14284:1;14281;14277:9;14306:30;14324:11;14306:30;:::i;:::-;14295:41;;14485:1;14476:7;14472:15;14469:1;14466:22;14446:1;14439:9;14419:83;14396:139;;14515:18;;:::i;:::-;14396:139;14180:362;14132:410;;;;:::o;14548:180::-;14596:77;14593:1;14586:88;14693:4;14690:1;14683:15;14717:4;14714:1;14707:15;14734:185;14774:1;14791:20;14809:1;14791:20;:::i;:::-;14786:25;;14825:20;14843:1;14825:20;:::i;:::-;14820:25;;14864:1;14854:35;;14869:18;;:::i;:::-;14854:35;14911:1;14908;14904:9;14899:14;;14734:185;;;;:::o;14925:194::-;14965:4;14985:20;15003:1;14985:20;:::i;:::-;14980:25;;15019:20;15037:1;15019:20;:::i;:::-;15014:25;;15063:1;15060;15056:9;15048:17;;15087:1;15081:4;15078:11;15075:37;;;15092:18;;:::i;:::-;15075:37;14925:194;;;;:::o;15125:181::-;15265:33;15261:1;15253:6;15249:14;15242:57;15125:181;:::o;15312:366::-;15454:3;15475:67;15539:2;15534:3;15475:67;:::i;:::-;15468:74;;15551:93;15640:3;15551:93;:::i;:::-;15669:2;15664:3;15660:12;15653:19;;15312:366;;;:::o;15684:419::-;15850:4;15888:2;15877:9;15873:18;15865:26;;15937:9;15931:4;15927:20;15923:1;15912:9;15908:17;15901:47;15965:131;16091:4;15965:131;:::i;:::-;15957:139;;15684:419;;;:::o;16109:180::-;16157:77;16154:1;16147:88;16254:4;16251:1;16244:15;16278:4;16275:1;16268:15;16295:180;16343:77;16340:1;16333:88;16440:4;16437:1;16430:15;16464:4;16461:1;16454:15;16481:143;16538:5;16569:6;16563:13;16554:22;;16585:33;16612:5;16585:33;:::i;:::-;16481:143;;;;:::o;16630:351::-;16700:6;16749:2;16737:9;16728:7;16724:23;16720:32;16717:119;;;16755:79;;:::i;:::-;16717:119;16875:1;16900:64;16956:7;16947:6;16936:9;16932:22;16900:64;:::i;:::-;16890:74;;16846:128;16630:351;;;;:::o;16987:85::-;17032:7;17061:5;17050:16;;16987:85;;;:::o;17078:158::-;17136:9;17169:61;17187:42;17196:32;17222:5;17196:32;:::i;:::-;17187:42;:::i;:::-;17169:61;:::i;:::-;17156:74;;17078:158;;;:::o;17242:147::-;17337:45;17376:5;17337:45;:::i;:::-;17332:3;17325:58;17242:147;;:::o;17395:114::-;17462:6;17496:5;17490:12;17480:22;;17395:114;;;:::o;17515:184::-;17614:11;17648:6;17643:3;17636:19;17688:4;17683:3;17679:14;17664:29;;17515:184;;;;:::o;17705:132::-;17772:4;17795:3;17787:11;;17825:4;17820:3;17816:14;17808:22;;17705:132;;;:::o;17843:108::-;17920:24;17938:5;17920:24;:::i;:::-;17915:3;17908:37;17843:108;;:::o;17957:179::-;18026:10;18047:46;18089:3;18081:6;18047:46;:::i;:::-;18125:4;18120:3;18116:14;18102:28;;17957:179;;;;:::o;18142:113::-;18212:4;18244;18239:3;18235:14;18227:22;;18142:113;;;:::o;18291:732::-;18410:3;18439:54;18487:5;18439:54;:::i;:::-;18509:86;18588:6;18583:3;18509:86;:::i;:::-;18502:93;;18619:56;18669:5;18619:56;:::i;:::-;18698:7;18729:1;18714:284;18739:6;18736:1;18733:13;18714:284;;;18815:6;18809:13;18842:63;18901:3;18886:13;18842:63;:::i;:::-;18835:70;;18928:60;18981:6;18928:60;:::i;:::-;18918:70;;18774:224;18761:1;18758;18754:9;18749:14;;18714:284;;;18718:14;19014:3;19007:10;;18415:608;;;18291:732;;;;:::o;19029:831::-;19292:4;19330:3;19319:9;19315:19;19307:27;;19344:71;19412:1;19401:9;19397:17;19388:6;19344:71;:::i;:::-;19425:80;19501:2;19490:9;19486:18;19477:6;19425:80;:::i;:::-;19552:9;19546:4;19542:20;19537:2;19526:9;19522:18;19515:48;19580:108;19683:4;19674:6;19580:108;:::i;:::-;19572:116;;19698:72;19766:2;19755:9;19751:18;19742:6;19698:72;:::i;:::-;19780:73;19848:3;19837:9;19833:19;19824:6;19780:73;:::i;:::-;19029:831;;;;;;;;:::o;19866:807::-;20115:4;20153:3;20142:9;20138:19;20130:27;;20167:71;20235:1;20224:9;20220:17;20211:6;20167:71;:::i;:::-;20248:72;20316:2;20305:9;20301:18;20292:6;20248:72;:::i;:::-;20330:80;20406:2;20395:9;20391:18;20382:6;20330:80;:::i;:::-;20420;20496:2;20485:9;20481:18;20472:6;20420:80;:::i;:::-;20510:73;20578:3;20567:9;20563:19;20554:6;20510:73;:::i;:::-;20593;20661:3;20650:9;20646:19;20637:6;20593:73;:::i;:::-;19866:807;;;;;;;;;:::o;20679:663::-;20767:6;20775;20783;20832:2;20820:9;20811:7;20807:23;20803:32;20800:119;;;20838:79;;:::i;:::-;20800:119;20958:1;20983:64;21039:7;21030:6;21019:9;21015:22;20983:64;:::i;:::-;20973:74;;20929:128;21096:2;21122:64;21178:7;21169:6;21158:9;21154:22;21122:64;:::i;:::-;21112:74;;21067:129;21235:2;21261:64;21317:7;21308:6;21297:9;21293:22;21261:64;:::i;:::-;21251:74;;21206:129;20679:663;;;;;:::o;21348:442::-;21497:4;21535:2;21524:9;21520:18;21512:26;;21548:71;21616:1;21605:9;21601:17;21592:6;21548:71;:::i;:::-;21629:72;21697:2;21686:9;21682:18;21673:6;21629:72;:::i;:::-;21711;21779:2;21768:9;21764:18;21755:6;21711:72;:::i;:::-;21348:442;;;;;;:::o;21796:191::-;21836:3;21855:20;21873:1;21855:20;:::i;:::-;21850:25;;21889:20;21907:1;21889:20;:::i;:::-;21884:25;;21932:1;21929;21925:9;21918:16;;21953:3;21950:1;21947:10;21944:36;;;21960:18;;:::i;:::-;21944:36;21796:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2176600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BUY_TAX()": "372",
								"SELL_TAX()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"artistTax()": "2469",
								"artistWallet()": "2553",
								"balanceOf(address)": "2875",
								"decimals()": "428",
								"devTax()": "2536",
								"devWallet()": "2575",
								"enableTrading()": "infinite",
								"isExcludedFromFee(address)": "2878",
								"lpTax()": "2471",
								"marketingTax()": "2537",
								"marketingWallet()": "2598",
								"name()": "infinite",
								"owner()": "2560",
								"pair()": "2575",
								"renounceOwnership()": "infinite",
								"router()": "infinite",
								"setExcludedFromFee(address,bool)": "infinite",
								"setSwapThreshold(uint256)": "infinite",
								"swapThreshold()": "2494",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"tradingEnabled()": "2629",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateWallets(address,address,address)": "infinite",
								"withdrawStuckTokens(address)": "infinite"
							},
							"internal": {
								"_customTransfer(address,address,uint256)": "infinite",
								"swapAndLiquify()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1283,
									"end": 1286,
									"name": "PUSH",
									"source": 7,
									"value": "1F4"
								},
								{
									"begin": 1260,
									"end": 1286,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1260,
									"end": 1286,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1333,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "3E8"
								},
								{
									"begin": 1309,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1309,
									"end": 1337,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1389,
									"name": "PUSH",
									"source": 7,
									"value": "1F4"
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1359,
									"end": 1389,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1441,
									"name": "PUSH",
									"source": 7,
									"value": "1F4"
								},
								{
									"begin": 1408,
									"end": 1441,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 1408,
									"end": 1441,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "PUSH",
									"source": 7,
									"value": "A968163F0A57B400000"
								},
								{
									"begin": 1597,
									"end": 1643,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1597,
									"end": 1643,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 2743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 1951,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4175746F6D61746F7220436F696E000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4154430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1969,
									"end": 1979,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 2003,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1963,
									"end": 1968,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1963,
									"end": 1968,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 1968,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 2004,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 2004,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 2004,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1963,
									"end": 2004,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2115,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 2049,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2049,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2049,
									"end": 2116,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2149,
									"end": 2155,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2163,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2149,
									"end": 2163,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2163,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "C45A0155"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2149,
									"end": 2165,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2149,
									"end": 2165,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2177,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2133,
									"end": 2177,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2177,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "C9C65396"
								},
								{
									"begin": 2186,
									"end": 2190,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2193,
									"end": 2199,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2204,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2193,
									"end": 2204,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2204,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "AD5C4648"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2206,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2193,
									"end": 2206,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2193,
									"end": 2206,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2133,
									"end": 2207,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "CALL",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2133,
									"end": 2207,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2133,
									"end": 2207,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2133,
									"end": 2207,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2130,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2126,
									"end": 2130,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2126,
									"end": 2207,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2253,
									"end": 2295,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "73ADD9B0FAE851F9F203BA5346D240C32D5AF259"
								},
								{
									"begin": 2241,
									"end": 2250,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 2241,
									"end": 2250,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2295,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2320,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FBD336B10D3AA003BB0491277BD1B100A7600B7A"
								},
								{
									"begin": 2305,
									"end": 2317,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 2305,
									"end": 2317,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2362,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2390,
									"end": 2432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "C5E979514EBE80172EDBA7C7CFE38B599E4E4823"
								},
								{
									"begin": 2372,
									"end": 2387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 2372,
									"end": 2387,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2432,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2539,
									"end": 2543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2507,
									"end": 2524,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2535,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2543,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2592,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2553,
									"end": 2570,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2579,
									"end": 2583,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2553,
									"end": 2592,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2637,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2602,
									"end": 2619,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2620,
									"end": 2629,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2637,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2681,
									"end": 2685,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2647,
									"end": 2664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2665,
									"end": 2677,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2647,
									"end": 2685,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2732,
									"end": 2736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2695,
									"end": 2712,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2713,
									"end": 2728,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2729,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2736,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5901,
									"end": 6018,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 5901,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6010,
									"end": 6011,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6007,
									"end": 6008,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6012,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6147,
									"end": 6269,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 6147,
									"end": 6269,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6244,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6238,
									"end": 6243,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6244,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6220,
									"end": 6244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6220,
									"end": 6244,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6220,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6213,
									"end": 6218,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6210,
									"end": 6245,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 6200,
									"end": 6263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6200,
									"end": 6263,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6259,
									"end": 6260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6256,
									"end": 6257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6249,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 6200,
									"end": 6263,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6200,
									"end": 6263,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6147,
									"end": 6269,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6147,
									"end": 6269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6275,
									"end": 6418,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 6275,
									"end": 6418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6332,
									"end": 6337,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6363,
									"end": 6369,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6357,
									"end": 6370,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6348,
									"end": 6370,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6348,
									"end": 6370,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6406,
									"end": 6411,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 6379,
									"end": 6412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6412,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6379,
									"end": 6412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6275,
									"end": 6418,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6275,
									"end": 6418,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6275,
									"end": 6418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6275,
									"end": 6418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6275,
									"end": 6418,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6775,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 6424,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6494,
									"end": 6500,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6543,
									"end": 6545,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6531,
									"end": 6540,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6522,
									"end": 6529,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6518,
									"end": 6541,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 6514,
									"end": 6546,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 6511,
									"end": 6630,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6511,
									"end": 6630,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6511,
									"end": 6630,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6549,
									"end": 6628,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6549,
									"end": 6628,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 6549,
									"end": 6628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6549,
									"end": 6628,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6549,
									"end": 6628,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6511,
									"end": 6630,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6511,
									"end": 6630,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6670,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6694,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6750,
									"end": 6757,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6730,
									"end": 6739,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6726,
									"end": 6748,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 6694,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6758,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6694,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6684,
									"end": 6758,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6684,
									"end": 6758,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6640,
									"end": 6768,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6775,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6775,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6424,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6902,
									"end": 6906,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6942,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6929,
									"end": 6938,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6925,
									"end": 6943,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6917,
									"end": 6943,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6917,
									"end": 6943,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6953,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7021,
									"end": 7022,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7010,
									"end": 7019,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7006,
									"end": 7023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6997,
									"end": 7003,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6953,
									"end": 7024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 6953,
									"end": 7024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6953,
									"end": 7024,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6953,
									"end": 7024,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7034,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7102,
									"end": 7104,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7091,
									"end": 7100,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7087,
									"end": 7105,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7078,
									"end": 7084,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7034,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 7034,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7034,
									"end": 7106,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 7034,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7113,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7119,
									"end": 7299,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 7119,
									"end": 7299,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7167,
									"end": 7244,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7164,
									"end": 7165,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7157,
									"end": 7245,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7264,
									"end": 7268,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7261,
									"end": 7262,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7254,
									"end": 7269,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7292,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7285,
									"end": 7286,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7278,
									"end": 7293,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7305,
									"end": 7496,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 7305,
									"end": 7496,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7345,
									"end": 7348,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7364,
									"end": 7384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7364,
									"end": 7384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 7364,
									"end": 7384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7364,
									"end": 7384,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7364,
									"end": 7384,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7384,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7384,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7398,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 7416,
									"end": 7417,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7398,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 7398,
									"end": 7418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7398,
									"end": 7418,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 7398,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7393,
									"end": 7418,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7393,
									"end": 7418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7441,
									"end": 7442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7438,
									"end": 7439,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7434,
									"end": 7443,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7427,
									"end": 7443,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7427,
									"end": 7443,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7462,
									"end": 7465,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7456,
									"end": 7466,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7453,
									"end": 7489,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7453,
									"end": 7489,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7453,
									"end": 7489,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7469,
									"end": 7487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7469,
									"end": 7487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 7469,
									"end": 7487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7469,
									"end": 7487,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7469,
									"end": 7487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7453,
									"end": 7489,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7453,
									"end": 7489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7305,
									"end": 7496,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7305,
									"end": 7496,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7305,
									"end": 7496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7305,
									"end": 7496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7305,
									"end": 7496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7502,
									"end": 7620,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7502,
									"end": 7620,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7589,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7607,
									"end": 7612,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7589,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 7589,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7589,
									"end": 7613,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7589,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7584,
									"end": 7587,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7577,
									"end": 7614,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7502,
									"end": 7620,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7502,
									"end": 7620,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7502,
									"end": 7620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7775,
									"end": 7779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 7815,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7802,
									"end": 7811,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7798,
									"end": 7816,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7790,
									"end": 7816,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7790,
									"end": 7816,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7826,
									"end": 7897,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7894,
									"end": 7895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7883,
									"end": 7892,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7879,
									"end": 7896,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7870,
									"end": 7876,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7826,
									"end": 7897,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 7826,
									"end": 7897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7826,
									"end": 7897,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7826,
									"end": 7897,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7907,
									"end": 7979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7975,
									"end": 7977,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7964,
									"end": 7973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7960,
									"end": 7978,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7951,
									"end": 7957,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7907,
									"end": 7979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7907,
									"end": 7979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7907,
									"end": 7979,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7907,
									"end": 7979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8061,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8057,
									"end": 8059,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8046,
									"end": 8055,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8042,
									"end": 8060,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8033,
									"end": 8039,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8061,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7989,
									"end": 8061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8061,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 7989,
									"end": 8061,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7626,
									"end": 8068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8074,
									"end": 8296,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 8074,
									"end": 8296,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8167,
									"end": 8171,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8205,
									"end": 8207,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8194,
									"end": 8203,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8190,
									"end": 8208,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8182,
									"end": 8208,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8182,
									"end": 8208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8218,
									"end": 8289,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8275,
									"end": 8284,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8271,
									"end": 8288,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8262,
									"end": 8268,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8218,
									"end": 8289,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 8218,
									"end": 8289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8218,
									"end": 8289,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8218,
									"end": 8289,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8074,
									"end": 8296,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8074,
									"end": 8296,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8074,
									"end": 8296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8074,
									"end": 8296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8074,
									"end": 8296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 931,
									"end": 6766,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a4d0349d9a94e3d9bb2f933fd2387c37298fc04e09197c88ec59a1efa477c7064736f6c63430008180033",
									".code": [
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "A3342FBA"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "D862686B"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "D862686B"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "F887EA40"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "A3342FBA"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "A8AA1B31"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "CB963728"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "8EA5220F"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "9D0014B1"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "75F0A874"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "8A8C523C"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "1DE3B450"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "5342ACB4"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "5342ACB4"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "54AD8AEE"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "6612E66F"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "665C6DE9"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "1DE3B450"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "4ADA218B"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "147C9F6D"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "1D2CB02D"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "2AF37BB"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "445B667"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 931,
											"end": 6766,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1078,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1078,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1597,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1597,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5920,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5920,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1408,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1408,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1260,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1260,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2925,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2925,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2925,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1700,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1700,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1732,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1732,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1732,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1129,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1129,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6266,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6266,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1309,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1309,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1539,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1539,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5832,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1476,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1476,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6405,
											"end": 6505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6405,
											"end": 6505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1506,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1506,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1019,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1019,
											"end": 1038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2749,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2749,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2749,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6511,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6511,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1359,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1359,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 985,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 985,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 1078,
											"end": 1116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6039,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 6023,
											"end": 6032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6039,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6064,
											"end": 6071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 6049,
											"end": 6061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6081,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6109,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6119,
											"end": 6136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6137,
											"end": 6146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6198,
											"end": 6202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6182,
											"end": 6194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6202,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6212,
											"end": 6229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6230,
											"end": 6245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6253,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3057,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3057,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3069,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3057,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3079,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3119,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3079,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3145,
											"end": 3151,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3162,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3170,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3129,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3129,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3181,
											"end": 3192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1164,
											"end": 1168,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 1129,
											"end": 1168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6380,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6266,
											"end": 6399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5832,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5886,
											"end": 5900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5886,
											"end": 5900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6476,
											"end": 6498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6498,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1019,
											"end": 1038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2859,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2859,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2859,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2871,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2859,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2843,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2843,
											"end": 2891,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2843,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2901,
											"end": 2912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 2919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6613,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6614,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6584,
											"end": 6638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6584,
											"end": 6638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6648,
											"end": 6670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 6671,
											"end": 6681,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6695,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6715,
											"end": 6719,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6683,
											"end": 6721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6683,
											"end": 6721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6683,
											"end": 6721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6648,
											"end": 6722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6648,
											"end": 6722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3205,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3205,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3331,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3313,
											"end": 3377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3313,
											"end": 3377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3395,
											"end": 3409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3395,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3437,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3413,
											"end": 3438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3395,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3395,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3469,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3442,
											"end": 3470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3395,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3387,
											"end": 3494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3387,
											"end": 3494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3541,
											"end": 3566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3598,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3571,
											"end": 3599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3599,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3540,
											"end": 3599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 4678,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3537,
											"end": 4678,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3631,
											"end": 3635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3627,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3618,
											"end": 3635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3635,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 1164,
											"end": 1168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 3676,
											"end": 3682,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3676,
											"end": 3693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3676,
											"end": 3693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3675,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3675,
											"end": 3712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3675,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3746,
											"end": 3750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3742,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3750,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3733,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 1112,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 3790,
											"end": 3796,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3790,
											"end": 3806,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3806,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3790,
											"end": 3806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3790,
											"end": 3806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3789,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3789,
											"end": 3825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3789,
											"end": 3825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3733,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3615,
											"end": 3840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3881,
											"end": 3882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3882,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3866,
											"end": 4668,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3866,
											"end": 4668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3866,
											"end": 4668,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 3934,
											"end": 3939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3934,
											"end": 3939,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3922,
											"end": 3939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3922,
											"end": 3939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3922,
											"end": 3939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3921,
											"end": 3951,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3921,
											"end": 3951,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3951,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3921,
											"end": 3951,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3951,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 3986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 4002,
											"end": 4008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4002,
											"end": 4008,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 3999,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3990,
											"end": 4008,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3990,
											"end": 4008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3990,
											"end": 4008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3989,
											"end": 4020,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 4020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3989,
											"end": 4020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 4020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3989,
											"end": 4020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 4020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 4020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9C4"
										},
										{
											"begin": 4074,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4074,
											"end": 4083,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4071,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4062,
											"end": 4083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4061,
											"end": 4095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4061,
											"end": 4095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4061,
											"end": 4095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4171,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4159,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4148,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4139,
											"end": 4159,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4139,
											"end": 4159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4139,
											"end": 4159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4139,
											"end": 4171,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4139,
											"end": 4171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4139,
											"end": 4171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4139,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4139,
											"end": 4186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4139,
											"end": 4186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4221,
											"end": 4227,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4241,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4252,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4205,
											"end": 4253,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4205,
											"end": 4253,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4205,
											"end": 4253,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4271,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4287,
											"end": 4293,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4306,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4271,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4271,
											"end": 4316,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4271,
											"end": 4316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4271,
											"end": 4316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4350,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4358,
											"end": 4370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4384,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4334,
											"end": 4385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4334,
											"end": 4385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4419,
											"end": 4425,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4427,
											"end": 4442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4459,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4403,
											"end": 4460,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 4403,
											"end": 4460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4498,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4479,
											"end": 4498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4529,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4537,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4569,
											"end": 4582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4559,
											"end": 4563,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4541,
											"end": 4565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4541,
											"end": 4565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4582,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4582,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4520,
											"end": 4582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4587,
											"end": 4595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4520,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4654,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4517,
											"end": 4654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4619,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4619,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4619,
											"end": 4635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4619,
											"end": 4635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4619,
											"end": 4635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4517,
											"end": 4654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 4668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 4668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 4668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 4668,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3866,
											"end": 4668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3866,
											"end": 4668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 4678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3537,
											"end": 4678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4688,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4704,
											"end": 4710,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4688,
											"end": 4703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4688,
											"end": 4730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4688,
											"end": 4730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4688,
											"end": 4730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 4737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 5826,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4743,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4795,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4787,
											"end": 4795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4838,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4838,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4887,
											"end": 4902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4887,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4887,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4936,
											"end": 4958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4936,
											"end": 4958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4958,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4936,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4958,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 5037,
											"end": 5053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5063,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5117,
											"name": "PUSH",
											"source": 7,
											"value": "AD5C4648"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5106,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5106,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5096,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5096,
											"end": 5119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5199,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5227,
											"end": 5231,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5255,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5210,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5256,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5210,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5323,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5266,
											"end": 5323,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5323,
											"name": "PUSH",
											"source": 7,
											"value": "791AC947"
										},
										{
											"begin": 5337,
											"end": 5341,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5364,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5367,
											"end": 5382,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5266,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5441,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5420,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5420,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5482,
											"end": 5486,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5497,
											"end": 5503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5515,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5465,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5465,
											"end": 5516,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5465,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5548,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5548,
											"name": "PUSH",
											"source": 7,
											"value": "F305D719"
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5613,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5699,
											"name": "PUSH",
											"source": 7,
											"value": "DEAD"
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5526,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 5526,
											"end": 5738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"source": 7,
											"value": "17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561"
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5775,
											"end": 5781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 5754,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5754,
											"end": 5793,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5803,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 5826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 5826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 5826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 5826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 5826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 5826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 5826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 722,
											"end": 968,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 722,
											"end": 968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 821,
											"end": 834,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 813,
											"end": 926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 907,
											"end": 910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 903,
											"end": 914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 877,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 842,
											"end": 852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 837,
											"end": 852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 837,
											"end": 852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 946,
											"end": 949,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 942,
											"end": 958,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 935,
											"end": 962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 784,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 722,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1060,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1198,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 1333,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1423,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1655,
											"end": 1675,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1693,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2230,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2166,
											"end": 2231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 2309,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 2309,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 2418,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2443,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2564,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2573,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 2573,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2691,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 2691,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2684,
											"end": 2689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2716,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 2671,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2873,
											"end": 2878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2959,
											"end": 2965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3013,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3014,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3022,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 3022,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 2984,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 3167,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 3167,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3340,
											"end": 3347,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 3295,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3295,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2891,
											"end": 3365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3454,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3455,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 3563,
											"end": 3568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 3548,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 3548,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3570,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 3720,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3720,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4553,
											"end": 4562,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4544,
											"end": 4551,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4563,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4568,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4652,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4533,
											"end": 4652,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4571,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 4571,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 4571,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4571,
											"end": 4650,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 4571,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4533,
											"end": 4652,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4533,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 4761,
											"end": 4768,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4750,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4716,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4769,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4844,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 4844,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4834,
											"end": 4897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 5015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4972,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 4972,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4962,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 5035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 5042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5134,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5048,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5134,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5134,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5134,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5252,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5140,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 5239,
											"end": 5244,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5223,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5218,
											"end": 5221,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5472,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 5258,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 5462,
											"end": 5463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5398,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5398,
											"end": 5465,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 5398,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5572,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5584,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5589,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5592,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 5592,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 5554,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 5782,
											"end": 5789,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 5737,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 5737,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5727,
											"end": 5790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5727,
											"end": 5790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5683,
											"end": 5800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5929,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5813,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 5898,
											"end": 5903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5883,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 5881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 5863,
											"end": 5923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5919,
											"end": 5920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5923,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 5863,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6068,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5935,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 6056,
											"end": 6061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 6032,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 6032,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6068,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6147,
											"end": 6153,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6194,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6167,
											"end": 6199,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 6164,
											"end": 6283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 6202,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6202,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6202,
											"end": 6281,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 6202,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6164,
											"end": 6283,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 6164,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 6392,
											"end": 6399,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 6347,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 6347,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6508,
											"end": 6514,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6506,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 6475,
											"end": 6525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6525,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 6475,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6465,
											"end": 6525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6465,
											"end": 6525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6420,
											"end": 6535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6666,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6548,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 6653,
											"end": 6658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 6635,
											"end": 6659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6659,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 6635,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6623,
											"end": 6660,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6894,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6672,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6869,
											"end": 6886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6866,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 6816,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6887,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 6816,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6894,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6894,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 7229,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 6900,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6959,
											"end": 6965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7010,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6987,
											"end": 6994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7006,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6979,
											"end": 7011,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7095,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6976,
											"end": 7095,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7014,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 7014,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 7014,
											"end": 7093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7014,
											"end": 7093,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 7014,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7095,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 6976,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7134,
											"end": 7135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 7204,
											"end": 7211,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7195,
											"end": 7201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7193,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7180,
											"end": 7202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 7159,
											"end": 7212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 7159,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 7229,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 7229,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 7229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 7229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 7229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7331,
											"end": 7363,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7447,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7328,
											"end": 7447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 7366,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 7366,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7445,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 7366,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7328,
											"end": 7447,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 7328,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7511,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 7556,
											"end": 7563,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7532,
											"end": 7554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7511,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 7511,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7511,
											"end": 7564,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 7511,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7501,
											"end": 7564,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7501,
											"end": 7564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7457,
											"end": 7574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7639,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7660,
											"end": 7682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 7639,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7692,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 7639,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7692,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7692,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7775,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 7715,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7743,
											"end": 7746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7769,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7757,
											"end": 7769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7757,
											"end": 7769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7923,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 7781,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 7840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7882,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 7891,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 7909,
											"end": 7914,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7891,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 7891,
											"end": 7915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7891,
											"end": 7915,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 7891,
											"end": 7915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 7882,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7916,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 7882,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 7864,
											"end": 7917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7917,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 7864,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7851,
											"end": 7917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7851,
											"end": 7917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8055,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 7929,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8012,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 8043,
											"end": 8048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 8012,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8049,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 8012,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7999,
											"end": 8049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7999,
											"end": 8049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8210,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8061,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 8198,
											"end": 8203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8167,
											"end": 8204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8204,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 8167,
											"end": 8204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8154,
											"end": 8204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8154,
											"end": 8204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8061,
											"end": 8210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8393,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8216,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 8380,
											"end": 8385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8326,
											"end": 8386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8386,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 8326,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8387,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8216,
											"end": 8393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8667,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 8399,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8542,
											"end": 8551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8530,
											"end": 8556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 8657,
											"end": 8658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8633,
											"end": 8639,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8566,
											"end": 8660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8660,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 8566,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8667,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8853,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 8673,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8798,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8718,
											"end": 8719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8815,
											"end": 8816,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8847,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9179,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8859,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8909,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8941,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8930,
											"end": 8942,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8920,
											"end": 8942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8920,
											"end": 8942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8981,
											"end": 8985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 8989,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8998,
											"end": 9079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 8998,
											"end": 9079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9068,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9069,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9042,
											"end": 9069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9042,
											"end": 9069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8998,
											"end": 9079,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 8998,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9126,
											"end": 9128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9129,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9092,
											"end": 9130,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9089,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 9089,
											"end": 9173,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 9145,
											"end": 9163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9089,
											"end": 9173,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 9089,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8910,
											"end": 9179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 9179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9354,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 9185,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9325,
											"end": 9346,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F742077697468647261772041544300000000000000000000000000"
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9309,
											"end": 9323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9302,
											"end": 9347,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9185,
											"end": 9354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9726,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 9360,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9502,
											"end": 9505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 9587,
											"end": 9589,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 9582,
											"end": 9585,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 9523,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9516,
											"end": 9590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 9688,
											"end": 9691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 9599,
											"end": 9692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9599,
											"end": 9692,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 9599,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9717,
											"end": 9719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9712,
											"end": 9715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9708,
											"end": 9720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9360,
											"end": 9726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 10151,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 9732,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9898,
											"end": 9902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9921,
											"end": 9939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 9994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 9983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 9995,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9969,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9956,
											"end": 9973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 9996,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 10139,
											"end": 10143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10013,
											"end": 10144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10144,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 10013,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10005,
											"end": 10144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10005,
											"end": 10144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 10151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 10151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 10151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 10151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10300,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10157,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10245,
											"end": 10251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10239,
											"end": 10252,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10252,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10261,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 10288,
											"end": 10293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10261,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 10261,
											"end": 10294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10261,
											"end": 10294,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 10261,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10300,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10657,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10306,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10376,
											"end": 10382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10411,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10428,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10512,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 10393,
											"end": 10512,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10431,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 10431,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 10431,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10431,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 10431,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10512,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 10393,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 10632,
											"end": 10639,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10623,
											"end": 10629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10608,
											"end": 10630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10576,
											"end": 10640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10640,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 10576,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10566,
											"end": 10640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10566,
											"end": 10640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10657,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10784,
											"end": 10788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10824,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10811,
											"end": 10820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10799,
											"end": 10825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10799,
											"end": 10825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 10903,
											"end": 10904,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10892,
											"end": 10901,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10888,
											"end": 10905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10879,
											"end": 10885,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 10835,
											"end": 10906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10835,
											"end": 10906,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 10835,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10916,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 10984,
											"end": 10986,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10973,
											"end": 10982,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10966,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10916,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 10916,
											"end": 10988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10916,
											"end": 10988,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 10916,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10663,
											"end": 10995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11138,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 11001,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11055,
											"end": 11060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11086,
											"end": 11092,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11080,
											"end": 11093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 11126,
											"end": 11131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 11102,
											"end": 11132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11132,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 11102,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11138,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11138,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11489,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 11144,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11211,
											"end": 11217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11262,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11248,
											"end": 11257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11235,
											"end": 11258,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11263,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11347,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 11228,
											"end": 11347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11266,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 11266,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 11266,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11266,
											"end": 11345,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 11266,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11347,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 11228,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11386,
											"end": 11387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 11464,
											"end": 11471,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11455,
											"end": 11461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11411,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 11411,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11411,
											"end": 11472,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 11411,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11357,
											"end": 11482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11489,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11489,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11644,
											"end": 11648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11684,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11671,
											"end": 11680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 11685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 11763,
											"end": 11764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11752,
											"end": 11761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11748,
											"end": 11765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11739,
											"end": 11745,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 11695,
											"end": 11766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11766,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 11695,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11776,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 11844,
											"end": 11846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11833,
											"end": 11842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11829,
											"end": 11847,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11820,
											"end": 11826,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11776,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11776,
											"end": 11848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11776,
											"end": 11848,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 11776,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 11926,
											"end": 11928,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11915,
											"end": 11924,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11911,
											"end": 11929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11902,
											"end": 11908,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11858,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11858,
											"end": 11930,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 11858,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11495,
											"end": 11937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12171,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11943,
											"end": 12171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12083,
											"end": 12117,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 12079,
											"end": 12080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12071,
											"end": 12077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12067,
											"end": 12081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12060,
											"end": 12118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12152,
											"end": 12163,
											"name": "PUSH",
											"source": 8,
											"value": "7468616E207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12147,
											"end": 12149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12139,
											"end": 12145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 12171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12543,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 12177,
											"end": 12543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12319,
											"end": 12322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 12404,
											"end": 12406,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 12399,
											"end": 12402,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 12340,
											"end": 12407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12340,
											"end": 12407,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 12340,
											"end": 12407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12333,
											"end": 12407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 12505,
											"end": 12508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 12416,
											"end": 12509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12416,
											"end": 12509,
											"name": "tag",
											"source": 8,
											"value": "574"
										},
										{
											"begin": 12416,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12534,
											"end": 12536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12529,
											"end": 12532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12537,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12518,
											"end": 12537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12518,
											"end": 12537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12968,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 12549,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12715,
											"end": 12719,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12755,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12738,
											"end": 12756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12730,
											"end": 12756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12730,
											"end": 12756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12802,
											"end": 12811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12788,
											"end": 12789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12777,
											"end": 12786,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12773,
											"end": 12790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12766,
											"end": 12813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 12956,
											"end": 12960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 12830,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12961,
											"name": "tag",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 12830,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12822,
											"end": 12961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12822,
											"end": 12961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12549,
											"end": 12968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13143,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 12974,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13114,
											"end": 13135,
											"name": "PUSH",
											"source": 8,
											"value": "54726164696E67206E6F7420656E61626C656400000000000000000000000000"
										},
										{
											"begin": 13110,
											"end": 13111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13098,
											"end": 13112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 13136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13149,
											"end": 13515,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13149,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13291,
											"end": 13294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 13376,
											"end": 13378,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 13371,
											"end": 13374,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13312,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13312,
											"end": 13379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13312,
											"end": 13379,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 13312,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 13388,
											"end": 13481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13481,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 13388,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13506,
											"end": 13508,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13501,
											"end": 13504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13497,
											"end": 13509,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13490,
											"end": 13509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13490,
											"end": 13509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13149,
											"end": 13515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13149,
											"end": 13515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13149,
											"end": 13515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13149,
											"end": 13515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13521,
											"end": 13940,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 13521,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13687,
											"end": 13691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13725,
											"end": 13727,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 13723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13710,
											"end": 13728,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13702,
											"end": 13728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13702,
											"end": 13728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13774,
											"end": 13783,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 13784,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13749,
											"end": 13758,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13745,
											"end": 13762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13738,
											"end": 13785,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13802,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 13928,
											"end": 13932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13802,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13802,
											"end": 13933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13802,
											"end": 13933,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 13802,
											"end": 13933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13794,
											"end": 13933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13794,
											"end": 13933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13521,
											"end": 13940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13521,
											"end": 13940,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13521,
											"end": 13940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13521,
											"end": 13940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14126,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 13946,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 14071,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13991,
											"end": 13992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13984,
											"end": 14072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14091,
											"end": 14095,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 14088,
											"end": 14089,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14081,
											"end": 14096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14115,
											"end": 14119,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14112,
											"end": 14113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14105,
											"end": 14120,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14132,
											"end": 14542,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 14132,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14179,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14195,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 14213,
											"end": 14214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14195,
											"end": 14215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14215,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 14195,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14190,
											"end": 14215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14190,
											"end": 14215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 14247,
											"end": 14248,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14229,
											"end": 14249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14249,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 14229,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14224,
											"end": 14249,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14224,
											"end": 14249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14277,
											"end": 14286,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14306,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 14324,
											"end": 14335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14306,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14306,
											"end": 14336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14306,
											"end": 14336,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 14306,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14295,
											"end": 14336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14295,
											"end": 14336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14476,
											"end": 14483,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14472,
											"end": 14487,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14469,
											"end": 14470,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14466,
											"end": 14488,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14446,
											"end": 14447,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14439,
											"end": 14448,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14502,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 14396,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 14396,
											"end": 14535,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14515,
											"end": 14533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 14515,
											"end": 14533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 14515,
											"end": 14533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14515,
											"end": 14533,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 14515,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14396,
											"end": 14535,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 14396,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14180,
											"end": 14542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14132,
											"end": 14542,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14132,
											"end": 14542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14132,
											"end": 14542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14132,
											"end": 14542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14132,
											"end": 14542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14548,
											"end": 14728,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 14548,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14673,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14593,
											"end": 14594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14697,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 14690,
											"end": 14691,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14683,
											"end": 14698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14717,
											"end": 14721,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14714,
											"end": 14715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14707,
											"end": 14722,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14919,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 14734,
											"end": 14919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 14775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14791,
											"end": 14811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 14809,
											"end": 14810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14791,
											"end": 14811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14791,
											"end": 14811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14791,
											"end": 14811,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 14791,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 14811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14825,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 14843,
											"end": 14844,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14825,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14825,
											"end": 14845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14825,
											"end": 14845,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 14825,
											"end": 14845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14820,
											"end": 14845,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14820,
											"end": 14845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 14854,
											"end": 14889,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 14869,
											"end": 14887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 14889,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 14854,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14908,
											"end": 14909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14904,
											"end": 14913,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14899,
											"end": 14913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14899,
											"end": 14913,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14919,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 15119,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 14925,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14965,
											"end": 14969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 15003,
											"end": 15004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14985,
											"end": 15005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14980,
											"end": 15005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 15037,
											"end": 15038,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 15019,
											"end": 15039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15039,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 15019,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15014,
											"end": 15039,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15014,
											"end": 15039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15063,
											"end": 15064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15060,
											"end": 15061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15056,
											"end": 15065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15048,
											"end": 15065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15048,
											"end": 15065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15087,
											"end": 15088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15081,
											"end": 15085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15078,
											"end": 15089,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15075,
											"end": 15112,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15075,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 15075,
											"end": 15112,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15092,
											"end": 15110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15075,
											"end": 15112,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 15075,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 15119,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 15119,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 15119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 15119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 15119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15306,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 15125,
											"end": 15306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15298,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 15261,
											"end": 15262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15253,
											"end": 15259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15249,
											"end": 15263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15242,
											"end": 15299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15678,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15312,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15454,
											"end": 15457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15475,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 15539,
											"end": 15541,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15534,
											"end": 15537,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 15475,
											"end": 15542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15475,
											"end": 15542,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 15475,
											"end": 15542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15468,
											"end": 15542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15468,
											"end": 15542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15551,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 15640,
											"end": 15643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15551,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 15551,
											"end": 15644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15551,
											"end": 15644,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 15551,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15669,
											"end": 15671,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15664,
											"end": 15667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15660,
											"end": 15672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15653,
											"end": 15672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15653,
											"end": 15672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15312,
											"end": 15678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16103,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 15684,
											"end": 16103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15850,
											"end": 15854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15888,
											"end": 15890,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15877,
											"end": 15886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15873,
											"end": 15891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15865,
											"end": 15891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15865,
											"end": 15891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15937,
											"end": 15946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15931,
											"end": 15935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15927,
											"end": 15947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 15921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15908,
											"end": 15925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15901,
											"end": 15948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15965,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 16091,
											"end": 16095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15965,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15965,
											"end": 16096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15965,
											"end": 16096,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 15965,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15957,
											"end": 16096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15957,
											"end": 16096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16109,
											"end": 16289,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 16109,
											"end": 16289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16157,
											"end": 16234,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16154,
											"end": 16155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16147,
											"end": 16235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16254,
											"end": 16258,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 16251,
											"end": 16252,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16244,
											"end": 16259,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16278,
											"end": 16282,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16275,
											"end": 16276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16268,
											"end": 16283,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16475,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 16295,
											"end": 16475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16343,
											"end": 16420,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16340,
											"end": 16341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16333,
											"end": 16421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16444,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 16437,
											"end": 16438,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16430,
											"end": 16445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16464,
											"end": 16468,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16461,
											"end": 16462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16454,
											"end": 16469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16624,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 16481,
											"end": 16624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16538,
											"end": 16543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16569,
											"end": 16575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16563,
											"end": 16576,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16585,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16585,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 16585,
											"end": 16618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16585,
											"end": 16618,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 16585,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16624,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16481,
											"end": 16624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16981,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 16630,
											"end": 16981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16749,
											"end": 16751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16737,
											"end": 16746,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16728,
											"end": 16735,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16724,
											"end": 16747,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16720,
											"end": 16752,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16717,
											"end": 16836,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16717,
											"end": 16836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 16717,
											"end": 16836,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 16755,
											"end": 16834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 16755,
											"end": 16834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16834,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 16755,
											"end": 16834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16717,
											"end": 16836,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 16717,
											"end": 16836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16875,
											"end": 16876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16900,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 16956,
											"end": 16963,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16947,
											"end": 16953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16936,
											"end": 16945,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16932,
											"end": 16954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16900,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 16900,
											"end": 16964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16900,
											"end": 16964,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 16900,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16890,
											"end": 16964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16890,
											"end": 16964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16846,
											"end": 16974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16981,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16987,
											"end": 17072,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 16987,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17032,
											"end": 17039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17061,
											"end": 17066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17050,
											"end": 17066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17050,
											"end": 17066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16987,
											"end": 17072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16987,
											"end": 17072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16987,
											"end": 17072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16987,
											"end": 17072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17078,
											"end": 17236,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 17078,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17136,
											"end": 17145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17169,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 17187,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 17196,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 17222,
											"end": 17227,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 17196,
											"end": 17228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17196,
											"end": 17228,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 17196,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17187,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 17187,
											"end": 17229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17187,
											"end": 17229,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 17187,
											"end": 17229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17169,
											"end": 17230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 17169,
											"end": 17230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17169,
											"end": 17230,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 17169,
											"end": 17230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17156,
											"end": 17230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17156,
											"end": 17230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17078,
											"end": 17236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17078,
											"end": 17236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17078,
											"end": 17236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17078,
											"end": 17236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17389,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 17242,
											"end": 17389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 17376,
											"end": 17381,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 17337,
											"end": 17382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17382,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 17337,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17332,
											"end": 17335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17325,
											"end": 17383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17389,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 17389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17395,
											"end": 17509,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 17395,
											"end": 17509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17462,
											"end": 17468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17490,
											"end": 17502,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17480,
											"end": 17502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17480,
											"end": 17502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17395,
											"end": 17509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17395,
											"end": 17509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17395,
											"end": 17509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17395,
											"end": 17509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17699,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 17515,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17614,
											"end": 17625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17648,
											"end": 17654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17643,
											"end": 17646,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17636,
											"end": 17655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17688,
											"end": 17692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17683,
											"end": 17686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17679,
											"end": 17693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17699,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17837,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 17705,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17772,
											"end": 17776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17795,
											"end": 17798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17787,
											"end": 17798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17825,
											"end": 17829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17820,
											"end": 17823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17816,
											"end": 17830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17837,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17705,
											"end": 17837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17951,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 17843,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17920,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 17938,
											"end": 17943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17920,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 17920,
											"end": 17944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17920,
											"end": 17944,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 17920,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17915,
											"end": 17918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17908,
											"end": 17945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17843,
											"end": 17951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 18136,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 17957,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18047,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 18089,
											"end": 18092,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18081,
											"end": 18087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18047,
											"end": 18093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 18047,
											"end": 18093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18047,
											"end": 18093,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 18047,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18125,
											"end": 18129,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18120,
											"end": 18123,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18116,
											"end": 18130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18102,
											"end": 18130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18102,
											"end": 18130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 18136,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 18136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 18136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 18136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17957,
											"end": 18136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18255,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 18142,
											"end": 18255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18212,
											"end": 18216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18239,
											"end": 18242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18235,
											"end": 18249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18227,
											"end": 18249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18255,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18142,
											"end": 18255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18291,
											"end": 19023,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 18291,
											"end": 19023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18410,
											"end": 18413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18439,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 18487,
											"end": 18492,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18439,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 18439,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18439,
											"end": 18493,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 18439,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 18588,
											"end": 18594,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18583,
											"end": 18586,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 18509,
											"end": 18595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18509,
											"end": 18595,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 18509,
											"end": 18595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18502,
											"end": 18595,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18502,
											"end": 18595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18619,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 18669,
											"end": 18674,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18619,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 18619,
											"end": 18675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18619,
											"end": 18675,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 18619,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18698,
											"end": 18705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18729,
											"end": 18730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18739,
											"end": 18745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18736,
											"end": 18737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18733,
											"end": 18746,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18815,
											"end": 18821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18809,
											"end": 18822,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18842,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 18901,
											"end": 18904,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 18886,
											"end": 18899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18842,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 18842,
											"end": 18905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18842,
											"end": 18905,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 18842,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18835,
											"end": 18905,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 18835,
											"end": 18905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18928,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 18981,
											"end": 18987,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18928,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 18928,
											"end": 18988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18928,
											"end": 18988,
											"name": "tag",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 18928,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 18988,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18918,
											"end": 18988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18774,
											"end": 18998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18761,
											"end": 18762,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18758,
											"end": 18759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18754,
											"end": 18763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18749,
											"end": 18763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18749,
											"end": 18763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 18714,
											"end": 18998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18718,
											"end": 18732,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19014,
											"end": 19017,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19007,
											"end": 19017,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 19007,
											"end": 19017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18415,
											"end": 19023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18415,
											"end": 19023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18415,
											"end": 19023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18291,
											"end": 19023,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18291,
											"end": 19023,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18291,
											"end": 19023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18291,
											"end": 19023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18291,
											"end": 19023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19292,
											"end": 19296,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19330,
											"end": 19333,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 19319,
											"end": 19328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19315,
											"end": 19334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19307,
											"end": 19334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19307,
											"end": 19334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 19412,
											"end": 19413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19401,
											"end": 19410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19397,
											"end": 19414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19388,
											"end": 19394,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 19344,
											"end": 19415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19415,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 19344,
											"end": 19415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19425,
											"end": 19505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 19501,
											"end": 19503,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19490,
											"end": 19499,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19486,
											"end": 19504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19477,
											"end": 19483,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 19425,
											"end": 19505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 19425,
											"end": 19505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19425,
											"end": 19505,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 19425,
											"end": 19505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19552,
											"end": 19561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19546,
											"end": 19550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19562,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19526,
											"end": 19535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19522,
											"end": 19540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19515,
											"end": 19563,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19580,
											"end": 19688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 19683,
											"end": 19687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19674,
											"end": 19680,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19580,
											"end": 19688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 19580,
											"end": 19688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19580,
											"end": 19688,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 19580,
											"end": 19688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19572,
											"end": 19688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19572,
											"end": 19688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 19770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 19766,
											"end": 19768,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 19755,
											"end": 19764,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19751,
											"end": 19769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19742,
											"end": 19748,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 19770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 19698,
											"end": 19770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 19770,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 19698,
											"end": 19770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19780,
											"end": 19853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 19848,
											"end": 19851,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 19837,
											"end": 19846,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19833,
											"end": 19852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19824,
											"end": 19830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19780,
											"end": 19853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 19780,
											"end": 19853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19780,
											"end": 19853,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 19780,
											"end": 19853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19029,
											"end": 19860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20115,
											"end": 20119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20153,
											"end": 20156,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 20142,
											"end": 20151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20138,
											"end": 20157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20130,
											"end": 20157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20130,
											"end": 20157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20167,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 20235,
											"end": 20236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20224,
											"end": 20233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20220,
											"end": 20237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20211,
											"end": 20217,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 20167,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 20167,
											"end": 20238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20167,
											"end": 20238,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 20167,
											"end": 20238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 20316,
											"end": 20318,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20305,
											"end": 20314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20301,
											"end": 20319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20292,
											"end": 20298,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 20248,
											"end": 20320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20330,
											"end": 20410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 20406,
											"end": 20408,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20395,
											"end": 20404,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20391,
											"end": 20409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20382,
											"end": 20388,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20330,
											"end": 20410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 20330,
											"end": 20410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20330,
											"end": 20410,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 20330,
											"end": 20410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20420,
											"end": 20500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 20496,
											"end": 20498,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20485,
											"end": 20494,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20481,
											"end": 20499,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20472,
											"end": 20478,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20420,
											"end": 20500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 20420,
											"end": 20500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20420,
											"end": 20500,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 20420,
											"end": 20500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20510,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 20578,
											"end": 20581,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 20567,
											"end": 20576,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20563,
											"end": 20582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20554,
											"end": 20560,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20510,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 20510,
											"end": 20583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20510,
											"end": 20583,
											"name": "tag",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 20510,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 20661,
											"end": 20664,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 20650,
											"end": 20659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20646,
											"end": 20665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20637,
											"end": 20643,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 20593,
											"end": 20666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20666,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 20593,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 20673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20767,
											"end": 20773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20775,
											"end": 20781,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20832,
											"end": 20834,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20820,
											"end": 20829,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20811,
											"end": 20818,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20807,
											"end": 20830,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20803,
											"end": 20835,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 20800,
											"end": 20919,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20800,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 20800,
											"end": 20919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20838,
											"end": 20917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 20838,
											"end": 20917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 20838,
											"end": 20917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20838,
											"end": 20917,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 20838,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20800,
											"end": 20919,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 20800,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20958,
											"end": 20959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20983,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 21039,
											"end": 21046,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21030,
											"end": 21036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21019,
											"end": 21028,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21015,
											"end": 21037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20983,
											"end": 21047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 20983,
											"end": 21047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20983,
											"end": 21047,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 20983,
											"end": 21047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21047,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20929,
											"end": 21057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21096,
											"end": 21098,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21122,
											"end": 21186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 21178,
											"end": 21185,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21169,
											"end": 21175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21158,
											"end": 21167,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21154,
											"end": 21176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21122,
											"end": 21186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 21122,
											"end": 21186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21122,
											"end": 21186,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 21122,
											"end": 21186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21112,
											"end": 21186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21112,
											"end": 21186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21067,
											"end": 21196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21235,
											"end": 21237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21261,
											"end": 21325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 21317,
											"end": 21324,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21308,
											"end": 21314,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21297,
											"end": 21306,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21293,
											"end": 21315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21261,
											"end": 21325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 21261,
											"end": 21325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21261,
											"end": 21325,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 21261,
											"end": 21325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21251,
											"end": 21325,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21251,
											"end": 21325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21206,
											"end": 21335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 21342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21497,
											"end": 21501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21535,
											"end": 21537,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 21524,
											"end": 21533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21520,
											"end": 21538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21512,
											"end": 21538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21512,
											"end": 21538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21548,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 21616,
											"end": 21617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21605,
											"end": 21614,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21601,
											"end": 21618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21592,
											"end": 21598,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21548,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 21548,
											"end": 21619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21548,
											"end": 21619,
											"name": "tag",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 21548,
											"end": 21619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 21697,
											"end": 21699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21686,
											"end": 21695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21682,
											"end": 21700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21673,
											"end": 21679,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 21629,
											"end": 21701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 21779,
											"end": 21781,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21768,
											"end": 21777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21764,
											"end": 21782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21755,
											"end": 21761,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 21711,
											"end": 21783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21348,
											"end": 21790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21796,
											"end": 21987,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21796,
											"end": 21987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21836,
											"end": 21839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21855,
											"end": 21875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 21873,
											"end": 21874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21855,
											"end": 21875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 21855,
											"end": 21875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21855,
											"end": 21875,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 21855,
											"end": 21875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21850,
											"end": 21875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21850,
											"end": 21875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21889,
											"end": 21909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 21907,
											"end": 21908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21889,
											"end": 21909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 21889,
											"end": 21909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21889,
											"end": 21909,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 21889,
											"end": 21909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21884,
											"end": 21909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21884,
											"end": 21909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21932,
											"end": 21933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21929,
											"end": 21930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21925,
											"end": 21934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21918,
											"end": 21934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21918,
											"end": 21934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21953,
											"end": 21956,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21950,
											"end": 21951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21947,
											"end": 21957,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 21980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 21980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 21944,
											"end": 21980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21960,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 21960,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 21960,
											"end": 21978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21960,
											"end": 21978,
											"name": "tag",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 21960,
											"end": 21978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21944,
											"end": 21980,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 21944,
											"end": 21980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21796,
											"end": 21987,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21796,
											"end": 21987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21796,
											"end": 21987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21796,
											"end": 21987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21796,
											"end": 21987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"AutomatorCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BUY_TAX()": "02af37bb",
							"SELL_TAX()": "54ad8aee",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"artistTax()": "d862686b",
							"artistWallet()": "a3342fba",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"devTax()": "665c6de9",
							"devWallet()": "8ea5220f",
							"enableTrading()": "8a8c523c",
							"isExcludedFromFee(address)": "5342acb4",
							"lpTax()": "1de3b450",
							"marketingTax()": "1d2cb02d",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pair()": "a8aa1b31",
							"renounceOwnership()": "715018a6",
							"router()": "f887ea40",
							"setExcludedFromFee(address,bool)": "6612e66f",
							"setSwapThreshold(uint256)": "9d0014b1",
							"swapThreshold()": "0445b667",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"tradingEnabled()": "4ada218b",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateWallets(address,address,address)": "147c9f6d",
							"withdrawStuckTokens(address)": "cb963728"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnbReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiquidity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUY_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELL_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"artistTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"artistWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IPancakeRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"setExcludedFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setSwapThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_artist\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketing\",\"type\":\"address\"}],\"name\":\"updateWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawStuckTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AutomatorCoin.sol\":\"ATC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"AutomatorCoin.sol\":{\"keccak256\":\"0xce0a7251af5475c355606c2930ba57ec4d02c9f4a336883bbeb3a76f18bafe7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26dd8e07b7654e794d4281ba20d93dec5310382c4ea72290480f6730383bacf3\",\"dweb:/ipfs/QmUS4diewZzRK2ik3GxTx59duuG3N24RctfPt6wdWeedsk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1068,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "router",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IPancakeRouter)1049"
							},
							{
								"astId": 1070,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "pair",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1082,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "lpTax",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1085,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "devTax",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1088,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "artistTax",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1091,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "marketingTax",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1093,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "devWallet",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 1095,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "artistWallet",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 1097,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 1104,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "swapThreshold",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1106,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "swapping",
								"offset": 0,
								"slot": "17",
								"type": "t_bool"
							},
							{
								"astId": 1108,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "tradingEnabled",
								"offset": 1,
								"slot": "17",
								"type": "t_bool"
							},
							{
								"astId": 1112,
								"contract": "AutomatorCoin.sol:ATC",
								"label": "isExcludedFromFee",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IPancakeRouter)1049": {
								"encoding": "inplace",
								"label": "contract IPancakeRouter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPancakeFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AutomatorCoin.sol\":\"IPancakeFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"AutomatorCoin.sol\":{\"keccak256\":\"0xce0a7251af5475c355606c2930ba57ec4d02c9f4a336883bbeb3a76f18bafe7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26dd8e07b7654e794d4281ba20d93dec5310382c4ea72290480f6730383bacf3\",\"dweb:/ipfs/QmUS4diewZzRK2ik3GxTx59duuG3N24RctfPt6wdWeedsk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPancakeRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AutomatorCoin.sol\":\"IPancakeRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"AutomatorCoin.sol\":{\"keccak256\":\"0xce0a7251af5475c355606c2930ba57ec4d02c9f4a336883bbeb3a76f18bafe7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26dd8e07b7654e794d4281ba20d93dec5310382c4ea72290480f6730383bacf3\",\"dweb:/ipfs/QmUS4diewZzRK2ik3GxTx59duuG3N24RctfPt6wdWeedsk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 864,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 864,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 864,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 864,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 864,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 864,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 864,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 864,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 864,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 864,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 864,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 864,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 864,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 864,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 864,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 864,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 864,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9768:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"AutomatorCoin.sol": {
				"ast": {
					"absolutePath": "AutomatorCoin.sol",
					"exportedSymbols": {
						"ATC": [
							1707
						],
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"IPancakeFactory": [
							1059
						],
						"IPancakeRouter": [
							1049
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 1708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1708,
							"sourceUnit": 865,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1708,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1708,
							"sourceUnit": 350,
							"src": "167:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPancakeRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1049,
							"linearizedBaseContracts": [
								1049
							],
							"name": "IPancakeRouter",
							"nameLocation": "241:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "271:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:7"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "304:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:9:7"
									},
									"scope": 1049,
									"src": "262:51:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "327:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:2:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "357:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:9:7"
									},
									"scope": 1049,
									"src": "318:48:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "380:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "413:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "405:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "433:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "428:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "466:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "461:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "461:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "495:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "490:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "525:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "517:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "542:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "537:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:161:7"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "583:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "589:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "595:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "595:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:18:7"
									},
									"scope": 1049,
									"src": "371:230:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "615:50:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "680:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "675:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "703:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "698:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "744:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "725:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1039,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "725:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1040,
													"nodeType": "ArrayTypeName",
													"src": "725:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "766:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "758:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "783:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "778:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:132:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:7"
									},
									"scope": 1049,
									"src": "606:201:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1708,
							"src": "231:578:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPancakeFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1059,
							"linearizedBaseContracts": [
								1059
							],
							"name": "IPancakeFactory",
							"nameLocation": "821:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 1058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "852:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "871:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "863:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "887:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "879:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:32:7"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "921:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "913:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:14:7"
									},
									"scope": 1059,
									"src": "843:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1708,
							"src": "811:118:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1060,
										"name": "ERC20",
										"nameLocations": [
											"947:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "947:5:7"
									},
									"id": 1061,
									"nodeType": "InheritanceSpecifier",
									"src": "947:5:7"
								},
								{
									"baseName": {
										"id": 1062,
										"name": "Ownable",
										"nameLocations": [
											"954:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "954:7:7"
									},
									"id": 1063,
									"nodeType": "InheritanceSpecifier",
									"src": "954:7:7"
								},
								{
									"baseName": {
										"id": 1064,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"963:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "963:15:7"
									},
									"id": 1065,
									"nodeType": "InheritanceSpecifier",
									"src": "963:15:7"
								}
							],
							"canonicalName": "ATC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "ATC",
							"nameLocation": "940:3:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 1068,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "1007:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "985:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
										"typeString": "contract IPancakeRouter"
									},
									"typeName": {
										"id": 1067,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1066,
											"name": "IPancakeRouter",
											"nameLocations": [
												"985:14:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1049,
											"src": "985:14:7"
										},
										"referencedDeclaration": 1049,
										"src": "985:14:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
											"typeString": "contract IPancakeRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8aa1b31",
									"id": 1070,
									"mutability": "mutable",
									"name": "pair",
									"nameLocation": "1034:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1019:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1069,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1019:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "02af37bb",
									"id": 1073,
									"mutability": "constant",
									"name": "BUY_TAX",
									"nameLocation": "1102:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1078:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1078:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32353030",
										"id": 1072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1112:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2500_by_1",
											"typeString": "int_const 2500"
										},
										"value": "2500"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54ad8aee",
									"id": 1076,
									"mutability": "constant",
									"name": "SELL_TAX",
									"nameLocation": "1153:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1129:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1129:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32353030",
										"id": 1075,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1164:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2500_by_1",
											"typeString": "int_const 2500"
										},
										"value": "2500"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1079,
									"mutability": "constant",
									"name": "TAX_DENOMINATOR",
									"nameLocation": "1206:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1181:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1224:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1de3b450",
									"id": 1082,
									"mutability": "mutable",
									"name": "lpTax",
									"nameLocation": "1275:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1260:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1260:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 1081,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1283:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "665c6de9",
									"id": 1085,
									"mutability": "mutable",
									"name": "devTax",
									"nameLocation": "1324:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1309:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1083,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1309:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1084,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1333:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d862686b",
									"id": 1088,
									"mutability": "mutable",
									"name": "artistTax",
									"nameLocation": "1374:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1359:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1086,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1359:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 1087,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1386:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d2cb02d",
									"id": 1091,
									"mutability": "mutable",
									"name": "marketingTax",
									"nameLocation": "1423:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1408:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1089,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1408:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 1090,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1438:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ea5220f",
									"id": 1093,
									"mutability": "mutable",
									"name": "devWallet",
									"nameLocation": "1491:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1476:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1092,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1476:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3342fba",
									"id": 1095,
									"mutability": "mutable",
									"name": "artistWallet",
									"nameLocation": "1521:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1506:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1094,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1506:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1097,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "1554:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1539:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1096,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1539:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0445b667",
									"id": 1104,
									"mutability": "mutable",
									"name": "swapThreshold",
									"nameLocation": "1612:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1597:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1098,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1597:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000"
										},
										"id": 1103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35305f303030",
											"id": 1099,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1628:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50000_by_1",
												"typeString": "int_const 50000"
											},
											"value": "50_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1102,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1100,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1637:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1101,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1641:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1637:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1628:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1106,
									"mutability": "mutable",
									"name": "swapping",
									"nameLocation": "1662:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1649:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1105,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1649:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 1108,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "1712:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1700:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1107,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1700:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5342acb4",
									"id": 1112,
									"mutability": "mutable",
									"name": "isExcludedFromFee",
									"nameLocation": "1764:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "1732:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1111,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1109,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1740:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1732:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1110,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1751:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561",
									"id": 1120,
									"name": "SwapAndLiquify",
									"nameLocation": "1794:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensSwapped",
												"nameLocation": "1817:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1809:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": false,
												"mutability": "mutable",
												"name": "bnbReceived",
												"nameLocation": "1840:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1832:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensIntoLiquidity",
												"nameLocation": "1861:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1853:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:73:7"
									},
									"src": "1788:94:7"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "1953:790:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1969:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1973:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1969:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "315f3030305f3030305f303030",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1981:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1997:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2001:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1997:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "1981:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														],
														"id": 1131,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1963:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1963:41:7"
											},
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "2049:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
															"typeString": "contract IPancakeRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2073:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1142,
															"name": "IPancakeRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "2058:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPancakeRouter_$1049_$",
																"typeString": "type(contract IPancakeRouter)"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2058:58:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
															"typeString": "contract IPancakeRouter"
														}
													},
													"src": "2049:67:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
														"typeString": "contract IPancakeRouter"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "2049:67:7"
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2126:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1156,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2186:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ATC_$1707",
																			"typeString": "contract ATC"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ATC_$1707",
																			"typeString": "contract ATC"
																		}
																	],
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2178:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1154,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2178:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2178:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1158,
																		"name": "router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "2193:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																			"typeString": "contract IPancakeRouter"
																		}
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2200:4:7",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1013,
																	"src": "2193:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2193:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1149,
																				"name": "router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1068,
																				"src": "2149:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																					"typeString": "contract IPancakeRouter"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2156:7:7",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1008,
																			"src": "2149:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2149:16:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1148,
																	"name": "IPancakeFactory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "2133:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$1059_$",
																		"typeString": "type(contract IPancakeFactory)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2133:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeFactory_$1059",
																	"typeString": "contract IPancakeFactory"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2167:10:7",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "2133:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2133:74:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2126:81:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2126:81:7"
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1164,
														"name": "devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "2241:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837336144643942304661653835314639663230334261353334364432343043333264356166323539",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2253:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x73aDd9B0Fae851F9f203Ba5346D240C32d5af259"
													},
													"src": "2241:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "2241:54:7"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1168,
														"name": "artistWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "2305:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307866626433333642313044334161303033624230343931323737626431623130306137363030623741",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xfbd336B10D3Aa003bB0491277bd1b100a7600b7A"
													},
													"src": "2305:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "2305:57:7"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2372:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307863356539373935313465624538303137324564426137633763664533384235393945346534383233",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2390:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xc5e979514ebE80172EdBa7c7cfE38B599E4e4823"
													},
													"src": "2372:60:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "2372:60:7"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1176,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "2507:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1179,
														"indexExpression": {
															"expression": {
																"id": 1177,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2525:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2529:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2525:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2507:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2539:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2507:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "2507:36:7"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1183,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "2553:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2579:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2571:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2571:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2571:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2553:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2588:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2553:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "2553:39:7"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1192,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "2602:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1194,
														"indexExpression": {
															"id": 1193,
															"name": "devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2620:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2602:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2633:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2602:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "2602:35:7"
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1198,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "2647:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1200,
														"indexExpression": {
															"id": 1199,
															"name": "artistWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "2665:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2647:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2681:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2647:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "2647:38:7"
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1204,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "2695:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1206,
														"indexExpression": {
															"id": 1205,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "2713:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2695:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2732:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2695:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2695:41:7"
											}
										]
									},
									"id": 1211,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4175746f6d61746f7220436f696e",
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1908:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1b4d3011f21241dedd9d9a18f9349a79675c6192fa1e77a5b9901c52cc734dd7",
														"typeString": "literal_string \"Automator Coin\""
													},
													"value": "Automator Coin"
												},
												{
													"hexValue": "415443",
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1926:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d8c2c2ecaf186c5f218d30e392a4cc080daeaf4b15f1f69eeec142250a711720",
														"typeString": "literal_string \"ATC\""
													},
													"value": "ATC"
												}
											],
											"id": 1125,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1122,
												"name": "ERC20",
												"nameLocations": [
													"1902:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1902:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:30:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1127,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1941:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1945:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1941:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1129,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1126,
												"name": "Ownable",
												"nameLocations": [
													"1933:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1933:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1933:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:2:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:7"
									},
									"scope": 1707,
									"src": "1888:855:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "2833:86:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1222,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "2859:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2859:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "2873:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "2884:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "_customTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "2843:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "2843:48:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2908:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1220,
												"id": 1229,
												"nodeType": "Return",
												"src": "2901:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2758:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2809:8:7"
									},
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2775:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2767:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2794:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2786:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2766:35:7"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "2827:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2827:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:6:7"
									},
									"scope": 1707,
									"src": "2749:170:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										547
									],
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "3029:170:7",
										"statements": [
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "3047:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1262,
														"src": "3039:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1243,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3039:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1245,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3057:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3039:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1249,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "3103:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3112:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1248,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "3079:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "3079:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3145:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3153:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3164:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "_customTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "3129:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3129:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "3129:42:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3188:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1242,
												"id": 1261,
												"nodeType": "Return",
												"src": "3181:11:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2934:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3005:8:7"
									},
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2955:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2947:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2971:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2963:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2990:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "2982:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:51:7"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3023:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3023:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:6:7"
									},
									"scope": 1707,
									"src": "2925:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "3303:1434:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1275,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "3321:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3330:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3321:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3333:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3313:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3313:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "3313:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1282,
																	"name": "tradingEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "3395:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1283,
																		"name": "isExcludedFromFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "3413:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1285,
																	"indexExpression": {
																		"id": 1284,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "3431:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3413:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3395:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 1287,
																	"name": "isExcludedFromFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "3442:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1289,
																"indexExpression": {
																	"id": 1288,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "3460:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3442:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3395:75:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e67206e6f7420656e61626c6564",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3472:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
																"typeString": "literal_string \"Trading not enabled\""
															},
															"value": "Trading not enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aba53b7bc56fd10d1bb2cac393e26b489ca53cf0c676cd3f5a7c5c185bf6cd4c",
																"typeString": "literal_string \"Trading not enabled\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3387:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3387:107:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "3387:107:7"
											},
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "3513:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "3505:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3505:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"initialValue": {
													"hexValue": "30",
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3525:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3505:21:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3540:26:7",
														"subExpression": {
															"baseExpression": {
																"id": 1298,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "3541:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1300,
															"indexExpression": {
																"id": 1299,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "3559:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3541:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3570:29:7",
														"subExpression": {
															"baseExpression": {
																"id": 1302,
																"name": "isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "3571:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1304,
															"indexExpression": {
																"id": 1303,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "3589:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3571:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3540:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "3537:1141:7",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "3601:1077:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1307,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "3618:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1308,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "3631:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3618:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1320,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "3736:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1321,
																		"name": "pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "3746:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3736:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1333,
																"nodeType": "IfStatement",
																"src": "3733:107:7",
																"trueBody": {
																	"id": 1332,
																	"nodeType": "Block",
																	"src": "3752:88:7",
																	"statements": [
																		{
																			"expression": {
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1323,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1295,
																					"src": "3777:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1326,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1324,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1269,
																									"src": "3790:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 1325,
																									"name": "BUY_TAX",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1073,
																									"src": "3799:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3790:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1327,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3789:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 1328,
																						"name": "TAX_DENOMINATOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "3810:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3789:36:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3777:48:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1331,
																			"nodeType": "ExpressionStatement",
																			"src": "3777:48:7"
																		}
																	]
																}
															},
															"id": 1334,
															"nodeType": "IfStatement",
															"src": "3615:225:7",
															"trueBody": {
																"id": 1319,
																"nodeType": "Block",
																"src": "3637:90:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1310,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1295,
																				"src": "3663:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1313,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1311,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1269,
																								"src": "3676:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1312,
																								"name": "SELL_TAX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1076,
																								"src": "3685:8:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3676:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1314,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3675:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1315,
																					"name": "TAX_DENOMINATOR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "3697:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3675:37:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3663:49:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1318,
																		"nodeType": "ExpressionStatement",
																		"src": "3663:49:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1335,
																	"name": "taxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "3869:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3881:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3869:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1435,
															"nodeType": "IfStatement",
															"src": "3866:802:7",
															"trueBody": {
																"id": 1434,
																"nodeType": "Block",
																"src": "3884:784:7",
																"statements": [
																	{
																		"assignments": [
																			1339
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1339,
																				"mutability": "mutable",
																				"name": "lpTokens",
																				"nameLocation": "3910:8:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "3902:16:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1338,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3902:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1346,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1342,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1340,
																							"name": "taxAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1295,
																							"src": "3922:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1341,
																							"name": "lpTax",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1082,
																							"src": "3934:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3922:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1343,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3921:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1344,
																				"name": "SELL_TAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "3943:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3921:30:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3902:49:7"
																	},
																	{
																		"assignments": [
																			1348
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1348,
																				"mutability": "mutable",
																				"name": "devTokens",
																				"nameLocation": "3977:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "3969:17:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1347,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3969:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1355,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1351,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1349,
																							"name": "taxAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1295,
																							"src": "3990:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1350,
																							"name": "devTax",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1085,
																							"src": "4002:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3990:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1352,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3989:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1353,
																				"name": "SELL_TAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "4012:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3989:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3969:51:7"
																	},
																	{
																		"assignments": [
																			1357
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1357,
																				"mutability": "mutable",
																				"name": "artistTokens",
																				"nameLocation": "4046:12:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "4038:20:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1356,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4038:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1364,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1358,
																							"name": "taxAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1295,
																							"src": "4062:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1359,
																							"name": "artistTax",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1088,
																							"src": "4074:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4062:21:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1361,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4061:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1362,
																				"name": "SELL_TAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "4087:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4061:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4038:57:7"
																	},
																	{
																		"assignments": [
																			1366
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1366,
																				"mutability": "mutable",
																				"name": "marketingTokens",
																				"nameLocation": "4121:15:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "4113:23:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1365,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4113:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1374,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1369,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1367,
																						"name": "taxAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1295,
																						"src": "4139:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1368,
																						"name": "lpTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1339,
																						"src": "4151:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4139:20:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1370,
																					"name": "devTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "4162:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4139:32:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1372,
																				"name": "artistTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1357,
																				"src": "4174:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4139:47:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4113:73:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1378,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1265,
																					"src": "4221:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1381,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "4237:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ATC_$1707",
																								"typeString": "contract ATC"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ATC_$1707",
																								"typeString": "contract ATC"
																							}
																						],
																						"id": 1380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4229:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1379,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4229:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4229:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1383,
																					"name": "lpTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1339,
																					"src": "4244:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1375,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "4205:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_ATC_$1707_$",
																						"typeString": "type(contract super ATC)"
																					}
																				},
																				"id": 1377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4211:9:7",
																				"memberName": "_transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 594,
																				"src": "4205:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4205:48:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1385,
																		"nodeType": "ExpressionStatement",
																		"src": "4205:48:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1389,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1265,
																					"src": "4287:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1390,
																					"name": "devWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "4295:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1391,
																					"name": "devTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "4306:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1386,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "4271:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_ATC_$1707_$",
																						"typeString": "type(contract super ATC)"
																					}
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4277:9:7",
																				"memberName": "_transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 594,
																				"src": "4271:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4271:45:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1393,
																		"nodeType": "ExpressionStatement",
																		"src": "4271:45:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1397,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1265,
																					"src": "4350:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1398,
																					"name": "artistWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "4358:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1399,
																					"name": "artistTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1357,
																					"src": "4372:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1394,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "4334:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_ATC_$1707_$",
																						"typeString": "type(contract super ATC)"
																					}
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4340:9:7",
																				"memberName": "_transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 594,
																				"src": "4334:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4334:51:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1401,
																		"nodeType": "ExpressionStatement",
																		"src": "4334:51:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1405,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1265,
																					"src": "4419:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1406,
																					"name": "marketingWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "4427:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1407,
																					"name": "marketingTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1366,
																					"src": "4444:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1402,
																					"name": "super",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967271,
																					"src": "4403:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_super$_ATC_$1707_$",
																						"typeString": "type(contract super ATC)"
																					}
																				},
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4409:9:7",
																				"memberName": "_transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 594,
																				"src": "4403:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4403:57:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1409,
																		"nodeType": "ExpressionStatement",
																		"src": "4403:57:7"
																	},
																	{
																		"expression": {
																			"id": 1412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1410,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "4479:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1411,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1295,
																				"src": "4489:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4479:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1413,
																		"nodeType": "ExpressionStatement",
																		"src": "4479:19:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 1425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 1416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1414,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1267,
																						"src": "4520:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"id": 1415,
																						"name": "pair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1070,
																						"src": "4533:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "4520:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1424,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1420,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "4559:4:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_ATC_$1707",
																											"typeString": "contract ATC"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_ATC_$1707",
																											"typeString": "contract ATC"
																										}
																									],
																									"id": 1419,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4551:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1418,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "4551:7:7",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1421,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4551:13:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1417,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 450,
																							"src": "4541:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 1422,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4541:24:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1423,
																						"name": "swapThreshold",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "4569:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4541:41:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "4520:62:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"id": 1427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "4586:9:7",
																				"subExpression": {
																					"id": 1426,
																					"name": "swapping",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "4587:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4520:75:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1433,
																		"nodeType": "IfStatement",
																		"src": "4517:137:7",
																		"trueBody": {
																			"id": 1432,
																			"nodeType": "Block",
																			"src": "4597:57:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1429,
																							"name": "swapAndLiquify",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1587,
																							"src": "4619:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																								"typeString": "function ()"
																							}
																						},
																						"id": 1430,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4619:16:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1431,
																					"nodeType": "ExpressionStatement",
																					"src": "4619:16:7"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "4704:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4712:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "4723:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1438,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4688:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ATC_$1707_$",
																"typeString": "type(contract super ATC)"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4694:9:7",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "4688:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4688:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "4688:42:7"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1271,
												"name": "nonReentrant",
												"nameLocations": [
													"3290:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3290:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3290:12:7"
										}
									],
									"name": "_customTransfer",
									"nameLocation": "3214:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3238:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3230:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3254:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3246:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3273:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3265:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3229:51:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3303:0:7"
									},
									"scope": 1707,
									"src": "3205:1532:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "4777:1049:7",
										"statements": [
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1450,
														"name": "swapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "4787:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4798:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4787:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "4787:15:7"
											},
											{
												"assignments": [
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "4820:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "4812:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4812:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4856:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4848:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4848:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4848:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1456,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "4838:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4838:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4812:50:7"
											},
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "4880:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "4872:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4872:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1465,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "4887:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4905:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "4887:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4872:34:7"
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "otherHalf",
														"nameLocation": "4924:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "4916:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4916:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1471,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "4936:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1472,
														"name": "half",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "4954:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4936:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4916:42:7"
											},
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "5030:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "5013:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1477,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5013:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1478,
															"nodeType": "ArrayTypeName",
															"src": "5013:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5051:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5037:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5041:7:7",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1481,
															"nodeType": "ArrayTypeName",
															"src": "5041:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5037:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5013:40:7"
											},
											{
												"expression": {
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1486,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "5063:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1488,
														"indexExpression": {
															"hexValue": "30",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5068:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5063:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1491,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ATC_$1707",
																	"typeString": "contract ATC"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ATC_$1707",
																	"typeString": "contract ATC"
																}
															],
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1489,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5063:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "5063:23:7"
											},
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1495,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "5096:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1497,
														"indexExpression": {
															"hexValue": "31",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5101:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5096:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1498,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "5106:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																	"typeString": "contract IPancakeRouter"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5113:4:7",
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1013,
															"src": "5106:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5106:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5096:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "5096:23:7"
											},
											{
												"assignments": [
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "initialBNB",
														"nameLocation": "5165:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "5157:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5157:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1507,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5186:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ATC_$1707",
																	"typeString": "contract ATC"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ATC_$1707",
																	"typeString": "contract ATC"
																}
															],
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5178:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1505,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5178:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5178:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5192:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5178:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5157:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1514,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5227:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5219:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5219:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5219:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1518,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "5242:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																		"typeString": "contract IPancakeRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																		"typeString": "contract IPancakeRouter"
																	}
																],
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5234:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5234:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5234:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1520,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "5251:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "5210:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5210:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "5210:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1526,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "5337:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1528,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "5346:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1531,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5360:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5352:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5352:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5352:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1533,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5367:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5373:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5367:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1523,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "5266:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																"typeString": "contract IPancakeRouter"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5273:50:7",
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1048,
														"src": "5266:57:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5266:126:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "5266:126:7"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "newBNB",
														"nameLocation": "5411:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "5403:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5403:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1546,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1541,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5428:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5420:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1539,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5420:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5420:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5434:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "5420:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1544,
														"name": "initialBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "5444:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5420:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5403:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1550,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5482:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5474:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5474:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5474:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1554,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "5497:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																		"typeString": "contract IPancakeRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																		"typeString": "contract IPancakeRouter"
																	}
																],
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5489:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5489:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5489:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1556,
															"name": "otherHalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "5506:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1547,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "5465:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5465:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "5465:51:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1566,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5585:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ATC_$1707",
																		"typeString": "contract ATC"
																	}
																],
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5577:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5577:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5577:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "otherHalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "5604:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5627:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5642:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5657:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x000000000000000000000000000000000000dEaD"
														},
														{
															"expression": {
																"id": 1572,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5713:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5719:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5713:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1559,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "5526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeRouter_$1049",
																	"typeString": "contract IPancakeRouter"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5533:15:7",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1034,
															"src": "5526:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1562,
																"name": "newBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "5556:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5526:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:212:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "5526:212:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1577,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "5769:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1578,
															"name": "newBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "5775:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1579,
															"name": "otherHalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "5783:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1576,
														"name": "SwapAndLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "5754:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5754:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "EmitStatement",
												"src": "5749:44:7"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "swapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "5803:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5814:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5803:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "5803:16:7"
											}
										]
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndLiquify",
									"nameLocation": "4752:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4766:2:7"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4777:0:7"
									},
									"scope": 1707,
									"src": "4743:1083:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "5876:38:7",
										"statements": [
											{
												"expression": {
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1592,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "5886:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5903:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5886:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "5886:21:7"
											}
										]
									},
									"functionSelector": "8a8c523c",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1590,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1589,
												"name": "onlyOwner",
												"nameLocations": [
													"5866:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5866:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5866:9:7"
										}
									],
									"name": "enableTrading",
									"nameLocation": "5841:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5854:2:7"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5876:0:7"
									},
									"scope": 1707,
									"src": "5832:82:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "6013:247:7",
										"statements": [
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1608,
														"name": "devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "6023:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1609,
														"name": "_dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "6035:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6023:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "6023:16:7"
											},
											{
												"expression": {
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1612,
														"name": "artistWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "6049:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1613,
														"name": "_artist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "6064:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6049:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1615,
												"nodeType": "ExpressionStatement",
												"src": "6049:22:7"
											},
											{
												"expression": {
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1616,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "6081:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1617,
														"name": "_marketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "6099:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6081:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "6081:28:7"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1620,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "6119:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1622,
														"indexExpression": {
															"id": 1621,
															"name": "devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "6137:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6119:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6150:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6119:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "6119:35:7"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1626,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "6164:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"id": 1627,
															"name": "artistWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "6182:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6164:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6198:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6164:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "6164:38:7"
											},
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1632,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "6212:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1634,
														"indexExpression": {
															"id": 1633,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "6230:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6212:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6249:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6212:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "6212:41:7"
											}
										]
									},
									"functionSelector": "147c9f6d",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1605,
												"name": "onlyOwner",
												"nameLocations": [
													"6003:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6003:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6003:9:7"
										}
									],
									"name": "updateWallets",
									"nameLocation": "5929:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "_dev",
												"nameLocation": "5951:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "5943:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "_artist",
												"nameLocation": "5965:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "5957:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "_marketing",
												"nameLocation": "5982:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "5974:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5974:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:51:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6013:0:7"
									},
									"scope": 1707,
									"src": "5920:340:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "6345:54:7",
										"statements": [
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1648,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "6355:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1650,
														"indexExpression": {
															"id": 1649,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "6373:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6355:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1651,
														"name": "excluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "6384:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6355:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "6355:37:7"
											}
										]
									},
									"functionSelector": "6612e66f",
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1645,
												"name": "onlyOwner",
												"nameLocations": [
													"6335:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6335:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6335:9:7"
										}
									],
									"name": "setExcludedFromFee",
									"nameLocation": "6275:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6302:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "6294:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "excluded",
												"nameLocation": "6316:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "6311:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6311:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:32:7"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6345:0:7"
									},
									"scope": 1707,
									"src": "6266:133:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1666,
										"nodeType": "Block",
										"src": "6466:39:7",
										"statements": [
											{
												"expression": {
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1662,
														"name": "swapThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "6476:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1663,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "6492:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6476:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "6476:22:7"
											}
										]
									},
									"functionSelector": "9d0014b1",
									"id": 1667,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1659,
												"name": "onlyOwner",
												"nameLocations": [
													"6456:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6456:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6456:9:7"
										}
									],
									"name": "setSwapThreshold",
									"nameLocation": "6414:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6439:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "6431:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6430:16:7"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:0:7"
									},
									"scope": 1707,
									"src": "6405:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "6574:155:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1675,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "6592:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1678,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6609:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ATC_$1707",
																			"typeString": "contract ATC"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ATC_$1707",
																			"typeString": "contract ATC"
																		}
																	],
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6601:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1676,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6601:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6601:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6592:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420776974686472617720415443",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6616:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01",
																"typeString": "literal_string \"Cannot withdraw ATC\""
															},
															"value": "Cannot withdraw ATC"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e78c5cb0987d592ab8971b81321bb34851764ea0aaaea61656ba71df0d856d01",
																"typeString": "literal_string \"Cannot withdraw ATC\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6584:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6584:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "6584:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1688,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6671:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6675:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6671:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6715:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ATC_$1707",
																				"typeString": "contract ATC"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ATC_$1707",
																				"typeString": "contract ATC"
																			}
																		],
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6707:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1694,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6707:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6707:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1691,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1669,
																			"src": "6690:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1690,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "6683:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6683:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$942",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6697:9:7",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 899,
																"src": "6683:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6683:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1685,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "6655:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1684,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "6648:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6648:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6662:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "6648:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "6648:74:7"
											}
										]
									},
									"functionSelector": "cb963728",
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1672,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1671,
												"name": "onlyOwner",
												"nameLocations": [
													"6564:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6564:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6564:9:7"
										}
									],
									"name": "withdrawStuckTokens",
									"nameLocation": "6520:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6548:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "6540:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6540:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6539:15:7"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6574:0:7"
									},
									"scope": 1707,
									"src": "6511:218:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "6762:2:7",
										"statements": []
									},
									"id": 1706,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6742:2:7"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6762:0:7"
									},
									"scope": 1707,
									"src": "6735:29:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1708,
							"src": "931:5835:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1120
							]
						}
					],
					"src": "32:6734:7"
				},
				"id": 7
			}
		}
	}
}